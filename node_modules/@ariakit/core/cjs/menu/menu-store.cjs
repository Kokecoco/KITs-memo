"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _XIZWLBI2cjs = require('../__chunks/XIZWLBI2.cjs');


var _PW36G76Lcjs = require('../__chunks/PW36G76L.cjs');
require('../__chunks/CCI5VM7E.cjs');
require('../__chunks/ULSPM3Y3.cjs');
require('../__chunks/H6ZQSQQL.cjs');
require('../__chunks/N667HVED.cjs');
require('../__chunks/QLWAGBAQ.cjs');








var _3QF3ODTRcjs = require('../__chunks/3QF3ODTR.cjs');



var _BTUHABP4cjs = require('../__chunks/BTUHABP4.cjs');
require('../__chunks/7WYII4AN.cjs');




var _3IVNQNIVcjs = require('../__chunks/3IVNQNIV.cjs');

// src/menu/menu-store.ts
function createMenuStore(_a = {}) {
  var _b = _a, {
    combobox,
    parent,
    menubar
  } = _b, props = _3IVNQNIVcjs.__objRest.call(void 0, _b, [
    "combobox",
    "parent",
    "menubar"
  ]);
  const parentIsMenubar = !!menubar && !parent;
  const store = _3QF3ODTRcjs.mergeStore.call(void 0, 
    props.store,
    _3QF3ODTRcjs.pick.call(void 0, parent, ["values"]),
    _3QF3ODTRcjs.omit.call(void 0, combobox, [
      "arrowElement",
      "anchorElement",
      "contentElement",
      "popoverElement",
      "disclosureElement"
    ])
  );
  _3QF3ODTRcjs.throwOnConflictingProps.call(void 0, props, store);
  const syncState = store.getState();
  const composite = _PW36G76Lcjs.createCompositeStore.call(void 0, _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, props), {
    store,
    orientation: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.orientation,
      syncState.orientation,
      "vertical"
    )
  }));
  const hovercard = _XIZWLBI2cjs.createHovercardStore.call(void 0, _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, props), {
    store,
    placement: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.placement,
      syncState.placement,
      "bottom-start"
    ),
    timeout: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.timeout,
      syncState.timeout,
      parentIsMenubar ? 0 : 150
    ),
    hideTimeout: _BTUHABP4cjs.defaultValue.call(void 0, props.hideTimeout, syncState.hideTimeout, 0)
  }));
  const initialState = _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, composite.getState()), hovercard.getState()), {
    initialFocus: _BTUHABP4cjs.defaultValue.call(void 0, syncState.initialFocus, "container"),
    values: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.values,
      syncState.values,
      props.defaultValues,
      {}
    )
  });
  const menu = _3QF3ODTRcjs.createStore.call(void 0, initialState, composite, hovercard, store);
  _3QF3ODTRcjs.setup.call(void 0, 
    menu,
    () => _3QF3ODTRcjs.sync.call(void 0, menu, ["mounted"], (state) => {
      if (state.mounted) return;
      menu.setState("activeId", null);
    })
  );
  _3QF3ODTRcjs.setup.call(void 0, 
    menu,
    () => _3QF3ODTRcjs.sync.call(void 0, parent, ["orientation"], (state) => {
      menu.setState(
        "placement",
        state.orientation === "vertical" ? "right-start" : "bottom-start"
      );
    })
  );
  return _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, composite), hovercard), menu), {
    combobox,
    parent,
    menubar,
    hideAll: () => {
      hovercard.hide();
      parent == null ? void 0 : parent.hideAll();
    },
    setInitialFocus: (value) => menu.setState("initialFocus", value),
    setValues: (values) => menu.setState("values", values),
    setValue: (name, value) => {
      if (name === "__proto__") return;
      if (name === "constructor") return;
      if (Array.isArray(name)) return;
      menu.setState("values", (values) => {
        const prevValue = values[name];
        const nextValue = _BTUHABP4cjs.applyState.call(void 0, value, prevValue);
        if (nextValue === prevValue) return values;
        return _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, values), {
          [name]: nextValue !== void 0 && nextValue
        });
      });
    }
  });
}


exports.createMenuStore = createMenuStore;
