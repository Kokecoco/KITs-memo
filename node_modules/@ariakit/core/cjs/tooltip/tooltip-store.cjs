"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _XIZWLBI2cjs = require('../__chunks/XIZWLBI2.cjs');
require('../__chunks/H6ZQSQQL.cjs');
require('../__chunks/N667HVED.cjs');
require('../__chunks/QLWAGBAQ.cjs');


var _3QF3ODTRcjs = require('../__chunks/3QF3ODTR.cjs');


var _BTUHABP4cjs = require('../__chunks/BTUHABP4.cjs');



var _3IVNQNIVcjs = require('../__chunks/3IVNQNIV.cjs');

// src/tooltip/tooltip-store.ts
function createTooltipStore(props = {}) {
  var _a;
  if (process.env.NODE_ENV !== "production") {
    if (props.type === "label") {
      console.warn(
        "The `type` option on the tooltip store is deprecated.",
        "Render a visually hidden label or use the `aria-label` or `aria-labelledby` attributes on the anchor element instead.",
        "See https://ariakit.org/components/tooltip#tooltip-anchors-must-have-accessible-names"
      );
    }
  }
  const syncState = (_a = props.store) == null ? void 0 : _a.getState();
  const hovercard = _XIZWLBI2cjs.createHovercardStore.call(void 0, _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, props), {
    placement: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.placement,
      syncState == null ? void 0 : syncState.placement,
      "top"
    ),
    hideTimeout: _BTUHABP4cjs.defaultValue.call(void 0, props.hideTimeout, syncState == null ? void 0 : syncState.hideTimeout, 0)
  }));
  const initialState = _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, hovercard.getState()), {
    type: _BTUHABP4cjs.defaultValue.call(void 0, props.type, syncState == null ? void 0 : syncState.type, "description"),
    skipTimeout: _BTUHABP4cjs.defaultValue.call(void 0, props.skipTimeout, syncState == null ? void 0 : syncState.skipTimeout, 300)
  });
  const tooltip = _3QF3ODTRcjs.createStore.call(void 0, initialState, hovercard, props.store);
  return _3IVNQNIVcjs.__spreadValues.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, hovercard), tooltip);
}


exports.createTooltipStore = createTooltipStore;
