"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _PW36G76Lcjs = require('../__chunks/PW36G76L.cjs');
require('../__chunks/CCI5VM7E.cjs');
require('../__chunks/ULSPM3Y3.cjs');


var _H6ZQSQQLcjs = require('../__chunks/H6ZQSQQL.cjs');
require('../__chunks/N667HVED.cjs');
require('../__chunks/QLWAGBAQ.cjs');








var _3QF3ODTRcjs = require('../__chunks/3QF3ODTR.cjs');



var _BTUHABP4cjs = require('../__chunks/BTUHABP4.cjs');



var _KCEXELK7cjs = require('../__chunks/KCEXELK7.cjs');
require('../__chunks/7WYII4AN.cjs');




var _3IVNQNIVcjs = require('../__chunks/3IVNQNIV.cjs');

// src/combobox/combobox-store.ts
var isTouchSafari = _KCEXELK7cjs.isSafari.call(void 0, ) && _KCEXELK7cjs.isTouchDevice.call(void 0, );
function createComboboxStore(_a = {}) {
  var _b = _a, {
    tag
  } = _b, props = _3IVNQNIVcjs.__objRest.call(void 0, _b, [
    "tag"
  ]);
  const store = _3QF3ODTRcjs.mergeStore.call(void 0, props.store, _3QF3ODTRcjs.pick.call(void 0, tag, ["value", "rtl"]));
  _3QF3ODTRcjs.throwOnConflictingProps.call(void 0, props, store);
  const tagState = tag == null ? void 0 : tag.getState();
  const syncState = store == null ? void 0 : store.getState();
  const activeId = _BTUHABP4cjs.defaultValue.call(void 0, 
    props.activeId,
    syncState == null ? void 0 : syncState.activeId,
    props.defaultActiveId,
    null
  );
  const composite = _PW36G76Lcjs.createCompositeStore.call(void 0, _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, props), {
    activeId,
    includesBaseElement: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.includesBaseElement,
      syncState == null ? void 0 : syncState.includesBaseElement,
      true
    ),
    orientation: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.orientation,
      syncState == null ? void 0 : syncState.orientation,
      "vertical"
    ),
    focusLoop: _BTUHABP4cjs.defaultValue.call(void 0, props.focusLoop, syncState == null ? void 0 : syncState.focusLoop, true),
    focusWrap: _BTUHABP4cjs.defaultValue.call(void 0, props.focusWrap, syncState == null ? void 0 : syncState.focusWrap, true),
    virtualFocus: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.virtualFocus,
      syncState == null ? void 0 : syncState.virtualFocus,
      true
    )
  }));
  const popover = _H6ZQSQQLcjs.createPopoverStore.call(void 0, _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, props), {
    placement: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.placement,
      syncState == null ? void 0 : syncState.placement,
      "bottom-start"
    )
  }));
  const value = _BTUHABP4cjs.defaultValue.call(void 0, 
    props.value,
    syncState == null ? void 0 : syncState.value,
    props.defaultValue,
    ""
  );
  const selectedValue = _BTUHABP4cjs.defaultValue.call(void 0, 
    props.selectedValue,
    syncState == null ? void 0 : syncState.selectedValue,
    tagState == null ? void 0 : tagState.values,
    props.defaultSelectedValue,
    ""
  );
  const multiSelectable = Array.isArray(selectedValue);
  const initialState = _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, composite.getState()), popover.getState()), {
    value,
    selectedValue,
    resetValueOnSelect: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.resetValueOnSelect,
      syncState == null ? void 0 : syncState.resetValueOnSelect,
      multiSelectable
    ),
    resetValueOnHide: _BTUHABP4cjs.defaultValue.call(void 0, 
      props.resetValueOnHide,
      syncState == null ? void 0 : syncState.resetValueOnHide,
      multiSelectable && !tag
    ),
    activeValue: syncState == null ? void 0 : syncState.activeValue
  });
  const combobox = _3QF3ODTRcjs.createStore.call(void 0, initialState, composite, popover, store);
  if (isTouchSafari) {
    _3QF3ODTRcjs.setup.call(void 0, 
      combobox,
      () => _3QF3ODTRcjs.sync.call(void 0, combobox, ["virtualFocus"], () => {
        combobox.setState("virtualFocus", false);
      })
    );
  }
  _3QF3ODTRcjs.setup.call(void 0, combobox, () => {
    if (!tag) return;
    return _BTUHABP4cjs.chain.call(void 0, 
      _3QF3ODTRcjs.sync.call(void 0, combobox, ["selectedValue"], (state) => {
        if (!Array.isArray(state.selectedValue)) return;
        tag.setValues(state.selectedValue);
      }),
      _3QF3ODTRcjs.sync.call(void 0, tag, ["values"], (state) => {
        combobox.setState("selectedValue", state.values);
      })
    );
  });
  _3QF3ODTRcjs.setup.call(void 0, 
    combobox,
    () => _3QF3ODTRcjs.sync.call(void 0, combobox, ["resetValueOnHide", "mounted"], (state) => {
      if (!state.resetValueOnHide) return;
      if (state.mounted) return;
      combobox.setState("value", value);
    })
  );
  _3QF3ODTRcjs.setup.call(void 0, 
    combobox,
    () => _3QF3ODTRcjs.sync.call(void 0, combobox, ["open"], (state) => {
      if (state.open) return;
      combobox.setState("activeId", activeId);
      combobox.setState("moves", 0);
    })
  );
  _3QF3ODTRcjs.setup.call(void 0, 
    combobox,
    () => _3QF3ODTRcjs.sync.call(void 0, combobox, ["moves", "activeId"], (state, prevState) => {
      if (state.moves === prevState.moves) {
        combobox.setState("activeValue", void 0);
      }
    })
  );
  _3QF3ODTRcjs.setup.call(void 0, 
    combobox,
    () => _3QF3ODTRcjs.batch.call(void 0, combobox, ["moves", "renderedItems"], (state, prev) => {
      if (state.moves === prev.moves) return;
      const { activeId: activeId2 } = combobox.getState();
      const activeItem = composite.item(activeId2);
      combobox.setState("activeValue", activeItem == null ? void 0 : activeItem.value);
    })
  );
  return _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, popover), composite), combobox), {
    tag,
    setValue: (value2) => combobox.setState("value", value2),
    resetValue: () => combobox.setState("value", initialState.value),
    setSelectedValue: (selectedValue2) => combobox.setState("selectedValue", selectedValue2)
  });
}


exports.createComboboxStore = createComboboxStore;
