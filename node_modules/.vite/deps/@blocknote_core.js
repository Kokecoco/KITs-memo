import {
  $,
  $i,
  A,
  Ai,
  Ar,
  Bi,
  Br,
  C,
  Cn,
  Cr,
  D,
  Di,
  Dr,
  E,
  En,
  Er,
  Et,
  Fi,
  Fn,
  Ge,
  Gi,
  H,
  Hi,
  Hr,
  Ie,
  Ii,
  Ir,
  Ji,
  Jn,
  Ki,
  Li,
  Lr,
  Me,
  Mr,
  Ne,
  Ni,
  Nr,
  O,
  Oe,
  Oi,
  P,
  Pi,
  Pr,
  Qe,
  Qi,
  R,
  Ri,
  Ro,
  S,
  Se,
  Sr,
  Te,
  Tr,
  U,
  Ui,
  Uo,
  Ur,
  V,
  Ve,
  Vi,
  Vo,
  Wi,
  X,
  Xi,
  Xo,
  Yi,
  Zi,
  Zn,
  _t,
  an,
  ao,
  at,
  be,
  bn,
  ce,
  cn,
  co,
  ct,
  de,
  dt,
  ee,
  eo,
  et,
  fe,
  fn,
  ft,
  gn,
  he,
  ht,
  ie,
  io,
  it,
  ji,
  jo,
  jr,
  k,
  le,
  ln,
  lo,
  lt,
  me,
  mt,
  ne,
  nn,
  no,
  oe,
  on,
  oo,
  pe,
  pt,
  qi,
  rn,
  ro,
  rt,
  sn,
  so,
  st,
  to,
  ue,
  un,
  ut,
  vt,
  x,
  xr,
  yn,
  z,
  ze,
  zi,
  zo,
  zr
} from "./chunk-4PPCZQRY.js";
import "./chunk-G3PMV62Z.js";
export {
  Ki as AudioBlock,
  vt as BlockNoteEditor,
  Ne as BlockNoteSchema,
  Ji as FileBlock,
  rn as FilePanelProsemirrorPlugin,
  nn as FilePanelView,
  ln as FormattingToolbarProsemirrorPlugin,
  an as FormattingToolbarView,
  _t as HTMLToBlocks,
  oo as ImageBlock,
  un as LinkToolbarProsemirrorPlugin,
  bn as SideMenuProsemirrorPlugin,
  fn as SideMenuView,
  yn as SuggestionMenuProseMirrorPlugin,
  Cn as TableHandlesProsemirrorPlugin,
  En as TableHandlesView,
  ne as UniqueID,
  A as UnreachableCaseError,
  co as VideoBlock,
  Zn as addIdsToBlock,
  Jn as addIdsToBlocks,
  Ai as addInlineContentAttributes,
  Ni as addInlineContentKeyboardShortcuts,
  ji as addStyleAttributes,
  Er as assertEmpty,
  Vi as audioBlockConfig,
  Fi as audioParse,
  Ri as audioPropSchema,
  Oi as audioRender,
  Gi as audioToExternalHTML,
  H as blockToNode,
  Xo as blocksToMarkdown,
  le as camelToDataKebab,
  Pr as checkBlockHasDefaultProp,
  Ro as checkBlockIsDefaultType,
  Ir as checkBlockIsFileBlock,
  Nr as checkBlockIsFileBlockWithPlaceholder,
  Ar as checkBlockIsFileBlockWithPreview,
  Vo as checkBlockTypeHasDefaultProp,
  C as checkDefaultBlockTypeInSchema,
  zo as checkDefaultInlineContentTypeInSchema,
  Ie as cleanHTMLToMarkdown,
  Se as contentNodeToInlineContent,
  pe as createAddFileButton,
  ce as createBlockSpec,
  X as createBlockSpecFromStronglyTypedTiptapNode,
  R as createDefaultBlockDOMOutputSpec,
  ue as createDefaultFilePreview,
  de as createExternalHTMLExporter,
  Te as createFigureWithCaption,
  V as createFileAndCaptionWrapper,
  Mr as createInlineContentSpec,
  Hi as createInlineContentSpecFromTipTapNode,
  st as createInternalBlockSpec,
  Me as createInternalHTMLSerializer,
  Pi as createInternalInlineContentSpec,
  ct as createInternalStyleSpec,
  me as createLinkWithCaption,
  pt as createResizeHandlesWrapper,
  O as createStronglyTypedTiptapNode,
  Tr as createStyleSpec,
  U as createStyleSpecFromTipTapMark,
  Hr as createSuggestionMenu,
  Uo as defaultBlockSchema,
  ht as defaultBlockSpecs,
  Ve as defaultBlockToHTML,
  jo as defaultInlineContentSchema,
  ft as defaultInlineContentSpecs,
  k as defaultProps,
  Lr as defaultStyleSchema,
  mt as defaultStyleSpecs,
  P as esmDependencies,
  $i as fileBlockConfig,
  Xi as fileParse,
  Wi as filePropSchema,
  qi as fileRender,
  Zi as fileToExternalHTML,
  Sr as filenameFromURL,
  jr as filterSuggestionItems,
  D as formatKeyboardShortcut,
  sn as formattingToolbarPluginKey,
  Li as getBlockFromPos,
  Fn as getBlockNoteExtensions,
  lt as getBlockSchemaFromSpecs,
  S as getCurrentBlockContentType,
  Dr as getDefaultEmojiPickerItems,
  Ur as getDefaultSlashMenuItems,
  fe as getDraggableBlockFromElement,
  Di as getInlineContentParseRules,
  dt as getInlineContentSchemaFromSpecs,
  Ii as getParseRules,
  zi as getStyleParseRules,
  ut as getStyleSchemaFromSpecs,
  Qi as imageBlockConfig,
  to as imageParse,
  Yi as imagePropSchema,
  eo as imageRender,
  io as imageToExternalHTML,
  rt as inheritedProps,
  oe as initializeESMDependencies,
  $ as inlineContentToNodes,
  E as insertOrUpdateBlock,
  Bi as isAppleOS,
  ze as isLinkInlineContent,
  Qe as isPartialLinkInlineContent,
  Cr as isSafari,
  ie as isStyledTextInlineContent,
  cn as linkToolbarPluginKey,
  xr as locales,
  on as markdownToBlocks,
  z as mergeCSSClasses,
  x as nodeToBlock,
  it as nodeToCustomInlineContent,
  Oe as parseEmbedElement,
  he as parseFigureElement,
  Ge as parseImageElement,
  Et as partialBlockToBlockForTesting,
  zr as partialBlocksToBlocksForTesting,
  at as propsToAttributes,
  gn as sideMenuPluginKey,
  Ui as stylePropsToAttributes,
  et as tableContentToNodes,
  ee as tableHandlesPluginKey,
  Br as uploadToTmpFilesDotOrg_DEV_ONLY,
  ro as videoBlockConfig,
  so as videoParse,
  no as videoPropSchema,
  ao as videoRender,
  lo as videoToExternalHTML,
  be as wrapInBlockStructure
};
//# sourceMappingURL=@blocknote_core.js.map
