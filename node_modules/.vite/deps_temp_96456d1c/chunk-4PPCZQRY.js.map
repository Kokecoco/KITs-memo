{
  "version": 3,
  "sources": ["../../orderedmap/dist/index.js", "../../prosemirror-model/dist/index.js", "../../prosemirror-transform/dist/index.js", "../../prosemirror-state/dist/index.js", "../../prosemirror-view/dist/index.js", "../../w3c-keyname/index.js", "../../prosemirror-keymap/dist/index.js", "../../prosemirror-commands/dist/index.js", "../../prosemirror-schema-list/dist/index.js", "../../@tiptap/core/src/helpers/createChainableState.ts", "../../@tiptap/core/src/CommandManager.ts", "../../@tiptap/core/src/EventEmitter.ts", "../../@tiptap/core/src/helpers/getExtensionField.ts", "../../@tiptap/core/src/helpers/splitExtensions.ts", "../../@tiptap/core/src/helpers/getAttributesFromExtensions.ts", "../../@tiptap/core/src/helpers/getNodeType.ts", "../../@tiptap/core/src/utilities/mergeAttributes.ts", "../../@tiptap/core/src/helpers/getRenderedAttributes.ts", "../../@tiptap/core/src/utilities/isFunction.ts", "../../@tiptap/core/src/utilities/callOrReturn.ts", "../../@tiptap/core/src/utilities/isEmptyObject.ts", "../../@tiptap/core/src/utilities/fromString.ts", "../../@tiptap/core/src/helpers/injectExtensionAttributesToParseRule.ts", "../../@tiptap/core/src/helpers/getSchemaByResolvedExtensions.ts", "../../@tiptap/core/src/helpers/getSchemaTypeByName.ts", "../../@tiptap/core/src/helpers/isExtensionRulesEnabled.ts", "../../@tiptap/core/src/helpers/getTextContentFromNodes.ts", "../../@tiptap/core/src/utilities/isRegExp.ts", "../../@tiptap/core/src/InputRule.ts", "../../@tiptap/core/src/utilities/isNumber.ts", "../../@tiptap/core/src/PasteRule.ts", "../../@tiptap/core/src/utilities/findDuplicates.ts", "../../@tiptap/core/src/ExtensionManager.ts", "../../@tiptap/core/src/utilities/isPlainObject.ts", "../../@tiptap/core/src/utilities/mergeDeep.ts", "../../@tiptap/core/src/Extension.ts", "../../@tiptap/core/src/helpers/getTextBetween.ts", "../../@tiptap/core/src/helpers/getTextSerializersFromSchema.ts", "../../@tiptap/core/src/extensions/clipboardTextSerializer.ts", "../../@tiptap/core/src/commands/blur.ts", "../../@tiptap/core/src/commands/clearContent.ts", "../../@tiptap/core/src/commands/clearNodes.ts", "../../@tiptap/core/src/commands/command.ts", "../../@tiptap/core/src/commands/createParagraphNear.ts", "../../@tiptap/core/src/commands/cut.ts", "../../@tiptap/core/src/commands/deleteCurrentNode.ts", "../../@tiptap/core/src/commands/deleteNode.ts", "../../@tiptap/core/src/commands/deleteRange.ts", "../../@tiptap/core/src/commands/deleteSelection.ts", "../../@tiptap/core/src/commands/enter.ts", "../../@tiptap/core/src/commands/exitCode.ts", "../../@tiptap/core/src/utilities/objectIncludes.ts", "../../@tiptap/core/src/helpers/getMarkRange.ts", "../../@tiptap/core/src/helpers/getMarkType.ts", "../../@tiptap/core/src/commands/extendMarkRange.ts", "../../@tiptap/core/src/commands/first.ts", "../../@tiptap/core/src/helpers/isTextSelection.ts", "../../@tiptap/core/src/utilities/minMax.ts", "../../@tiptap/core/src/helpers/resolveFocusPosition.ts", "../../@tiptap/core/src/utilities/isiOS.ts", "../../@tiptap/core/src/commands/focus.ts", "../../@tiptap/core/src/commands/forEach.ts", "../../@tiptap/core/src/commands/insertContent.ts", "../../@tiptap/core/src/utilities/elementFromString.ts", "../../@tiptap/core/src/helpers/createNodeFromContent.ts", "../../@tiptap/core/src/helpers/selectionToInsertionEnd.ts", "../../@tiptap/core/src/commands/insertContentAt.ts", "../../@tiptap/core/src/commands/join.ts", "../../@tiptap/core/src/commands/joinItemBackward.ts", "../../@tiptap/core/src/commands/joinItemForward.ts", "../../@tiptap/core/src/commands/joinTextblockBackward.ts", "../../@tiptap/core/src/commands/joinTextblockForward.ts", "../../@tiptap/core/src/utilities/isMacOS.ts", "../../@tiptap/core/src/commands/keyboardShortcut.ts", "../../@tiptap/core/src/helpers/isNodeActive.ts", "../../@tiptap/core/src/commands/lift.ts", "../../@tiptap/core/src/commands/liftEmptyBlock.ts", "../../@tiptap/core/src/commands/liftListItem.ts", "../../@tiptap/core/src/commands/newlineInCode.ts", "../../@tiptap/core/src/helpers/getSchemaTypeNameByName.ts", "../../@tiptap/core/src/utilities/deleteProps.ts", "../../@tiptap/core/src/commands/resetAttributes.ts", "../../@tiptap/core/src/commands/scrollIntoView.ts", "../../@tiptap/core/src/commands/selectAll.ts", "../../@tiptap/core/src/commands/selectNodeBackward.ts", "../../@tiptap/core/src/commands/selectNodeForward.ts", "../../@tiptap/core/src/commands/selectParentNode.ts", "../../@tiptap/core/src/commands/selectTextblockEnd.ts", "../../@tiptap/core/src/commands/selectTextblockStart.ts", "../../@tiptap/core/src/helpers/createDocument.ts", "../../@tiptap/core/src/commands/setContent.ts", "../../@tiptap/core/src/helpers/getMarkAttributes.ts", "../../@tiptap/core/src/helpers/combineTransactionSteps.ts", "../../@tiptap/core/src/helpers/defaultBlockAt.ts", "../../@tiptap/core/src/helpers/findChildren.ts", "../../@tiptap/core/src/helpers/findChildrenInRange.ts", "../../@tiptap/core/src/helpers/findParentNodeClosestToPos.ts", "../../@tiptap/core/src/helpers/findParentNode.ts", "../../@tiptap/core/src/helpers/getHTMLFromFragment.ts", "../../@tiptap/core/src/helpers/getSchema.ts", "../../@tiptap/core/src/helpers/generateHTML.ts", "../../@tiptap/core/src/helpers/generateJSON.ts", "../../@tiptap/core/src/helpers/getText.ts", "../../@tiptap/core/src/helpers/generateText.ts", "../../@tiptap/core/src/helpers/getNodeAttributes.ts", "../../@tiptap/core/src/helpers/getAttributes.ts", "../../@tiptap/core/src/utilities/removeDuplicates.ts", "../../@tiptap/core/src/helpers/getChangedRanges.ts", "../../@tiptap/core/src/helpers/getDebugJSON.ts", "../../@tiptap/core/src/helpers/getMarksBetween.ts", "../../@tiptap/core/src/helpers/getNodeAtPosition.ts", "../../@tiptap/core/src/helpers/getSplittedAttributes.ts", "../../@tiptap/core/src/helpers/isMarkActive.ts", "../../@tiptap/core/src/helpers/isActive.ts", "../../@tiptap/core/src/helpers/isAtEndOfNode.ts", "../../@tiptap/core/src/helpers/isAtStartOfNode.ts", "../../@tiptap/core/src/helpers/isList.ts", "../../@tiptap/core/src/helpers/isNodeEmpty.ts", "../../@tiptap/core/src/helpers/isNodeSelection.ts", "../../@tiptap/core/src/helpers/posToDOMRect.ts", "../../@tiptap/core/src/commands/setMark.ts", "../../@tiptap/core/src/commands/setMeta.ts", "../../@tiptap/core/src/commands/setNode.ts", "../../@tiptap/core/src/commands/setNodeSelection.ts", "../../@tiptap/core/src/commands/setTextSelection.ts", "../../@tiptap/core/src/commands/sinkListItem.ts", "../../@tiptap/core/src/commands/splitBlock.ts", "../../@tiptap/core/src/commands/splitListItem.ts", "../../@tiptap/core/src/commands/toggleList.ts", "../../@tiptap/core/src/commands/toggleMark.ts", "../../@tiptap/core/src/commands/toggleNode.ts", "../../@tiptap/core/src/commands/toggleWrap.ts", "../../@tiptap/core/src/commands/undoInputRule.ts", "../../@tiptap/core/src/commands/unsetAllMarks.ts", "../../@tiptap/core/src/commands/unsetMark.ts", "../../@tiptap/core/src/commands/updateAttributes.ts", "../../@tiptap/core/src/commands/wrapIn.ts", "../../@tiptap/core/src/commands/wrapInList.ts", "../../@tiptap/core/src/extensions/commands.ts", "../../@tiptap/core/src/extensions/editable.ts", "../../@tiptap/core/src/extensions/focusEvents.ts", "../../@tiptap/core/src/extensions/keymap.ts", "../../@tiptap/core/src/extensions/tabindex.ts", "../../@tiptap/core/src/NodePos.ts", "../../@tiptap/core/src/style.ts", "../../@tiptap/core/src/utilities/createStyleTag.ts", "../../@tiptap/core/src/Editor.ts", "../../@tiptap/core/src/inputRules/markInputRule.ts", "../../@tiptap/core/src/inputRules/nodeInputRule.ts", "../../@tiptap/core/src/inputRules/textblockTypeInputRule.ts", "../../@tiptap/core/src/inputRules/textInputRule.ts", "../../@tiptap/core/src/inputRules/wrappingInputRule.ts", "../../@tiptap/core/src/Mark.ts", "../../@tiptap/core/src/Node.ts", "../../@tiptap/core/src/utilities/isAndroid.ts", "../../@tiptap/core/src/NodeView.ts", "../../@tiptap/core/src/pasteRules/markPasteRule.ts", "../../@tiptap/core/src/utilities/escapeForRegEx.ts", "../../@tiptap/core/src/utilities/isString.ts", "../../@tiptap/core/src/pasteRules/nodePasteRule.ts", "../../@tiptap/core/src/pasteRules/textPasteRule.ts", "../../@tiptap/core/src/Tracker.ts", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/v4.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../@tiptap/extension-bold/src/bold.ts", "../../@tiptap/extension-code/src/code.ts", "../../@tiptap/extension-italic/src/italic.ts", "../../@tiptap/extension-strike/src/strike.ts", "../../@tiptap/extension-underline/src/underline.ts", "../../@tiptap/extension-table-cell/src/table-cell.ts", "../../@tiptap/extension-table-header/src/table-header.ts", "../../@tiptap/extension-table-row/src/table-row.ts", "../../prosemirror-tables/dist/index.js", "../../lib0/map.js", "../../lib0/set.js", "../../lib0/array.js", "../../lib0/observable.js", "../../lib0/math.js", "../../lib0/binary.js", "../../lib0/number.js", "../../lib0/string.js", "../../lib0/encoding.js", "../../lib0/error.js", "../../lib0/decoding.js", "../../lib0/webcrypto.js", "../../lib0/random.js", "../../lib0/time.js", "../../lib0/promise.js", "../../lib0/conditions.js", "../../lib0/storage.js", "../../lib0/object.js", "../../lib0/function.js", "../../lib0/environment.js", "../../lib0/pair.js", "../../lib0/dom.js", "../../lib0/eventloop.js", "../../lib0/symbol.js", "../../lib0/logging.common.js", "../../lib0/logging.js", "../../lib0/iterator.js", "../../yjs/src/utils/AbstractConnector.js", "../../yjs/src/utils/DeleteSet.js", "../../yjs/src/utils/Doc.js", "../../yjs/src/utils/UpdateDecoder.js", "../../yjs/src/utils/UpdateEncoder.js", "../../yjs/src/utils/encoding.js", "../../yjs/src/utils/EventHandler.js", "../../yjs/src/utils/ID.js", "../../yjs/src/utils/isParentOf.js", "../../yjs/src/utils/logging.js", "../../yjs/src/utils/PermanentUserData.js", "../../yjs/src/utils/RelativePosition.js", "../../yjs/src/utils/Snapshot.js", "../../yjs/src/utils/StructStore.js", "../../yjs/src/utils/Transaction.js", "../../yjs/src/utils/UndoManager.js", "../../yjs/src/utils/updates.js", "../../yjs/src/utils/YEvent.js", "../../yjs/src/types/AbstractType.js", "../../yjs/src/types/YArray.js", "../../yjs/src/types/YMap.js", "../../yjs/src/types/YText.js", "../../yjs/src/types/YXmlFragment.js", "../../yjs/src/types/YXmlElement.js", "../../yjs/src/types/YXmlEvent.js", "../../yjs/src/types/YXmlHook.js", "../../yjs/src/types/YXmlText.js", "../../yjs/src/structs/AbstractStruct.js", "../../yjs/src/structs/GC.js", "../../yjs/src/structs/ContentBinary.js", "../../yjs/src/structs/ContentDeleted.js", "../../yjs/src/structs/ContentDoc.js", "../../yjs/src/structs/ContentEmbed.js", "../../yjs/src/structs/ContentFormat.js", "../../yjs/src/structs/ContentJSON.js", "../../yjs/src/structs/ContentAny.js", "../../yjs/src/structs/ContentString.js", "../../yjs/src/structs/ContentType.js", "../../yjs/src/structs/Item.js", "../../yjs/src/structs/Skip.js", "../../yjs/src/index.js", "../../lib0/mutex.js", "../../lib0/diff.js", "../../y-prosemirror/src/plugins/keys.js", "../../y-prosemirror/src/plugins/sync-plugin.js", "../../y-prosemirror/src/lib.js", "../../y-prosemirror/src/plugins/cursor-plugin.js", "../../y-prosemirror/src/plugins/undo-plugin.js", "../../@tiptap/extension-collaboration/src/collaboration.ts", "../../@tiptap/extension-collaboration/src/helpers/isChangeOrigin.ts", "../../@tiptap/extension-collaboration-cursor/src/collaboration-cursor.ts", "../../prosemirror-dropcursor/dist/index.js", "../../@tiptap/extension-dropcursor/src/dropcursor.ts", "../../prosemirror-gapcursor/dist/index.js", "../../@tiptap/extension-gapcursor/src/gapcursor.ts", "../../@tiptap/extension-hard-break/src/hard-break.ts", "../../rope-sequence/dist/index.js", "../../prosemirror-history/dist/index.js", "../../@tiptap/extension-history/src/history.ts", "../../linkifyjs/dist/linkify.es.js", "../../@tiptap/extension-link/src/helpers/autolink.ts", "../../@tiptap/extension-link/src/helpers/clickHandler.ts", "../../@tiptap/extension-link/src/helpers/pasteHandler.ts", "../../@tiptap/extension-link/src/link.ts", "../../@tiptap/extension-text/src/text.ts", "../../@blocknote/core/src/i18n/locales/ar.ts", "../../@blocknote/core/src/i18n/locales/de.ts", "../../@blocknote/core/src/i18n/locales/en.ts", "../../@blocknote/core/src/i18n/locales/es.ts", "../../@blocknote/core/src/i18n/locales/fr.ts", "../../@blocknote/core/src/i18n/locales/is.ts", "../../@blocknote/core/src/i18n/locales/ja.ts", "../../@blocknote/core/src/i18n/locales/ko.ts", "../../@blocknote/core/src/i18n/locales/nl.ts", "../../@blocknote/core/src/i18n/locales/pl.ts", "../../@blocknote/core/src/i18n/locales/pt.ts", "../../@blocknote/core/src/i18n/locales/ru.ts", "../../@blocknote/core/src/i18n/locales/vi.ts", "../../@blocknote/core/src/i18n/locales/zh.ts", "../../@blocknote/core/src/util/esmDependencies.ts", "../../@blocknote/core/src/extensions/UniqueID/UniqueID.ts", "../../@blocknote/core/src/api/getBlockInfoFromPos.ts", "../../@blocknote/core/src/schema/inlineContent/types.ts", "../../@blocknote/core/src/util/typescript.ts", "../../@blocknote/core/src/api/nodeConversions/nodeConversions.ts", "../../@blocknote/core/src/api/exporters/html/util/sharedHTMLConversion.ts", "../../@blocknote/core/src/api/exporters/html/util/simplifyBlocksRehypePlugin.ts", "../../@blocknote/core/src/api/exporters/html/externalHTMLExporter.ts", "../../@blocknote/core/src/api/exporters/html/internalHTMLSerializer.ts", "../../@blocknote/core/src/api/getCurrentBlockContentType.ts", "../../@blocknote/core/src/util/browser.ts", "../../@blocknote/core/src/blocks/defaultBlockHelpers.ts", "../../@blocknote/core/src/blocks/defaultProps.ts", "../../@blocknote/core/src/util/string.ts", "../../@blocknote/core/src/schema/blocks/internal.ts", "../../@blocknote/core/src/schema/blocks/createSpec.ts", "../../@blocknote/core/src/schema/inlineContent/internal.ts", "../../@blocknote/core/src/schema/inlineContent/createSpec.ts", "../../@blocknote/core/src/schema/styles/internal.ts", "../../@blocknote/core/src/schema/styles/createSpec.ts", "../../@blocknote/core/src/blocks/FileBlockContent/fileBlockHelpers.ts", "../../@blocknote/core/src/blocks/AudioBlockContent/audioBlockHelpers.ts", "../../@blocknote/core/src/blocks/AudioBlockContent/AudioBlockContent.ts", "../../@blocknote/core/src/blocks/FileBlockContent/FileBlockContent.ts", "../../@blocknote/core/src/blocks/FileBlockContent/uploadToTmpFilesDotOrg_DEV_ONLY.ts", "../../@blocknote/core/src/blocks/ImageBlockContent/imageBlockHelpers.ts", "../../@blocknote/core/src/blocks/ImageBlockContent/ImageBlockContent.ts", "../../@blocknote/core/src/blocks/VideoBlockContent/videoBlockHelpers.ts", "../../@blocknote/core/src/blocks/VideoBlockContent/VideoBlockContent.ts", "../../@blocknote/core/src/extensions/BackgroundColor/BackgroundColorMark.ts", "../../@blocknote/core/src/extensions/TextColor/TextColorMark.ts", "../../@blocknote/core/src/blocks/HeadingBlockContent/HeadingBlockContent.ts", "../../@blocknote/core/src/blocks/ListItemBlockContent/ListItemKeyboardShortcuts.ts", "../../@blocknote/core/src/blocks/ListItemBlockContent/BulletListItemBlockContent/BulletListItemBlockContent.ts", "../../@blocknote/core/src/blocks/ListItemBlockContent/NumberedListItemBlockContent/NumberedListIndexingPlugin.ts", "../../@blocknote/core/src/blocks/ListItemBlockContent/NumberedListItemBlockContent/NumberedListItemBlockContent.ts", "../../@blocknote/core/src/blocks/ListItemBlockContent/CheckListItemBlockContent/CheckListItemBlockContent.ts", "../../@blocknote/core/src/blocks/ParagraphBlockContent/ParagraphBlockContent.ts", "../../@blocknote/core/src/blocks/TableBlockContent/TableExtension.ts", "../../@blocknote/core/src/blocks/TableBlockContent/TableBlockContent.ts", "../../@blocknote/core/src/blocks/defaultBlocks.ts", "../../@blocknote/core/src/blocks/defaultBlockTypeGuards.ts", "../../@blocknote/core/src/api/nodeUtil.ts", "../../@blocknote/core/src/api/blockManipulation/blockManipulation.ts", "../../@blocknote/core/src/api/exporters/markdown/removeUnderlinesRehypePlugin.ts", "../../@blocknote/core/src/api/exporters/markdown/util/addSpacesToCheckboxesRehypePlugin.ts", "../../@blocknote/core/src/api/exporters/markdown/markdownExporter.ts", "../../@blocknote/core/src/api/parsers/html/util/nestedLists.ts", "../../@blocknote/core/src/api/parsers/html/parseHTML.ts", "../../@blocknote/core/src/api/parsers/markdown/parseMarkdown.ts", "../../@blocknote/core/src/util/EventEmitter.ts", "../../@blocknote/core/src/extensions/FilePanel/FilePanelPlugin.ts", "../../@blocknote/core/src/extensions/FormattingToolbar/FormattingToolbarPlugin.ts", "../../@blocknote/core/src/extensions/LinkToolbar/LinkToolbarPlugin.ts", "../../@blocknote/core/src/extensions/SideMenu/MultipleNodeSelection.ts", "../../@blocknote/core/src/extensions/SideMenu/SideMenuPlugin.ts", "../../@blocknote/core/src/extensions/SuggestionMenu/SuggestionPlugin.ts", "../../@blocknote/core/src/extensions/TableHandles/TableHandlesPlugin.ts", "../../@blocknote/core/src/api/exporters/copyExtension.ts", "../../@blocknote/core/src/api/parsers/acceptedMIMETypes.ts", "../../@blocknote/core/src/api/parsers/handleFileInsertion.ts", "../../@blocknote/core/src/api/parsers/pasteExtension.ts", "../../@blocknote/core/src/api/parsers/fileDropExtension.ts", "../../@blocknote/core/src/extensions/BackgroundColor/BackgroundColorExtension.ts", "../../@blocknote/core/src/extensions/TextAlignment/TextAlignmentExtension.ts", "../../@blocknote/core/src/extensions/TextColor/TextColorExtension.ts", "../../@blocknote/core/src/extensions/TrailingNode/TrailingNodeExtension.ts", "../../@blocknote/core/src/extensions/NonEditableBlocks/NonEditableBlockPlugin.ts", "../../@blocknote/core/src/extensions/PreviousBlockType/PreviousBlockTypePlugin.ts", "../../@blocknote/core/src/pm-nodes/BlockContainer.ts", "../../@blocknote/core/src/pm-nodes/BlockGroup.ts", "../../@blocknote/core/src/pm-nodes/Doc.ts", "../../@blocknote/core/src/editor/BlockNoteExtensions.ts", "../../@blocknote/core/src/editor/transformPasted.ts", "../../@blocknote/core/src/editor/BlockNoteSchema.ts", "../../@blocknote/core/src/editor/BlockNoteTipTapEditor.ts", "../../@blocknote/core/src/extensions/Placeholder/PlaceholderPlugin.ts", "../../@blocknote/core/src/editor/BlockNoteEditor.ts", "../../@blocknote/core/src/extensions/SuggestionMenu/getDefaultEmojiPickerItems.ts", "../../@blocknote/core/src/extensions/SuggestionMenu/getDefaultSlashMenuItems.ts", "../../@blocknote/core/src/api/testUtil/partialBlockTestUtil.ts"],
  "sourcesContent": ["// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: () → Object\n  // Turn ordered map into a plain object.\n  toObject: function() {\n    var result = {};\n    this.forEach(function(key, value) { result[key] = value; });\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n", "import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", first = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            let nodeText = node.isText ? node.text.slice(Math.max(from, pos) - pos, to - pos)\n                : !node.isLeaf ? \"\"\n                    : leafText ? (typeof leafText === \"function\" ? leafText(node) : leafText)\n                        : node.type.spec.leafText ? node.type.spec.leafText(node)\n                            : \"\";\n            if (node.isBlock && (node.isLeaf && nodeText || node.isTextblock) && blockSeparator) {\n                if (first)\n                    first = false;\n                else\n                    text += blockSeparator;\n            }\n            text += nodeText;\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. @internal\n    */\n    findIndex(pos, round = -1) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos || round > 0)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        let mark = type.create(json.attrs);\n        type.checkAttrs(mark.attrs);\n        return mark;\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are ‘open’ (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment—i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    node.type.checkContent(content);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent—text nodes are ‘flat’ in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        let cache = resolveCache.get(doc);\n        if (cache) {\n            for (let i = 0; i < cache.elts.length; i++) {\n                let elt = cache.elts[i];\n                if (elt.pos == pos)\n                    return elt;\n            }\n        }\n        else {\n            resolveCache.set(doc, cache = new ResolveCache);\n        }\n        let result = cache.elts[cache.i] = ResolvedPos.resolve(doc, pos);\n        cache.i = (cache.i + 1) % resolveCacheSize;\n        return result;\n    }\n}\nclass ResolveCache {\n    constructor() {\n        this.elts = [];\n        this.i = 0;\n    }\n}\nconst resolveCacheSize = 12, resolveCache = new WeakMap();\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    position relative to the original node (method receiver),\n    its parent node, and its child index. When the callback returns\n    false for a given node, that node's children will not be\n    recursed over. The last parameter can be used to specify a\n    starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise an exception when they do not.\n    */\n    check() {\n        this.type.checkContent(this.content);\n        this.type.checkAttrs(this.attrs);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++) {\n            let mark = this.marks[i];\n            mark.type.checkAttrs(mark.attrs);\n            copy = mark.addToSet(copy);\n        }\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = undefined;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        let node = schema.nodeType(json.type).create(json.attrs, content, marks);\n        node.type.checkAttrs(node.attrs);\n        return node;\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length != 0 && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_​th outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.groups.indexOf(name) > -1)\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n/**\nConstruct an NFA from an expression as returned by the parser. The\nNFA is represented as an array of states, which are themselves\narrays of edges, which are `{term, to}` objects. The first state is\nthe entry state and the last node is the success state.\n\nNote that unlike typical NFAs, the edge ordering in this one is\nsignificant, in that it is used to contruct filler content when\nnecessary.\n*/\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction checkAttrs(attrs, values, type, name) {\n    for (let name in values)\n        if (!(name in attrs))\n            throw new RangeError(`Unsupported attribute ${name} for ${type} of type ${name}`);\n    for (let name in attrs) {\n        let attr = attrs[name];\n        if (attr.validate)\n            attr.validate(values[name]);\n    }\n}\nfunction initAttrs(typeName, attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(typeName, name, attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(name, spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        this.checkContent(content);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Throws a RangeError if the given fragment is not valid content for this\n    node type.\n    @internal\n    */\n    checkContent(content) {\n        if (!this.validContent(content))\n            throw new RangeError(`Invalid content for node ${this.name}: ${content.toString().slice(0, 50)}`);\n    }\n    /**\n    @internal\n    */\n    checkAttrs(attrs) {\n        checkAttrs(this.attrs, attrs, \"node\", this.name);\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\nfunction validateType(typeName, attrName, type) {\n    let types = type.split(\"|\");\n    return (value) => {\n        let name = value === null ? \"null\" : typeof value;\n        if (types.indexOf(name) < 0)\n            throw new RangeError(`Expected value of type ${types} for attribute ${attrName} on type ${typeName}, got ${name}`);\n    };\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(typeName, attrName, options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n        this.validate = typeof options.validate == \"string\" ? validateType(typeName, attrName, options.validate) : options.validate;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(name, spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    @internal\n    */\n    checkAttrs(attrs) {\n        checkAttrs(this.attrs, attrs, \"mark\", this.name);\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        The [linebreak\n        replacement](https://prosemirror.net/docs/ref/#model.NodeSpec.linebreakReplacement) node defined\n        in this schema, if any.\n        */\n        this.linebreakReplacement = null;\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        let instanceSpec = this.spec = {};\n        for (let prop in spec)\n            instanceSpec[prop] = spec[prop];\n        instanceSpec.nodes = OrderedMap.from(spec.nodes),\n            instanceSpec.marks = OrderedMap.from(spec.marks || {}),\n            this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            if (type.spec.linebreakReplacement) {\n                if (this.linebreakReplacement)\n                    throw new RangeError(\"Multiple linebreak nodes defined\");\n                if (!type.isInline || !type.isLeaf)\n                    throw new RangeError(\"Linebreak replacement nodes must be inline leaf nodes\");\n                this.linebreakReplacement = type;\n            }\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = this.nodeFromJSON.bind(this);\n        this.markFromJSON = this.markFromJSON.bind(this);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    Deserialize a node from its JSON representation. This method is\n    bound.\n    */\n    nodeFromJSON(json) {\n        return Node.fromJSON(this, json);\n    }\n    /**\n    Deserialize a mark from its JSON representation. This method is\n    bound.\n    */\n    markFromJSON(json) {\n        return Mark.fromJSON(this, json);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\nfunction isTagRule(rule) { return rule.tag != null; }\nfunction isStyleRule(rule) { return rule.style != null; }\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        let matchedStyles = this.matchedStyles = [];\n        rules.forEach(rule => {\n            if (isTagRule(rule)) {\n                this.tags.push(rule);\n            }\n            else if (isStyleRule(rule)) {\n                let prop = /[^=]*/.exec(rule.style)[0];\n                if (matchedStyles.indexOf(prop) < 0)\n                    matchedStyles.push(prop);\n                this.styles.push(rule);\n            }\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, Mark.none, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, Mark.none, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.mark || rule.ignore || rule.clearMark))\n                        rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.node || rule.ignore || rule.mark))\n                        rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, marks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom, marks) {\n        if (dom.nodeType == 3)\n            this.addTextNode(dom, marks);\n        else if (dom.nodeType == 1)\n            this.addElement(dom, marks);\n    }\n    addTextNode(dom, marks) {\n        let value = dom.nodeValue;\n        let top = this.top;\n        if (top.options & OPT_PRESERVE_WS_FULL ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!(top.options & OPT_PRESERVE_WS)) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            else {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            if (value)\n                this.insertNode(this.parser.schema.text(value), marks);\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, marks, matchAfter) {\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom, marks);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, top = this.top, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                if (top.content.length && top.content[0].isInline && this.open) {\n                    this.open--;\n                    top = this.top;\n                }\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom, marks);\n                return;\n            }\n            let innerMarks = rule && rule.skip ? marks : this.readStyles(dom, marks);\n            if (innerMarks)\n                this.addAll(dom, innerMarks);\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            let innerMarks = this.readStyles(dom, marks);\n            if (innerMarks)\n                this.addElementByRule(dom, rule, innerMarks, rule.consuming === false ? ruleID : undefined);\n        }\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom, marks) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"), marks);\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom, marks) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"), marks);\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an updated array of marks, or null to indicate some of the\n    // styles had a rule with `ignore` set.\n    readStyles(dom, marks) {\n        let styles = dom.style;\n        // Because many properties will only show up in 'normalized' form\n        // in `style.item` (i.e. text-decoration becomes\n        // text-decoration-line, text-decoration-color, etc), we directly\n        // query the styles mentioned in our rules instead of iterating\n        // over the items.\n        if (styles && styles.length)\n            for (let i = 0; i < this.parser.matchedStyles.length; i++) {\n                let name = this.parser.matchedStyles[i], value = styles.getPropertyValue(name);\n                if (value)\n                    for (let after = undefined;;) {\n                        let rule = this.parser.matchStyle(name, value, this, after);\n                        if (!rule)\n                            break;\n                        if (rule.ignore)\n                            return null;\n                        if (rule.clearMark)\n                            marks = marks.filter(m => !rule.clearMark(m));\n                        else\n                            marks = marks.concat(this.parser.schema.marks[rule.mark].create(rule.attrs));\n                        if (rule.consuming === false)\n                            after = rule;\n                        else\n                            break;\n                    }\n            }\n        return marks;\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, marks, continueAfter) {\n        let sync, nodeType;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                let inner = this.enter(nodeType, rule.attrs || null, marks, rule.preserveWhitespace);\n                if (inner) {\n                    sync = true;\n                    marks = inner;\n                }\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs), marks)) {\n                this.leafFallback(dom, marks);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            marks = marks.concat(markType.create(rule.attrs));\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, marks, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node, marks));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM, marks);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, marks, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom, marks);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node, marks) {\n        let route, sync;\n        for (let depth = this.open; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid)\n                break;\n        }\n        if (!route)\n            return null;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            marks = this.enterInner(route[i], null, marks, false);\n        return marks;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node, marks) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                marks = this.enterInner(block, null, marks);\n        }\n        let innerMarks = this.findPlace(node, marks);\n        if (innerMarks) {\n            this.closeExtra();\n            let top = this.top;\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let nodeMarks = Mark.none;\n            for (let m of innerMarks.concat(node.marks))\n                if (top.type ? top.type.allowsMarkType(m.type) : markMayApply(m.type, node.type))\n                    nodeMarks = m.addToSet(nodeMarks);\n            top.content.push(node.mark(nodeMarks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, marks, preserveWS) {\n        let innerMarks = this.findPlace(type.create(attrs), marks);\n        if (innerMarks)\n            innerMarks = this.enterInner(type, attrs, marks, true, preserveWS);\n        return innerMarks;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs, marks, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        let applyMarks = Mark.none;\n        marks = marks.filter(m => {\n            if (top.type ? top.type.allowsMarkType(m.type) : markMayApply(m.type, type)) {\n                applyMarks = m.addToSet(applyMarks);\n                return false;\n            }\n            return true;\n        });\n        this.nodes.push(new NodeContext(type, attrs, applyMarks, solid, null, options));\n        this.open++;\n        return marks;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(this.isOpen || this.options.topOpen);\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--)\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = renderSpec(doc(options), this.nodes[node.type.name](node), null, node.attrs);\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && renderSpec(doc(options), toDOM(mark, inline), null, mark.attrs);\n    }\n    static renderSpec(doc, structure, xmlNS = null, blockArraysIn) {\n        return renderSpec(doc, structure, xmlNS, blockArraysIn);\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\nconst suspiciousAttributeCache = new WeakMap();\nfunction suspiciousAttributes(attrs) {\n    let value = suspiciousAttributeCache.get(attrs);\n    if (value === undefined)\n        suspiciousAttributeCache.set(attrs, value = suspiciousAttributesInner(attrs));\n    return value;\n}\nfunction suspiciousAttributesInner(attrs) {\n    let result = null;\n    function scan(value) {\n        if (value && typeof value == \"object\") {\n            if (Array.isArray(value)) {\n                if (typeof value[0] == \"string\") {\n                    if (!result)\n                        result = [];\n                    result.push(value);\n                }\n                else {\n                    for (let i = 0; i < value.length; i++)\n                        scan(value[i]);\n                }\n            }\n            else {\n                for (let prop in value)\n                    scan(value[prop]);\n            }\n        }\n    }\n    scan(attrs);\n    return result;\n}\nfunction renderSpec(doc, structure, xmlNS, blockArraysIn) {\n    if (typeof structure == \"string\")\n        return { dom: doc.createTextNode(structure) };\n    if (structure.nodeType != null)\n        return { dom: structure };\n    if (structure.dom && structure.dom.nodeType != null)\n        return structure;\n    let tagName = structure[0], suspicious;\n    if (typeof tagName != \"string\")\n        throw new RangeError(\"Invalid array passed to renderSpec\");\n    if (blockArraysIn && (suspicious = suspiciousAttributes(blockArraysIn)) &&\n        suspicious.indexOf(structure) > -1)\n        throw new RangeError(\"Using an array from an attribute object as a DOM spec. This may be an attempted cross site scripting attack.\");\n    let space = tagName.indexOf(\" \");\n    if (space > 0) {\n        xmlNS = tagName.slice(0, space);\n        tagName = tagName.slice(space + 1);\n    }\n    let contentDOM;\n    let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n    let attrs = structure[1], start = 1;\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n        start = 2;\n        for (let name in attrs)\n            if (attrs[name] != null) {\n                let space = name.indexOf(\" \");\n                if (space > 0)\n                    dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                else\n                    dom.setAttribute(name, attrs[name]);\n            }\n    }\n    for (let i = start; i < structure.length; i++) {\n        let child = structure[i];\n        if (child === 0) {\n            if (i < structure.length - 1 || i > start)\n                throw new RangeError(\"Content hole must be the only child of its parent node\");\n            return { dom, contentDOM: dom };\n        }\n        else {\n            let { dom: inner, contentDOM: innerContent } = renderSpec(doc, child, xmlNS, blockArraysIn);\n            dom.appendChild(inner);\n            if (innerContent) {\n                if (contentDOM)\n                    throw new RangeError(\"Multiple content holes\");\n                contentDOM = innerContent;\n            }\n        }\n    }\n    return { dom, contentDOM };\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n", "import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(\n    /**\n    The step maps in this mapping.\n    */\n    maps = [], \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps.length) {\n        this.maps = maps;\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this.maps, this.mirror, from, to);\n    }\n    /**\n    @internal\n    */\n    copy() {\n        return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        this.to = this.maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this.maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this.maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this.maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this.maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`—the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = this.from == this.gapFrom ? from.pos : mapping.map(this.gapFrom, -1);\n        let gapTo = this.to == this.gapTo ? to.pos : mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch, clearNewlines = true) {\n    let node = tr.doc.nodeAt(pos);\n    let replSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            replSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n            if (clearNewlines && child.isText && parentType.whitespace != \"pre\") {\n                let m, newline = /\\r?\\n|\\r/g, slice;\n                while (m = newline.exec(child.text)) {\n                    if (!slice)\n                        slice = new Slice(Fragment.from(parentType.schema.text(\" \", parentType.allowedMarks(child.marks))), 0, 0);\n                    replSteps.push(new ReplaceStep(cur + m.index, cur + m.index + m[0].length, slice));\n                }\n            }\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = replSteps.length - 1; i >= 0; i--)\n        tr.step(replSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        let attrsHere = typeof attrs == \"function\" ? attrs(node) : attrs;\n        if (node.isTextblock && !node.hasMarkup(type, attrsHere) &&\n            canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            let convertNewlines = null;\n            if (type.schema.linebreakReplacement) {\n                let pre = type.whitespace == \"pre\", supportLinebreak = !!type.contentMatch.matchType(type.schema.linebreakReplacement);\n                if (pre && !supportLinebreak)\n                    convertNewlines = false;\n                else if (!pre && supportLinebreak)\n                    convertNewlines = true;\n            }\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            if (convertNewlines === false)\n                replaceLinebreaks(tr, node, pos, mapFrom);\n            clearIncompatible(tr, tr.mapping.slice(mapFrom).map(pos, 1), type, undefined, convertNewlines === null);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrsHere, null, node.marks)), 0, 0), 1, true));\n            if (convertNewlines === true)\n                replaceNewlines(tr, node, pos, mapFrom);\n            return false;\n        }\n    });\n}\nfunction replaceNewlines(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.isText) {\n            let m, newline = /\\r?\\n|\\r/g;\n            while (m = newline.exec(child.text)) {\n                let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset + m.index);\n                tr.replaceWith(start, start + 1, node.type.schema.linebreakReplacement.create());\n            }\n        }\n    });\n}\nfunction replaceLinebreaks(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.type == child.type.schema.linebreakReplacement) {\n            let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset);\n            tr.replaceWith(start, start + 1, node.type.schema.text(\"\\n\"));\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let overrideChild = typesAfter && typesAfter[i + 1];\n        if (overrideChild)\n            rest = rest.replaceChild(0, overrideChild.type.create(overrideChild.attrs));\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && a.canAppend(b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true);\n    tr.step(step);\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n‘Fit’ a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let leftNode = leftNodes[d], def = definesContent(leftNode.type);\n        if (def && !leftNode.sameMarkup($from.node(Math.abs(preferredTarget) - 1)))\n            preferredDepth = d;\n        else if (def || !leftNode.type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n/**\nUpdate an attribute in the doc node.\n*/\nclass DocAttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let attrs = Object.create(null);\n        for (let name in doc.attrs)\n            attrs[name] = doc.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = doc.type.create(attrs, doc.content, doc.marks);\n        return StepResult.ok(updated);\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new DocAttrStep(this.attr, doc.attrs[this.attr]);\n    }\n    map(mapping) {\n        return this;\n    }\n    toJSON() {\n        return { stepType: \"docAttr\", attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for DocAttrStep.fromJSON\");\n        return new DocAttrStep(json.attr, json.value);\n    }\n}\nStep.jsonID(\"docAttr\", DocAttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    The `pos` addresses the document content. Use `setDocAttribute`\n    to set attributes on the document itself.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Set a single attribute on the document to a new value.\n    */\n    setDocAttribute(attr, value) {\n        this.step(new DocAttrStep(attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or a mark of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        if (!(mark instanceof Mark)) {\n            let node = this.doc.nodeAt(pos);\n            if (!node)\n                throw new RangeError(\"No node at position \" + pos);\n            mark = mark.isInSet(node.marks);\n            if (!mark)\n                return this;\n        }\n        this.step(new RemoveNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split.\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, DocAttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n", "import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata\nproperties: it will attach a property `\"pointer\"` with the value\n`true` to selection transactions directly caused by mouse or touch\ninput, a `\"composition\"` property holding an ID identifying the\ncomposition that caused it to transactions caused by composed DOM\ninput, and a `\"uiEvent\"` property of that may be `\"paste\"`,\n`\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure—it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @internal\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n", "import { TextSelection, NodeSelection, AllSelection, Selection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\nconst clearReusedRange = function () {\n    reusedRange = null;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? nodeSize(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction textNodeBefore$1(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3 && offset)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.parentNode && !hasBlockDesc(node)) {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction textNodeAfter$1(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3 && offset < node.nodeValue.length)\n            return node;\n        if (node.nodeType == 1 && offset < node.childNodes.length) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else if (node.parentNode && !hasBlockDesc(node)) {\n            offset = domIndex(node) + 1;\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction caretFromPoint(doc, x, y) {\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(x, y);\n            // Clip the offset, because Chrome will return a text offset\n            // into <input> nodes, which can't be treated as a regular DOM\n            // offset\n            if (pos)\n                return { node: pos.offsetNode, offset: Math.min(nodeSize(pos.offsetNode), pos.offset) };\n        }\n        catch (_) { }\n    }\n    if (doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(x, y);\n        if (range)\n            return { node: range.startContainer, offset: Math.min(nodeSize(range.startContainer), range.startOffset) };\n    }\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst windows = nav ? /Win/.test(nav.platform) : false;\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    let vp = doc.defaultView && doc.defaultView.visualViewport;\n    if (vp)\n        return {\n            left: 0, right: vp.width,\n            top: 0, bottom: vp.height\n        };\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1)\n            continue;\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - rect.top > bounding.bottom - bounding.top\n                ? rect.top + getSide(scrollMargin, \"top\") - bounding.top\n                : rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        if (atTop || /^(fixed|sticky)$/.test(getComputedStyle(parent).position))\n            break;\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    let firstBelow, coordsBelow;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            else if (rect.top > coords.top && !firstBelow && rect.left <= coords.left && rect.right >= coords.left) {\n                firstBelow = child;\n                coordsBelow = { left: Math.max(rect.left, Math.min(rect.right, coords.left)), top: rect.top };\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (!closest && firstBelow) {\n        closest = firstBelow;\n        coordsClosest = coordsBelow;\n        dxClosest = 0;\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outsideBlock = -1;\n    for (let cur = node, sawBlock = false;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true);\n        if (!desc)\n            return null;\n        if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent || !desc.contentDOM)) {\n            let rect = desc.dom.getBoundingClientRect();\n            if (desc.node.isBlock && desc.parent) {\n                // Only apply the horizontal test to the innermost block. Vertical for any parent.\n                if (!sawBlock && rect.left > coords.left || rect.top > coords.top)\n                    outsideBlock = desc.posBefore;\n                else if (!sawBlock && rect.right < coords.left || rect.bottom < coords.top)\n                    outsideBlock = desc.posAfter;\n                sawBlock = true;\n            }\n            if (!desc.contentDOM && outsideBlock < 0 && !desc.node.isText) {\n                // If we are inside a leaf, return the side of the leaf closer to the coords\n                let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2\n                    : coords.left < (rect.left + rect.right) / 2;\n                return before ? desc.posBefore : desc.posAfter;\n            }\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    let caret = caretFromPoint(doc, coords.left, coords.top);\n    if (caret)\n        ({ node, offset } = caret);\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        let prev;\n        // When clicking above the right side of an uneditable node, Chrome will report a cursor position after that node.\n        if (webkit && offset && node.nodeType == 1 && (prev = node.childNodes[offset - 1]).nodeType == 1 &&\n            prev.contentEditable == \"false\" && prev.getBoundingClientRect().top >= coords.top)\n            offset--;\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction nonZero(rect) {\n    return rect.top < rect.bottom || rect.left < rect.right;\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    if (rects.length) {\n        let first = rects[bias < 0 ? 0 : rects.length - 1];\n        if (nonZero(first))\n            return first;\n    }\n    return Array.prototype.find.call(rects, nonZero) || target.getBoundingClientRect();\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.contentDOM || nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    if (!sel)\n        return $head.pos == $head.start() || $head.pos == $head.end();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length)\n                    child = child.children[0];\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, root, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = root.getSelection();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n            let after = domSel.focusNode.childNodes[domSel.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n    isText(text) { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline), null, mark.attrs);\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            let spec = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node), null, node.attrs);\n            ({ dom, contentDOM } = spec);\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i, off)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let textNode = view.input.compositionNode;\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1) {\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n            if (this.contentDOM || !this.node.type.spec.draggable)\n                this.dom.removeAttribute(\"draggable\");\n        }\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    let docView = new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n    if (docView.contentDOM)\n        docView.updateChildren(view, 0);\n    return docView;\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n    isText(text) { return this.node.text == text; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, root, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n            : super.setSelection(anchor, head, root, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                let next = this.top.children[i];\n                if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index, pos) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom, updated;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.isLocked(nextDOM) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                else if (!locked && (updated = this.recreateWrapper(next, node, outerDeco, innerDeco, view, pos))) {\n                    this.top.children[this.index] = updated;\n                    if (updated.contentDOM) {\n                        updated.dirty = CONTENT_DIRTY;\n                        updated.updateChildren(view, pos + 1);\n                        updated.dirty = NOT_DIRTY;\n                    }\n                    this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // When a node with content is replaced by a different node with\n    // identical content, move over its children.\n    recreateWrapper(next, node, outerDeco, innerDeco, view, pos) {\n        if (next.dirty || node.isAtom || !next.children.length ||\n            !next.node.content.eq(node.content))\n            return null;\n        let wrapper = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (wrapper.contentDOM) {\n            wrapper.children = next.children;\n            next.children = [];\n            for (let ch of wrapper.children)\n                ch.parent = wrapper;\n        }\n        next.destroy();\n        return wrapper;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        let desc = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (desc.contentDOM)\n            desc.updateChildren(view, pos + 1);\n        this.top.children.splice(this.index++, 0, desc);\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n    isLocked(node) {\n        return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        let widget, widgets;\n        while (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let next = locals[decoIndex++];\n            if (next.widget) {\n                if (!widget)\n                    widget = next;\n                else\n                    (widgets || (widgets = [widget])).push(next);\n            }\n        }\n        if (widget) {\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        else {\n            while (decoIndex < locals.length && locals[decoIndex].to < end)\n                decoIndex++;\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            if (pos >= to && str.slice(to - text.length - childStart, to - childStart) == text)\n                return to - text.length;\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), $anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        $anchor = $head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        if (anchor < 0)\n            return null;\n        $anchor = doc.resolve(anchor);\n    }\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view.root, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    if (!domSel)\n        return;\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setStart(node.parentNode, domIndex(node) + 1);\n    else\n        range.setStart(node, 0);\n    range.collapse(true);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (mods.indexOf(\"s\") > -1) {\n            let { $head } = sel, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter;\n            if (!node || node.isText || !node.isLeaf)\n                return false;\n            let $newHead = view.state.doc.resolve($head.pos + node.nodeSize * (dir < 0 ? -1 : 1));\n            return apply(view, new TextSelection(sel.$anchor, $newHead));\n        }\n        else if (!sel.empty) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom, dir) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dir < 0 || dom.nextSibling || dom.nodeName != \"BR\");\n}\nfunction skipIgnoredNodes(view, dir) {\n    return dir < 0 ? skipIgnoredNodesBefore(view) : skipIgnoredNodesAfter(view);\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesBefore(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset], -1))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before, -1)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev, -1)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesAfter(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after, 1)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next, 1)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction textNodeAfter(node, offset) {\n    while (node && offset == node.childNodes.length && !hasBlockDesc(node)) {\n        offset = domIndex(node) + 1;\n        node = node.parentNode;\n    }\n    while (node && offset < node.childNodes.length) {\n        let next = node.childNodes[offset];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = 0;\n    }\n}\nfunction textNodeBefore(node, offset) {\n    while (node && !offset && !hasBlockDesc(node)) {\n        offset = domIndex(node);\n        node = node.parentNode;\n    }\n    while (node && offset) {\n        let next = node.childNodes[offset - 1];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = node.childNodes.length;\n    }\n}\nfunction setSelFocus(view, node, offset) {\n    if (node.nodeType != 3) {\n        let before, after;\n        if (after = textNodeAfter(node, offset)) {\n            node = after;\n            offset = 0;\n        }\n        else if (before = textNodeBefore(node, offset)) {\n            node = before;\n            offset = before.nodeValue.length;\n        }\n    }\n    let sel = view.domSelection();\n    if (!sel)\n        return;\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\nfunction findDirection(view, pos) {\n    let $pos = view.state.doc.resolve(pos);\n    if (!(chrome || windows) && $pos.parent.inlineContent) {\n        let coords = view.coordsAtPos(pos);\n        if (pos > $pos.start()) {\n            let before = view.coordsAtPos(pos - 1);\n            let mid = (before.top + before.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(before.left - coords.left) > 1)\n                return before.left < coords.left ? \"ltr\" : \"rtl\";\n        }\n        if (pos < $pos.end()) {\n            let after = view.coordsAtPos(pos + 1);\n            let mid = (after.top + after.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(after.left - coords.left) > 1)\n                return after.left > coords.left ? \"ltr\" : \"rtl\";\n        }\n    }\n    let computed = getComputedStyle(view.dom).direction;\n    return computed == \"rtl\" ? \"rtl\" : \"ltr\";\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodes(view, -1);\n    }\n    else if ((code == 46 && !event.shiftKey) || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodes(view, 1);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        let dir = code == 37 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? -1 : 1) : -1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        let dir = code == 39 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? 1 : -1) : 1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodes(view, -1);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodes(view, 1);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice, view); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text, slice };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText, view); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html, view); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0; i--) {\n            let child = dom.firstChild;\n            while (child && child.nodeType != 1)\n                child = child.nextSibling;\n            if (!child)\n                break;\n            dom = child;\n        }\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (fragment.childCount > 1)\n        openEnd = 0;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nfunction maybeWrapTrusted(html) {\n    let trustedTypes = window.trustedTypes;\n    if (!trustedTypes)\n        return html;\n    // With the require-trusted-types-for CSP, Chrome will block\n    // innerHTML, even on a detached document. This wraps the string in\n    // a way that makes the browser allow us to use its parser again.\n    return trustedTypes.createPolicy(\"detachedDocument\", { createHTML: (s) => s }).createHTML(html);\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = maybeWrapTrusted(html);\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\" };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastAndroidDelete = 0;\n        this.composing = false;\n        this.compositionNode = null;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.compositionID = 1;\n        // Set to a composition ID when there are pending changes at compositionend\n        this.compositionPendingChanges = 0;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (view.domObserver.selectionChanged(view.domSelectionRange()))\n        view.domObserver.flush();\n    else if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n            view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    if (view.state.selection.eq(selection))\n        return;\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc && targetDesc.dom.nodeType == 1 ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$to;\n        if (state.selection instanceof TextSelection &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view, !state.selection.empty);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        let sel = view.domSelection();\n                        if (sel)\n                            sel.collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        view.input.compositionPendingChanges = view.domObserver.pendingRecords().length ? view.input.compositionID : 0;\n        view.input.compositionNode = null;\n        if (view.input.compositionPendingChanges)\n            Promise.resolve().then(() => view.domObserver.flush());\n        view.input.compositionID++;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction findCompositionNode(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.focusNode)\n        return null;\n    let textBefore = textNodeBefore$1(sel.focusNode, sel.focusOffset);\n    let textAfter = textNodeAfter$1(sel.focusNode, sel.focusOffset);\n    if (textBefore && textAfter && textBefore != textAfter) {\n        let descAfter = textAfter.pmViewDesc, lastChanged = view.domObserver.lastChangedTextNode;\n        if (textBefore == lastChanged || textAfter == lastChanged)\n            return lastChanged;\n        if (!descAfter || !descAfter.isText(textAfter.nodeValue)) {\n            return textAfter;\n        }\n        else if (view.input.compositionNode == textAfter) {\n            let descBefore = textBefore.pmViewDesc;\n            if (!(!descBefore || !descBefore.isText(textBefore.nodeValue)))\n                return textAfter;\n        }\n    }\n    return textBefore || textAfter;\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, restarting = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (restarting || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view);\n        if (sel && !sel.eq(view.state.selection))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else if ((view.markCursor || restarting) && !view.state.selection.empty)\n            view.dispatch(view.state.tr.deleteSelection());\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, plain, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, plain, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n    let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, preferPlain)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\nfunction getText(clipboardData) {\n    let text = clipboardData.getData(\"text/plain\") || clipboardData.getData(\"Text\");\n    if (text)\n        return text;\n    let uris = clipboardData.getData(\"text/uri-list\");\n    return uris ? uris.replace(/\\r?\\n/g, \" \") : \"\";\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    if (data && doPaste(view, getText(data), data.getData(\"text/html\"), plain, event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move, node) {\n        this.slice = slice;\n        this.move = move;\n        this.node = node;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    let node;\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        node = NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos);\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            node = NodeSelection.create(view.state.doc, desc.posBefore);\n    }\n    let draggedSlice = (node || view.state.selection).content();\n    let { dom, text, slice } = serializeForClipboard(view, draggedSlice);\n    // Pre-120 Chrome versions clear files when calling `clearData` (#1472)\n    if (!event.dataTransfer.files.length || !chrome || chrome_version > 120)\n        event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, !event[dragCopyModifier], node);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    }\n    else {\n        slice = parseFromClipboard(view, getText(event.dataTransfer), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && !event[dragCopyModifier]);\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move) {\n        let { node } = dragging;\n        if (node)\n            node.replace(tr);\n        else\n            tr.deleteSelection();\n    }\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants—see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n    /**\n    @internal\n    */\n    get widget() { return this.type instanceof WidgetType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure—it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document. This will consume (modify) the `decorations` array, so\n    you must make a copy if you want need to preserve that.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Consumes the `decorations` array. Needs\n    access to the current document to create the appropriate tree\n    structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n    forEachSet(f) { f(this); }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members :\n                members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n        }\n    }\n    forEachSet(f) {\n        for (let i = 0; i < this.members.length; i++)\n            this.members[i].forEachSet(f);\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (oldStart >= baseOffset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.lastChangedTextNode = null;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    pendingRecords() {\n        if (this.observer)\n            for (let mut of this.observer.takeRecords())\n                this.queue.push(mut);\n        return this.queue;\n    }\n    selectionChanged(sel) {\n        return !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(this.view) && !this.ignoreSelectionChange(sel);\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.pendingRecords();\n        if (mutations.length)\n            this.queue = [];\n        let sel = view.domSelectionRange(), newSel = this.selectionChanged(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let [a, b] = brs;\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n            else {\n                let { focusNode } = this.currentSelection;\n                for (let br of brs) {\n                    let parent = br.parentNode;\n                    if (parent && parent.nodeName == \"LI\" && (!focusNode || blockParent(view, focusNode) != parent))\n                        br.remove();\n                }\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++) {\n                let node = mut.addedNodes[i];\n                added.push(node);\n                if (node.nodeType == 3)\n                    this.lastChangedTextNode = node;\n            }\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            this.lastChangedTextNode = mut.target;\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\nfunction rangeToSelectionRange(view, range) {\n    let anchorNode = range.startContainer, anchorOffset = range.startOffset;\n    let focusNode = range.endContainer, focusOffset = range.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view, selection) {\n    if (selection.getComposedRanges) {\n        let range = selection.getComposedRanges(view.root)[0];\n        if (range)\n            return rangeToSelectionRange(view, range);\n    }\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    return found ? rangeToSelectionRange(view, found) : null;\n}\nfunction blockParent(view, node) {\n    for (let p = node.parentNode; p && p != view.dom; p = p.parentNode) {\n        let desc = view.docView.nearestDesc(p, true);\n        if (desc && desc.node.isBlock)\n            return p;\n    }\n    return null;\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    let compositionID = view.input.compositionPendingChanges || (view.composing ? view.input.compositionID : 0);\n    view.input.compositionPendingChanges = 0;\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            if (chrome && android &&\n                view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime &&\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n                return;\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            if (compositionID)\n                tr.setMeta(\"composition\", compositionID);\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if (change)\n        view.input.domChangeCount++;\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection)) {\n                    let tr = view.state.tr.setSelection(sel);\n                    if (compositionID)\n                        tr.setMeta(\"composition\", compositionID);\n                    view.dispatch(tr);\n                }\n            }\n            return;\n        }\n    }\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size && !$from.sameParent($to) &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head == $to.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeBackspace(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome Android will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && android && change.endB == change.start)\n        view.input.lastAndroidDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let tr, storedMarks, markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            tr = view.state.tr.delete(chFrom, chTo);\n            storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            tr = view.state.tr;\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text)))\n                return;\n            tr = view.state.tr.insertText(text, chFrom, chTo);\n        }\n    }\n    if (!tr)\n        tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n    if (parse.sel) {\n        let sel = resolveSelection(view, tr.doc, parse.sel);\n        // Chrome Android will sometimes, during composition, report the\n        // selection in the wrong place. If it looks like that is\n        // happening, don't update the selection.\n        // Edge just doesn't move the cursor forward when you start typing\n        // in an empty block or between br nodes.\n        if (sel && !(chrome && android && view.composing && sel.empty &&\n            (change.start != change.endB || view.input.lastAndroidDelete < Date.now() - 100) &&\n            (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n            ie && sel.empty && sel.head == chFrom))\n            tr.setSelection(sel);\n    }\n    if (storedMarks)\n        tr.ensureMarks(storedMarks);\n    if (compositionID)\n        tr.setMeta(\"composition\", compositionID);\n    view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeBackspace(old, start, end, $newStart, $newEnd) {\n    if ( // The content must have shrunk\n    end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Handle the case where, rather than joining blocks, the change just removed an entire block\n    if (!$newStart.parent.isTextblock) {\n        let after = $start.nodeAfter;\n        return after != null && end == start + after.nodeSize;\n    }\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < b.size && isSurrogatePair(b.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < a.size && isSurrogatePair(a.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\nfunction isSurrogatePair(str) {\n    if (str.length != 2)\n        return false;\n    let a = str.charCodeAt(0), b = str.charCodeAt(1);\n    return a >= 0xDC00 && a <= 0xDFFF && b >= 0xD800 && b <= 0xDBFF;\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        var _a;\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (this.composing)\n                    this.input.compositionNode = findCompositionNode(this);\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco(outerDeco);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (((_a = this.dragging) === null || _a === void 0 ? void 0 : _a.node) && !prev.doc.eq(state.doc))\n            this.updateDraggedNode(this.dragging, prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    updateDraggedNode(dragging, prev) {\n        let sel = dragging.node, found = -1;\n        if (this.state.doc.nodeAt(sel.from) == sel.node) {\n            found = sel.from;\n        }\n        else {\n            let movedPos = sel.from + (this.state.doc.content.size - prev.doc.content.size);\n            let moved = movedPos > 0 && this.state.doc.nodeAt(movedPos);\n            if (moved == sel.node)\n                found = movedPos;\n        }\n        this.dragging = new Dragging(dragging.slice, dragging.move, found < 0 ? undefined : NodeSelection.create(this.state.doc, found));\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    When an existing editor view is moved to a new document or\n    shadow tree, call this to make it recompute its root.\n    */\n    updateRoot() {\n        this._root = null;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes—for example when interpreting an event\n    target—you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Run the editor's paste logic with the given HTML string. The\n    `event`, if given, will be passed to the\n    [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n    */\n    pasteHTML(html, event) {\n        return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Run the editor's paste logic with the given plain-text input.\n    */\n    pasteText(text, event) {\n        return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n        clearReusedRange();\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    Dispatch a transaction. Will call\n    [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n    when given, and otherwise defaults to applying the transaction to\n    the current state and calling\n    [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n    This method is bound to the view instance, so that it can be\n    easily passed around.\n    */\n    dispatch(tr) {\n        let dispatchTransaction = this._props.dispatchTransaction;\n        if (dispatchTransaction)\n            dispatchTransaction.call(this, tr);\n        else\n            this.updateState(this.state.apply(tr));\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        let sel = this.domSelection();\n        if (!sel)\n            return { focusNode: null, focusOffset: 0, anchorNode: null, anchorOffset: 0 };\n        return safari && this.root.nodeType === 11 &&\n            deepActiveElement(this.dom.ownerDocument) == this.dom && safariShadowSelectionRange(this, sel) || sel;\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                else if (attr == \"style\")\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    if (!attrs.translate)\n        attrs.translate = \"no\";\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.from, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };\n", "export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n", "import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift = true) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`—a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), baseName, direct = map[modifiers(name, event)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        // A character key\n        if (name.length == 1 && name != \" \") {\n            if (event.shiftKey) {\n                // In case the name was already modified by shift, try looking\n                // it up without its shift modifier\n                let noShift = map[modifiers(name, event, false)];\n                if (noShift && noShift(view.state, view.dispatch, view))\n                    return true;\n            }\n            if ((event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n                (baseName = base[event.keyCode]) && baseName != name) {\n                // Try falling back to the keyCode when there's a modifier\n                // active or the character produced isn't ASCII, and our table\n                // produces a different name from the the keyCode. See #668,\n                // #1060\n                let fromCode = map[modifiers(baseName, event)];\n                if (fromCode && fromCode(view.state, view.dispatch, view))\n                    return true;\n            }\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n", "import { liftTarget, replaceStep, ReplaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, TextSelection, AllSelection, SelectionRange } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\nfunction atBlockStart(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it—if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch, -1))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        for (let depth = $cursor.depth;; depth--) {\n            let delStep = replaceStep(state.doc, $cursor.before(depth), $cursor.after(depth), Slice.empty);\n            if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n                if (dispatch) {\n                    let tr = state.tr.step(delStep);\n                    tr.setSelection(textblockAt(before, \"end\")\n                        ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                        : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                    dispatch(tr.scrollIntoView());\n                }\n                return true;\n            }\n            if (depth == 1 || $cursor.node(depth - 1).childCount > 1)\n                break;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nA more limited form of [`joinBackward`]($commands.joinBackward)\nthat only tries to join the current textblock to the one before\nit, if the cursor is at the start of a textblock.\n*/\nconst joinTextblockBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\n/**\nA more limited form of [`joinForward`]($commands.joinForward)\nthat only tries to join the current textblock to the one after\nit, if the cursor is at the end of a textblock.\n*/\nconst joinTextblockForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\nfunction joinTextblocksAround(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, beforeText = before, beforePos = $cut.pos - 1;\n    for (; !beforeText.isTextblock; beforePos--) {\n        if (beforeText.type.spec.isolating)\n            return false;\n        let child = beforeText.lastChild;\n        if (!child)\n            return false;\n        beforeText = child;\n    }\n    let after = $cut.nodeAfter, afterText = after, afterPos = $cut.pos + 1;\n    for (; !afterText.isTextblock; afterPos++) {\n        if (afterText.type.spec.isolating)\n            return false;\n        let child = afterText.firstChild;\n        if (!child)\n            return false;\n        afterText = child;\n    }\n    let step = replaceStep(state.doc, beforePos, afterPos, Slice.empty);\n    if (!step || step.from != beforePos ||\n        step instanceof ReplaceStep && step.slice.size >= afterPos - beforePos)\n        return false;\n    if (dispatch) {\n        let tr = state.tr.step(step);\n        tr.setSelection(TextSelection.create(tr.doc, beforePos));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\nfunction atBlockEnd(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch, 1))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nCreate a variant of [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock) that uses\na custom function to determine the type of the newly split off block.\n*/\nfunction splitBlockAs(splitNode) {\n    return (state, dispatch) => {\n        let { $from, $to } = state.selection;\n        if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n            if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n                return false;\n            if (dispatch)\n                dispatch(state.tr.split($from.pos).scrollIntoView());\n            return true;\n        }\n        if (!$from.parent.isBlock)\n            return false;\n        if (dispatch) {\n            let atEnd = $to.parentOffset == $to.parent.content.size;\n            let tr = state.tr;\n            if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n                tr.deleteSelection();\n            let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n            let splitType = splitNode && splitNode($to.parent, atEnd, $from);\n            let types = splitType ? [splitType] : atEnd && deflt ? [{ type: deflt }] : undefined;\n            let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n            if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\n                if (deflt)\n                    types = [{ type: deflt }];\n                can = true;\n            }\n            if (can) {\n                tr.split(tr.mapping.map($from.pos), 1, types);\n                if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n                    let first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first);\n                    if (deflt && $from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                        tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n                }\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = splitBlockAs();\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr\n            .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n            .join($pos.pos)\n            .scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch, dir) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    let isolated = before.type.spec.isolating || after.type.spec.isolating;\n    if (!isolated && joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = !isolated && $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let joinAt = end + 2 * conn.length;\n            if (canJoin(tr.doc, joinAt))\n                tr.join(joinAt);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = after.type.spec.isolating || (dir > 0 && isolated) ? null : Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let applicable = false;\n        for (let i = 0; i < state.selection.ranges.length && !applicable; i++) {\n            let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n            state.doc.nodesBetween(from, to, (node, pos) => {\n                if (applicable)\n                    return false;\n                if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                    return;\n                if (node.type == nodeType) {\n                    applicable = true;\n                }\n                else {\n                    let $pos = state.doc.resolve(pos), index = $pos.index();\n                    applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n                }\n            });\n        }\n        if (!applicable)\n            return false;\n        if (dispatch) {\n            let tr = state.tr;\n            for (let i = 0; i < state.selection.ranges.length; i++) {\n                let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n                tr.setBlockType(from, to, nodeType, attrs);\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type, enterAtoms) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (can || !enterAtoms && node.isAtom && node.isInline && pos >= $from.pos && pos + node.nodeSize <= $to.pos)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\nfunction removeInlineAtoms(ranges) {\n    let result = [];\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        $from.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (node.isAtom && node.content.size && node.isInline && pos >= $from.pos && pos + node.nodeSize <= $to.pos) {\n                if (pos + 1 > $from.pos)\n                    result.push(new SelectionRange($from, $from.doc.resolve(pos + 1)));\n                $from = $from.doc.resolve(pos + 1 + node.content.size);\n                return false;\n            }\n        });\n        if ($from.pos < $to.pos)\n            result.push(new SelectionRange($from, $to));\n    }\n    return result;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null, options) {\n    let removeWhenPresent = (options && options.removeWhenPresent) !== false;\n    let enterAtoms = (options && options.enterInlineAtoms) !== false;\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType, enterAtoms))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let add, tr = state.tr;\n                if (!enterAtoms)\n                    ranges = removeInlineAtoms(ranges);\n                if (removeWhenPresent) {\n                    add = !ranges.some(r => state.doc.rangeHasMark(r.$from.pos, r.$to.pos, markType));\n                }\n                else {\n                    add = !ranges.every(r => {\n                        let missing = false;\n                        tr.doc.nodesBetween(r.$from.pos, r.$to.pos, (node, pos, parent) => {\n                            if (missing)\n                                return false;\n                            missing = !markType.isInSet(node.marks) && !!parent && parent.type.allowsMarkType(markType) &&\n                                !(node.isText && /^\\s*$/.test(node.textBetween(Math.max(0, r.$from.pos - pos), Math.min(node.nodeSize, r.$to.pos - pos))));\n                        });\n                        return !missing;\n                    });\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (!add) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinTextblockBackward, joinTextblockForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockAs, splitBlockKeepMarks, toggleMark, wrapIn };\n", "import { findWrapping, ReplaceAroundStep, canSplit, liftTarget, canJoin } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n/**\nAn ordered list [node spec](https://prosemirror.net/docs/ref/#model.NodeSpec). Has a single\nattribute, `order`, which determines the number at which the list\nstarts counting, and defaults to 1. Represented as an `<ol>`\nelement.\n*/\nconst orderedList = {\n    attrs: { order: { default: 1, validate: \"number\" } },\n    parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1 };\n            } }],\n    toDOM(node) {\n        return node.attrs.order == 1 ? olDOM : [\"ol\", { start: node.attrs.order }, 0];\n    }\n};\n/**\nA bullet list node spec, represented in the DOM as `<ul>`.\n*/\nconst bulletList = {\n    parseDOM: [{ tag: \"ul\" }],\n    toDOM() { return ulDOM; }\n};\n/**\nA list item (`<li>`) spec.\n*/\nconst listItem = {\n    parseDOM: [{ tag: \"li\" }],\n    toDOM() { return liDOM; },\n    defining: true\n};\nfunction add(obj, props) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    for (let prop in props)\n        copy[prop] = props[prop];\n    return copy;\n}\n/**\nConvenience function for adding list-related node types to a map\nspecifying the nodes for a schema. Adds\n[`orderedList`](https://prosemirror.net/docs/ref/#schema-list.orderedList) as `\"ordered_list\"`,\n[`bulletList`](https://prosemirror.net/docs/ref/#schema-list.bulletList) as `\"bullet_list\"`, and\n[`listItem`](https://prosemirror.net/docs/ref/#schema-list.listItem) as `\"list_item\"`.\n\n`itemContent` determines the content expression for the list items.\nIf you want the commands defined in this module to apply to your\nlist structure, it should have a shape like `\"paragraph block*\"` or\n`\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\ngiven to assign a group name to the list node types, for example\n`\"block\"`.\n*/\nfunction addListNodes(nodes, itemContent, listGroup) {\n    return nodes.append({\n        ordered_list: add(orderedList, { content: \"list_item+\", group: listGroup }),\n        bullet_list: add(bulletList, { content: \"list_item+\", group: listGroup }),\n        list_item: add(listItem, { content: itemContent })\n    });\n}\n/**\nReturns a command function that wraps the selection in a list with\nthe given type an attributes. If `dispatch` is null, only return a\nvalue to indicate whether this is possible, but don't actually\nperform the change.\n*/\nfunction wrapInList(listType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), doJoin = false, outerRange = range;\n        if (!range)\n            return false;\n        // This is at the top of an existing list item\n        if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n            // Don't do anything if this is the top of the list\n            if ($from.index(range.depth - 1) == 0)\n                return false;\n            let $insert = state.doc.resolve(range.start - 2);\n            outerRange = new NodeRange($insert, $insert, range.depth);\n            if (range.endIndex < range.parent.childCount)\n                range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth);\n            doJoin = true;\n        }\n        let wrap = findWrapping(outerRange, listType, attrs, range);\n        if (!wrap)\n            return false;\n        if (dispatch)\n            dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView());\n        return true;\n    };\n}\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--)\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end, new Slice(content, 0, 0), wrappers.length, true));\n    let found = 0;\n    for (let i = 0; i < wrappers.length; i++)\n        if (wrappers[i].type == listType)\n            found = i + 1;\n    let splitDepth = wrappers.length - found;\n    let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n    for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += 2 * splitDepth;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\n/**\nBuild a command that splits a non-empty textblock at the top level\nof a list item by also splitting that list item.\n*/\nfunction splitListItem(itemType, itemAttrs) {\n    return function (state, dispatch) {\n        let { $from, $to, node } = state.selection;\n        if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to))\n            return false;\n        let grandParent = $from.node(-1);\n        if (grandParent.type != itemType)\n            return false;\n        if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth == 3 || $from.node(-3).type != itemType ||\n                $from.index(-2) != $from.node(-2).childCount - 1)\n                return false;\n            if (dispatch) {\n                let wrap = Fragment.empty;\n                let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n                // Build a fragment containing empty versions of the structure\n                // from the outer list item to the parent node of the cursor\n                for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n                    wrap = Fragment.from($from.node(d).copy(wrap));\n                let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n                    : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n                // Add a second list item with an empty default start node\n                wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n                let start = $from.before($from.depth - (depthBefore - 1));\n                let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n                let sel = -1;\n                tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n                    if (sel > -1)\n                        return false;\n                    if (node.isTextblock && node.content.size == 0)\n                        sel = pos + 1;\n                });\n                if (sel > -1)\n                    tr.setSelection(Selection.near(tr.doc.resolve(sel)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        let tr = state.tr.delete($from.pos, $to.pos);\n        let types = nextType ? [itemAttrs ? { type: itemType, attrs: itemAttrs } : null, { type: nextType }] : undefined;\n        if (!canSplit(tr.doc, $from.pos, 2, types))\n            return false;\n        if (dispatch)\n            dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n        return true;\n    };\n}\n/**\nActs like [`splitListItem`](https://prosemirror.net/docs/ref/#schema-list.splitListItem), but\nwithout resetting the set of active marks at the cursor.\n*/\nfunction splitListItemKeepMarks(itemType, itemAttrs) {\n    let split = splitListItem(itemType, itemAttrs);\n    return (state, dispatch) => {\n        return split(state, dispatch && (tr => {\n            let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n            if (marks)\n                tr.ensureMarks(marks);\n            dispatch(tr);\n        }));\n    };\n}\n/**\nCreate a command to lift the list item around the selection up into\na wrapping list.\n*/\nfunction liftListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        if (!dispatch)\n            return true;\n        if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n            return liftToOuterList(state, dispatch, itemType, range);\n        else // Outer list node\n            return liftOutOfList(state, dispatch, range);\n    };\n}\nfunction liftToOuterList(state, dispatch, itemType, range) {\n    let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n    }\n    const target = liftTarget(range);\n    if (target == null)\n        return false;\n    tr.lift(range, target);\n    let after = tr.mapping.map(end, -1) - 1;\n    if (canJoin(tr.doc, after))\n        tr.join(after);\n    dispatch(tr.scrollIntoView());\n    return true;\n}\nfunction liftOutOfList(state, dispatch, range) {\n    let tr = state.tr, list = range.parent;\n    // Merge the list items into a single big item\n    for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    let $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n    if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize)\n        return false;\n    let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n    let parent = $start.node(-1), indexBefore = $start.index(-1);\n    if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n        return false;\n    let start = $start.pos, end = start + item.nodeSize;\n    // Strip off the surrounding list. At the sides where we're not at\n    // the end of the list, the existing list is closed. At sides where\n    // this is the end, it is overwritten to its end.\n    tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n        .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    dispatch(tr.scrollIntoView());\n    return true;\n}\n/**\nCreate a command to sink the list item around the selection down\ninto an inner list.\n*/\nfunction sinkListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        let startIndex = range.startIndex;\n        if (startIndex == 0)\n            return false;\n        let parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n        if (nodeBefore.type != itemType)\n            return false;\n        if (dispatch) {\n            let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n            let inner = Fragment.from(nestedBefore ? itemType.create() : null);\n            let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            let before = range.start, after = range.end;\n            dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true))\n                .scrollIntoView());\n        }\n        return true;\n    };\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, splitListItemKeepMarks, wrapInList };\n", "import { EditorState, Transaction } from '@tiptap/pm/state'\n\n/**\n * Takes a Transaction & Editor State and turns it into a chainable state object\n * @param config The transaction and state to create the chainable state from\n * @returns A chainable Editor state object\n */\nexport function createChainableState(config: {\n  transaction: Transaction\n  state: EditorState\n}): EditorState {\n  const { state, transaction } = config\n  let { selection } = transaction\n  let { doc } = transaction\n  let { storedMarks } = transaction\n\n  return {\n    ...state,\n    apply: state.apply.bind(state),\n    applyTransaction: state.applyTransaction.bind(state),\n    plugins: state.plugins,\n    schema: state.schema,\n    reconfigure: state.reconfigure.bind(state),\n    toJSON: state.toJSON.bind(state),\n    get storedMarks() {\n      return storedMarks\n    },\n    get selection() {\n      return selection\n    },\n    get doc() {\n      return doc\n    },\n    get tr() {\n      selection = transaction.selection\n      doc = transaction.doc\n      storedMarks = transaction.storedMarks\n\n      return transaction\n    },\n  }\n}\n", "import { EditorState, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { createChainableState } from './helpers/createChainableState.js'\nimport {\n  AnyCommands, CanCommands, ChainedCommands, CommandProps, SingleCommands,\n} from './types.js'\n\nexport class CommandManager {\n  editor: Editor\n\n  rawCommands: AnyCommands\n\n  customState?: EditorState\n\n  constructor(props: { editor: Editor; state?: EditorState }) {\n    this.editor = props.editor\n    this.rawCommands = this.editor.extensionManager.commands\n    this.customState = props.state\n  }\n\n  get hasCustomState(): boolean {\n    return !!this.customState\n  }\n\n  get state(): EditorState {\n    return this.customState || this.editor.state\n  }\n\n  get commands(): SingleCommands {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n    const { tr } = state\n    const props = this.buildProps(tr)\n\n    return Object.fromEntries(\n      Object.entries(rawCommands).map(([name, command]) => {\n        const method = (...args: any[]) => {\n          const callback = command(...args)(props)\n\n          if (!tr.getMeta('preventDispatch') && !this.hasCustomState) {\n            view.dispatch(tr)\n          }\n\n          return callback\n        }\n\n        return [name, method]\n      }),\n    ) as unknown as SingleCommands\n  }\n\n  get chain(): () => ChainedCommands {\n    return () => this.createChain()\n  }\n\n  get can(): () => CanCommands {\n    return () => this.createCan()\n  }\n\n  public createChain(startTr?: Transaction, shouldDispatch = true): ChainedCommands {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n    const callbacks: boolean[] = []\n    const hasStartTransaction = !!startTr\n    const tr = startTr || state.tr\n\n    const run = () => {\n      if (\n        !hasStartTransaction\n        && shouldDispatch\n        && !tr.getMeta('preventDispatch')\n        && !this.hasCustomState\n      ) {\n        view.dispatch(tr)\n      }\n\n      return callbacks.every(callback => callback === true)\n    }\n\n    const chain = {\n      ...Object.fromEntries(\n        Object.entries(rawCommands).map(([name, command]) => {\n          const chainedCommand = (...args: never[]) => {\n            const props = this.buildProps(tr, shouldDispatch)\n            const callback = command(...args)(props)\n\n            callbacks.push(callback)\n\n            return chain\n          }\n\n          return [name, chainedCommand]\n        }),\n      ),\n      run,\n    } as unknown as ChainedCommands\n\n    return chain\n  }\n\n  public createCan(startTr?: Transaction): CanCommands {\n    const { rawCommands, state } = this\n    const dispatch = false\n    const tr = startTr || state.tr\n    const props = this.buildProps(tr, dispatch)\n    const formattedCommands = Object.fromEntries(\n      Object.entries(rawCommands).map(([name, command]) => {\n        return [name, (...args: never[]) => command(...args)({ ...props, dispatch: undefined })]\n      }),\n    ) as unknown as SingleCommands\n\n    return {\n      ...formattedCommands,\n      chain: () => this.createChain(tr, dispatch),\n    } as CanCommands\n  }\n\n  public buildProps(tr: Transaction, shouldDispatch = true): CommandProps {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n\n    const props: CommandProps = {\n      tr,\n      editor,\n      view,\n      state: createChainableState({\n        state,\n        transaction: tr,\n      }),\n      dispatch: shouldDispatch ? () => undefined : undefined,\n      chain: () => this.createChain(tr, shouldDispatch),\n      can: () => this.createCan(tr),\n      get commands() {\n        return Object.fromEntries(\n          Object.entries(rawCommands).map(([name, command]) => {\n            return [name, (...args: never[]) => command(...args)(props)]\n          }),\n        ) as unknown as SingleCommands\n      },\n    }\n\n    return props\n  }\n}\n", "type StringKeyOf<T> = Extract<keyof T, string>\ntype CallbackType<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>,\n> = T[EventName] extends any[] ? T[EventName] : [T[EventName]]\ntype CallbackFunction<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>,\n> = (...props: CallbackType<T, EventName>) => any\n\nexport class EventEmitter<T extends Record<string, any>> {\n\n  private callbacks: { [key: string]: Function[] } = {}\n\n  public on<EventName extends StringKeyOf<T>>(event: EventName, fn: CallbackFunction<T, EventName>): this {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    this.callbacks[event].push(fn)\n\n    return this\n  }\n\n  public emit<EventName extends StringKeyOf<T>>(event: EventName, ...args: CallbackType<T, EventName>): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args))\n    }\n\n    return this\n  }\n\n  public off<EventName extends StringKeyOf<T>>(event: EventName, fn?: CallbackFunction<T, EventName>): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter(callback => callback !== fn)\n      } else {\n        delete this.callbacks[event]\n      }\n    }\n\n    return this\n  }\n\n  public removeAllListeners(): void {\n    this.callbacks = {}\n  }\n}\n", "import { AnyExtension, MaybeThisParameterType, RemoveThis } from '../types.js'\n\n/**\n * Returns a field from an extension\n * @param extension The Tiptap extension\n * @param field The field, for example `renderHTML` or `priority`\n * @param context The context object that should be passed as `this` into the function\n * @returns The field value\n */\nexport function getExtensionField<T = any>(\n  extension: AnyExtension,\n  field: string,\n  context?: Omit<MaybeThisParameterType<T>, 'parent'>,\n): RemoveThis<T> {\n\n  if (extension.config[field] === undefined && extension.parent) {\n    return getExtensionField(extension.parent, field, context)\n  }\n\n  if (typeof extension.config[field] === 'function') {\n    const value = extension.config[field].bind({\n      ...context,\n      parent: extension.parent\n        ? getExtensionField(extension.parent, field, context)\n        : null,\n    })\n\n    return value\n  }\n\n  return extension.config[field]\n}\n", "import { Extension } from '../Extension.js'\nimport { Mark } from '../Mark.js'\nimport { Node } from '../Node.js'\nimport { Extensions } from '../types.js'\n\nexport function splitExtensions(extensions: Extensions) {\n  const baseExtensions = extensions.filter(extension => extension.type === 'extension') as Extension[]\n  const nodeExtensions = extensions.filter(extension => extension.type === 'node') as Node[]\n  const markExtensions = extensions.filter(extension => extension.type === 'mark') as Mark[]\n\n  return {\n    baseExtensions,\n    nodeExtensions,\n    markExtensions,\n  }\n}\n", "import { MarkConfig, NodeConfig } from '../index.js'\nimport {\n  AnyConfig,\n  Attribute,\n  Attributes,\n  ExtensionAttribute,\n  Extensions,\n} from '../types.js'\nimport { getExtensionField } from './getExtensionField.js'\nimport { splitExtensions } from './splitExtensions.js'\n\n/**\n * Get a list of all extension attributes defined in `addAttribute` and `addGlobalAttribute`.\n * @param extensions List of extensions\n */\nexport function getAttributesFromExtensions(extensions: Extensions): ExtensionAttribute[] {\n  const extensionAttributes: ExtensionAttribute[] = []\n  const { nodeExtensions, markExtensions } = splitExtensions(extensions)\n  const nodeAndMarkExtensions = [...nodeExtensions, ...markExtensions]\n  const defaultAttribute: Required<Attribute> = {\n    default: null,\n    rendered: true,\n    renderHTML: null,\n    parseHTML: null,\n    keepOnSplit: true,\n    isRequired: false,\n  }\n\n  extensions.forEach(extension => {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n      extensions: nodeAndMarkExtensions,\n    }\n\n    const addGlobalAttributes = getExtensionField<AnyConfig['addGlobalAttributes']>(\n      extension,\n      'addGlobalAttributes',\n      context,\n    )\n\n    if (!addGlobalAttributes) {\n      return\n    }\n\n    const globalAttributes = addGlobalAttributes()\n\n    globalAttributes.forEach(globalAttribute => {\n      globalAttribute.types.forEach(type => {\n        Object\n          .entries(globalAttribute.attributes)\n          .forEach(([name, attribute]) => {\n            extensionAttributes.push({\n              type,\n              name,\n              attribute: {\n                ...defaultAttribute,\n                ...attribute,\n              },\n            })\n          })\n      })\n    })\n  })\n\n  nodeAndMarkExtensions.forEach(extension => {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    const addAttributes = getExtensionField<NodeConfig['addAttributes'] | MarkConfig['addAttributes']>(\n      extension,\n      'addAttributes',\n      context,\n    )\n\n    if (!addAttributes) {\n      return\n    }\n\n    // TODO: remove `as Attributes`\n    const attributes = addAttributes() as Attributes\n\n    Object\n      .entries(attributes)\n      .forEach(([name, attribute]) => {\n        const mergedAttr = {\n          ...defaultAttribute,\n          ...attribute,\n        }\n\n        if (typeof mergedAttr?.default === 'function') {\n          mergedAttr.default = mergedAttr.default()\n        }\n\n        if (mergedAttr?.isRequired && mergedAttr?.default === undefined) {\n          delete mergedAttr.default\n        }\n\n        extensionAttributes.push({\n          type: extension.name,\n          name,\n          attribute: mergedAttr,\n        })\n      })\n  })\n\n  return extensionAttributes\n}\n", "import { NodeType, Schema } from '@tiptap/pm/model'\n\nexport function getNodeType(nameOrType: string | NodeType, schema: Schema): NodeType {\n  if (typeof nameOrType === 'string') {\n    if (!schema.nodes[nameOrType]) {\n      throw Error(\n        `There is no node type named '${nameOrType}'. Maybe you forgot to add the extension?`,\n      )\n    }\n\n    return schema.nodes[nameOrType]\n  }\n\n  return nameOrType\n}\n", "export function mergeAttributes(...objects: Record<string, any>[]): Record<string, any> {\n  return objects\n    .filter(item => !!item)\n    .reduce((items, item) => {\n      const mergedAttributes = { ...items }\n\n      Object.entries(item).forEach(([key, value]) => {\n        const exists = mergedAttributes[key]\n\n        if (!exists) {\n          mergedAttributes[key] = value\n\n          return\n        }\n\n        if (key === 'class') {\n          const valueClasses: string[] = value ? value.split(' ') : []\n          const existingClasses: string[] = mergedAttributes[key] ? mergedAttributes[key].split(' ') : []\n\n          const insertClasses = valueClasses.filter(\n            valueClass => !existingClasses.includes(valueClass),\n          )\n\n          mergedAttributes[key] = [...existingClasses, ...insertClasses].join(' ')\n        } else if (key === 'style') {\n          mergedAttributes[key] = [mergedAttributes[key], value].join('; ')\n        } else {\n          mergedAttributes[key] = value\n        }\n      })\n\n      return mergedAttributes\n    }, {})\n}\n", "import { Mark, Node } from '@tiptap/pm/model'\n\nimport { ExtensionAttribute } from '../types.js'\nimport { mergeAttributes } from '../utilities/mergeAttributes.js'\n\nexport function getRenderedAttributes(\n  nodeOrMark: Node | Mark,\n  extensionAttributes: ExtensionAttribute[],\n): Record<string, any> {\n  return extensionAttributes\n    .filter(item => item.attribute.rendered)\n    .map(item => {\n      if (!item.attribute.renderHTML) {\n        return {\n          [item.name]: nodeOrMark.attrs[item.name],\n        }\n      }\n\n      return item.attribute.renderHTML(nodeOrMark.attrs) || {}\n    })\n    .reduce((attributes, attribute) => mergeAttributes(attributes, attribute), {})\n}\n", "export function isFunction(value: any): value is Function {\n  return typeof value === 'function'\n}\n", "import { MaybeReturnType } from '../types.js'\nimport { isFunction } from './isFunction.js'\n\n/**\n * Optionally calls `value` as a function.\n * Otherwise it is returned directly.\n * @param value Function or any value.\n * @param context Optional context to bind to function.\n * @param props Optional props to pass to function.\n */\nexport function callOrReturn<T>(value: T, context: any = undefined, ...props: any[]): MaybeReturnType<T> {\n  if (isFunction(value)) {\n    if (context) {\n      return value.bind(context)(...props)\n    }\n\n    return value(...props)\n  }\n\n  return value as MaybeReturnType<T>\n}\n", "export function isEmptyObject(value = {}): boolean {\n  return Object.keys(value).length === 0 && value.constructor === Object\n}\n", "export function fromString(value: any): any {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  if (value.match(/^[+-]?(?:\\d*\\.)?\\d+$/)) {\n    return Number(value)\n  }\n\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  return value\n}\n", "import { ParseRule } from '@tiptap/pm/model'\n\nimport { ExtensionAttribute } from '../types.js'\nimport { fromString } from '../utilities/fromString.js'\n\n/**\n * This function merges extension attributes into parserule attributes (`attrs` or `getAttrs`).\n * Cancels when `getAttrs` returned `false`.\n * @param parseRule ProseMirror ParseRule\n * @param extensionAttributes List of attributes to inject\n */\nexport function injectExtensionAttributesToParseRule(\n  parseRule: ParseRule,\n  extensionAttributes: ExtensionAttribute[],\n): ParseRule {\n  if ('style' in parseRule) {\n    return parseRule\n  }\n\n  return {\n    ...parseRule,\n    getAttrs: (node: HTMLElement) => {\n      const oldAttributes = parseRule.getAttrs ? parseRule.getAttrs(node) : parseRule.attrs\n\n      if (oldAttributes === false) {\n        return false\n      }\n\n      const newAttributes = extensionAttributes.reduce((items, item) => {\n        const value = item.attribute.parseHTML\n          ? item.attribute.parseHTML(node)\n          : fromString((node).getAttribute(item.name))\n\n        if (value === null || value === undefined) {\n          return items\n        }\n\n        return {\n          ...items,\n          [item.name]: value,\n        }\n      }, {})\n\n      return { ...oldAttributes, ...newAttributes }\n    },\n  }\n}\n", "import {\n  MarkSpec, NodeSpec, Schema, TagParseRule,\n} from '@tiptap/pm/model'\n\nimport { Editor, MarkConfig, NodeConfig } from '../index.js'\nimport { AnyConfig, Extensions } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\nimport { isEmptyObject } from '../utilities/isEmptyObject.js'\nimport { getAttributesFromExtensions } from './getAttributesFromExtensions.js'\nimport { getExtensionField } from './getExtensionField.js'\nimport { getRenderedAttributes } from './getRenderedAttributes.js'\nimport { injectExtensionAttributesToParseRule } from './injectExtensionAttributesToParseRule.js'\nimport { splitExtensions } from './splitExtensions.js'\n\nfunction cleanUpSchemaItem<T>(data: T) {\n  return Object.fromEntries(\n    // @ts-ignore\n    Object.entries(data).filter(([key, value]) => {\n      if (key === 'attrs' && isEmptyObject(value as {} | undefined)) {\n        return false\n      }\n\n      return value !== null && value !== undefined\n    }),\n  ) as T\n}\n\n/**\n * Creates a new Prosemirror schema based on the given extensions.\n * @param extensions An array of Tiptap extensions\n * @param editor The editor instance\n * @returns A Prosemirror schema\n */\nexport function getSchemaByResolvedExtensions(extensions: Extensions, editor?: Editor): Schema {\n  const allAttributes = getAttributesFromExtensions(extensions)\n  const { nodeExtensions, markExtensions } = splitExtensions(extensions)\n  const topNode = nodeExtensions.find(extension => getExtensionField(extension, 'topNode'))?.name\n\n  const nodes = Object.fromEntries(\n    nodeExtensions.map(extension => {\n      const extensionAttributes = allAttributes.filter(\n        attribute => attribute.type === extension.name,\n      )\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor,\n      }\n\n      const extraNodeFields = extensions.reduce((fields, e) => {\n        const extendNodeSchema = getExtensionField<AnyConfig['extendNodeSchema']>(\n          e,\n          'extendNodeSchema',\n          context,\n        )\n\n        return {\n          ...fields,\n          ...(extendNodeSchema ? extendNodeSchema(extension) : {}),\n        }\n      }, {})\n\n      const schema: NodeSpec = cleanUpSchemaItem({\n        ...extraNodeFields,\n        content: callOrReturn(\n          getExtensionField<NodeConfig['content']>(extension, 'content', context),\n        ),\n        marks: callOrReturn(getExtensionField<NodeConfig['marks']>(extension, 'marks', context)),\n        group: callOrReturn(getExtensionField<NodeConfig['group']>(extension, 'group', context)),\n        inline: callOrReturn(getExtensionField<NodeConfig['inline']>(extension, 'inline', context)),\n        atom: callOrReturn(getExtensionField<NodeConfig['atom']>(extension, 'atom', context)),\n        selectable: callOrReturn(\n          getExtensionField<NodeConfig['selectable']>(extension, 'selectable', context),\n        ),\n        draggable: callOrReturn(\n          getExtensionField<NodeConfig['draggable']>(extension, 'draggable', context),\n        ),\n        code: callOrReturn(getExtensionField<NodeConfig['code']>(extension, 'code', context)),\n        whitespace: callOrReturn(getExtensionField<NodeConfig['whitespace']>(extension, 'whitespace', context)),\n        defining: callOrReturn(\n          getExtensionField<NodeConfig['defining']>(extension, 'defining', context),\n        ),\n        isolating: callOrReturn(\n          getExtensionField<NodeConfig['isolating']>(extension, 'isolating', context),\n        ),\n        attrs: Object.fromEntries(\n          extensionAttributes.map(extensionAttribute => {\n            return [extensionAttribute.name, { default: extensionAttribute?.attribute?.default }]\n          }),\n        ),\n      })\n\n      const parseHTML = callOrReturn(\n        getExtensionField<NodeConfig['parseHTML']>(extension, 'parseHTML', context),\n      )\n\n      if (parseHTML) {\n        schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes)) as TagParseRule[]\n      }\n\n      const renderHTML = getExtensionField<NodeConfig['renderHTML']>(\n        extension,\n        'renderHTML',\n        context,\n      )\n\n      if (renderHTML) {\n        schema.toDOM = node => renderHTML({\n          node,\n          HTMLAttributes: getRenderedAttributes(node, extensionAttributes),\n        })\n      }\n\n      const renderText = getExtensionField<NodeConfig['renderText']>(\n        extension,\n        'renderText',\n        context,\n      )\n\n      if (renderText) {\n        schema.toText = renderText\n      }\n\n      return [extension.name, schema]\n    }),\n  )\n\n  const marks = Object.fromEntries(\n    markExtensions.map(extension => {\n      const extensionAttributes = allAttributes.filter(\n        attribute => attribute.type === extension.name,\n      )\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor,\n      }\n\n      const extraMarkFields = extensions.reduce((fields, e) => {\n        const extendMarkSchema = getExtensionField<AnyConfig['extendMarkSchema']>(\n          e,\n          'extendMarkSchema',\n          context,\n        )\n\n        return {\n          ...fields,\n          ...(extendMarkSchema ? extendMarkSchema(extension) : {}),\n        }\n      }, {})\n\n      const schema: MarkSpec = cleanUpSchemaItem({\n        ...extraMarkFields,\n        inclusive: callOrReturn(\n          getExtensionField<MarkConfig['inclusive']>(extension, 'inclusive', context),\n        ),\n        excludes: callOrReturn(\n          getExtensionField<MarkConfig['excludes']>(extension, 'excludes', context),\n        ),\n        group: callOrReturn(getExtensionField<MarkConfig['group']>(extension, 'group', context)),\n        spanning: callOrReturn(\n          getExtensionField<MarkConfig['spanning']>(extension, 'spanning', context),\n        ),\n        code: callOrReturn(getExtensionField<MarkConfig['code']>(extension, 'code', context)),\n        attrs: Object.fromEntries(\n          extensionAttributes.map(extensionAttribute => {\n            return [extensionAttribute.name, { default: extensionAttribute?.attribute?.default }]\n          }),\n        ),\n      })\n\n      const parseHTML = callOrReturn(\n        getExtensionField<MarkConfig['parseHTML']>(extension, 'parseHTML', context),\n      )\n\n      if (parseHTML) {\n        schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes))\n      }\n\n      const renderHTML = getExtensionField<MarkConfig['renderHTML']>(\n        extension,\n        'renderHTML',\n        context,\n      )\n\n      if (renderHTML) {\n        schema.toDOM = mark => renderHTML({\n          mark,\n          HTMLAttributes: getRenderedAttributes(mark, extensionAttributes),\n        })\n      }\n\n      return [extension.name, schema]\n    }),\n  )\n\n  return new Schema({\n    topNode,\n    nodes,\n    marks,\n  })\n}\n", "import { MarkType, NodeType, Schema } from '@tiptap/pm/model'\n\n/**\n * Tries to get a node or mark type by its name.\n * @param name The name of the node or mark type\n * @param schema The Prosemiror schema to search in\n * @returns The node or mark type, or null if it doesn't exist\n */\nexport function getSchemaTypeByName(name: string, schema: Schema): NodeType | MarkType | null {\n  return schema.nodes[name] || schema.marks[name] || null\n}\n", "import { AnyExtension, EnableRules } from '../types.js'\n\nexport function isExtensionRulesEnabled(extension: AnyExtension, enabled: EnableRules): boolean {\n  if (Array.isArray(enabled)) {\n    return enabled.some(enabledExtension => {\n      const name = typeof enabledExtension === 'string'\n        ? enabledExtension\n        : enabledExtension.name\n\n      return name === extension.name\n    })\n  }\n\n  return enabled\n}\n", "import { ResolvedPos } from '@tiptap/pm/model'\n\n/**\n * Returns the text content of a resolved prosemirror position\n * @param $from The resolved position to get the text content from\n * @param maxMatch The maximum number of characters to match\n * @returns The text content\n */\nexport const getTextContentFromNodes = ($from: ResolvedPos, maxMatch = 500) => {\n  let textBefore = ''\n\n  const sliceEndPos = $from.parentOffset\n\n  $from.parent.nodesBetween(\n    Math.max(0, sliceEndPos - maxMatch),\n    sliceEndPos,\n    (node, pos, parent, index) => {\n      const chunk = node.type.spec.toText?.({\n        node,\n        pos,\n        parent,\n        index,\n      })\n        || node.textContent\n        || '%leaf%'\n\n      textBefore += node.isAtom && !node.isText ? chunk : chunk.slice(0, Math.max(0, sliceEndPos - pos))\n    },\n  )\n\n  return textBefore\n}\n", "export function isRegExp(value: any): value is RegExp {\n  return Object.prototype.toString.call(value) === '[object RegExp]'\n}\n", "import { EditorState, Plugin, TextSelection } from '@tiptap/pm/state'\n\nimport { CommandManager } from './CommandManager.js'\nimport { Editor } from './Editor.js'\nimport { createChainableState } from './helpers/createChainableState.js'\nimport { getTextContentFromNodes } from './helpers/getTextContentFromNodes.js'\nimport {\n  CanCommands,\n  ChainedCommands,\n  ExtendedRegExpMatchArray,\n  Range,\n  SingleCommands,\n} from './types.js'\nimport { isRegExp } from './utilities/isRegExp.js'\n\nexport type InputRuleMatch = {\n  index: number\n  text: string\n  replaceWith?: string\n  match?: RegExpMatchArray\n  data?: Record<string, any>\n}\n\nexport type InputRuleFinder = RegExp | ((text: string) => InputRuleMatch | null)\n\nexport class InputRule {\n  find: InputRuleFinder\n\n  handler: (props: {\n    state: EditorState\n    range: Range\n    match: ExtendedRegExpMatchArray\n    commands: SingleCommands\n    chain: () => ChainedCommands\n    can: () => CanCommands\n  }) => void | null\n\n  constructor(config: {\n    find: InputRuleFinder\n    handler: (props: {\n      state: EditorState\n      range: Range\n      match: ExtendedRegExpMatchArray\n      commands: SingleCommands\n      chain: () => ChainedCommands\n      can: () => CanCommands\n    }) => void | null\n  }) {\n    this.find = config.find\n    this.handler = config.handler\n  }\n}\n\nconst inputRuleMatcherHandler = (\n  text: string,\n  find: InputRuleFinder,\n): ExtendedRegExpMatchArray | null => {\n  if (isRegExp(find)) {\n    return find.exec(text)\n  }\n\n  const inputRuleMatch = find(text)\n\n  if (!inputRuleMatch) {\n    return null\n  }\n\n  const result: ExtendedRegExpMatchArray = [inputRuleMatch.text]\n\n  result.index = inputRuleMatch.index\n  result.input = text\n  result.data = inputRuleMatch.data\n\n  if (inputRuleMatch.replaceWith) {\n    if (!inputRuleMatch.text.includes(inputRuleMatch.replaceWith)) {\n      console.warn(\n        '[tiptap warn]: \"inputRuleMatch.replaceWith\" must be part of \"inputRuleMatch.text\".',\n      )\n    }\n\n    result.push(inputRuleMatch.replaceWith)\n  }\n\n  return result\n}\n\nfunction run(config: {\n  editor: Editor\n  from: number\n  to: number\n  text: string\n  rules: InputRule[]\n  plugin: Plugin\n}): boolean {\n  const {\n    editor, from, to, text, rules, plugin,\n  } = config\n  const { view } = editor\n\n  if (view.composing) {\n    return false\n  }\n\n  const $from = view.state.doc.resolve(from)\n\n  if (\n    // check for code node\n    $from.parent.type.spec.code\n    // check for code mark\n    || !!($from.nodeBefore || $from.nodeAfter)?.marks.find(mark => mark.type.spec.code)\n  ) {\n    return false\n  }\n\n  let matched = false\n\n  const textBefore = getTextContentFromNodes($from) + text\n\n  rules.forEach(rule => {\n    if (matched) {\n      return\n    }\n\n    const match = inputRuleMatcherHandler(textBefore, rule.find)\n\n    if (!match) {\n      return\n    }\n\n    const tr = view.state.tr\n    const state = createChainableState({\n      state: view.state,\n      transaction: tr,\n    })\n    const range = {\n      from: from - (match[0].length - text.length),\n      to,\n    }\n\n    const { commands, chain, can } = new CommandManager({\n      editor,\n      state,\n    })\n\n    const handler = rule.handler({\n      state,\n      range,\n      match,\n      commands,\n      chain,\n      can,\n    })\n\n    // stop if there are no changes\n    if (handler === null || !tr.steps.length) {\n      return\n    }\n\n    // store transform as meta data\n    // so we can undo input rules within the `undoInputRules` command\n    tr.setMeta(plugin, {\n      transform: tr,\n      from,\n      to,\n      text,\n    })\n\n    view.dispatch(tr)\n    matched = true\n  })\n\n  return matched\n}\n\n/**\n * Create an input rules plugin. When enabled, it will cause text\n * input that matches any of the given rules to trigger the rule’s\n * action.\n */\nexport function inputRulesPlugin(props: { editor: Editor; rules: InputRule[] }): Plugin {\n  const { editor, rules } = props\n  const plugin = new Plugin({\n    state: {\n      init() {\n        return null\n      },\n      apply(tr, prev) {\n        const stored = tr.getMeta(plugin)\n\n        if (stored) {\n          return stored\n        }\n\n        // if InputRule is triggered by insertContent()\n        const simulatedInputMeta = tr.getMeta('applyInputRules')\n        const isSimulatedInput = !!simulatedInputMeta\n\n        if (isSimulatedInput) {\n          setTimeout(() => {\n            const { from, text } = simulatedInputMeta\n            const to = from + text.length\n\n            run({\n              editor,\n              from,\n              to,\n              text,\n              rules,\n              plugin,\n            })\n          })\n        }\n\n        return tr.selectionSet || tr.docChanged ? null : prev\n      },\n    },\n\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run({\n          editor,\n          from,\n          to,\n          text,\n          rules,\n          plugin,\n        })\n      },\n\n      handleDOMEvents: {\n        compositionend: view => {\n          setTimeout(() => {\n            const { $cursor } = view.state.selection as TextSelection\n\n            if ($cursor) {\n              run({\n                editor,\n                from: $cursor.pos,\n                to: $cursor.pos,\n                text: '',\n                rules,\n                plugin,\n              })\n            }\n          })\n\n          return false\n        },\n      },\n\n      // add support for input rules to trigger on enter\n      // this is useful for example for code blocks\n      handleKeyDown(view, event) {\n        if (event.key !== 'Enter') {\n          return false\n        }\n\n        const { $cursor } = view.state.selection as TextSelection\n\n        if ($cursor) {\n          return run({\n            editor,\n            from: $cursor.pos,\n            to: $cursor.pos,\n            text: '\\n',\n            rules,\n            plugin,\n          })\n        }\n\n        return false\n      },\n    },\n\n    // @ts-ignore\n    isInputRules: true,\n  }) as Plugin\n\n  return plugin\n}\n", "export function isNumber(value: any): value is number {\n  return typeof value === 'number'\n}\n", "import { EditorState, Plugin } from '@tiptap/pm/state'\n\nimport { CommandManager } from './CommandManager.js'\nimport { Editor } from './Editor.js'\nimport { createChainableState } from './helpers/createChainableState.js'\nimport {\n  CanCommands,\n  ChainedCommands,\n  ExtendedRegExpMatchArray,\n  Range,\n  SingleCommands,\n} from './types.js'\nimport { isNumber } from './utilities/isNumber.js'\nimport { isRegExp } from './utilities/isRegExp.js'\n\nexport type PasteRuleMatch = {\n  index: number\n  text: string\n  replaceWith?: string\n  match?: RegExpMatchArray\n  data?: Record<string, any>\n}\n\nexport type PasteRuleFinder = RegExp | ((text: string, event?: ClipboardEvent | null) => PasteRuleMatch[] | null | undefined)\n\n/**\n * Paste rules are used to react to pasted content.\n * @see https://tiptap.dev/guide/custom-extensions/#paste-rules\n */\nexport class PasteRule {\n  find: PasteRuleFinder\n\n  handler: (props: {\n    state: EditorState\n    range: Range\n    match: ExtendedRegExpMatchArray\n    commands: SingleCommands\n    chain: () => ChainedCommands\n    can: () => CanCommands\n    pasteEvent: ClipboardEvent | null\n    dropEvent: DragEvent | null\n  }) => void | null\n\n  constructor(config: {\n    find: PasteRuleFinder\n    handler: (props: {\n      can: () => CanCommands\n      chain: () => ChainedCommands\n      commands: SingleCommands\n      dropEvent: DragEvent | null\n      match: ExtendedRegExpMatchArray\n      pasteEvent: ClipboardEvent | null\n      range: Range\n      state: EditorState\n    }) => void | null\n  }) {\n    this.find = config.find\n    this.handler = config.handler\n  }\n}\n\nconst pasteRuleMatcherHandler = (\n  text: string,\n  find: PasteRuleFinder,\n  event?: ClipboardEvent | null,\n): ExtendedRegExpMatchArray[] => {\n  if (isRegExp(find)) {\n    return [...text.matchAll(find)]\n  }\n\n  const matches = find(text, event)\n\n  if (!matches) {\n    return []\n  }\n\n  return matches.map(pasteRuleMatch => {\n    const result: ExtendedRegExpMatchArray = [pasteRuleMatch.text]\n\n    result.index = pasteRuleMatch.index\n    result.input = text\n    result.data = pasteRuleMatch.data\n\n    if (pasteRuleMatch.replaceWith) {\n      if (!pasteRuleMatch.text.includes(pasteRuleMatch.replaceWith)) {\n        console.warn(\n          '[tiptap warn]: \"pasteRuleMatch.replaceWith\" must be part of \"pasteRuleMatch.text\".',\n        )\n      }\n\n      result.push(pasteRuleMatch.replaceWith)\n    }\n\n    return result\n  })\n}\n\nfunction run(config: {\n  editor: Editor\n  state: EditorState\n  from: number\n  to: number\n  rule: PasteRule\n  pasteEvent: ClipboardEvent | null\n  dropEvent: DragEvent | null\n}): boolean {\n  const {\n    editor, state, from, to, rule, pasteEvent, dropEvent,\n  } = config\n\n  const { commands, chain, can } = new CommandManager({\n    editor,\n    state,\n  })\n\n  const handlers: (void | null)[] = []\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (!node.isTextblock || node.type.spec.code) {\n      return\n    }\n\n    const resolvedFrom = Math.max(from, pos)\n    const resolvedTo = Math.min(to, pos + node.content.size)\n    const textToMatch = node.textBetween(resolvedFrom - pos, resolvedTo - pos, undefined, '\\ufffc')\n\n    const matches = pasteRuleMatcherHandler(textToMatch, rule.find, pasteEvent)\n\n    matches.forEach(match => {\n      if (match.index === undefined) {\n        return\n      }\n\n      const start = resolvedFrom + match.index + 1\n      const end = start + match[0].length\n      const range = {\n        from: state.tr.mapping.map(start),\n        to: state.tr.mapping.map(end),\n      }\n\n      const handler = rule.handler({\n        state,\n        range,\n        match,\n        commands,\n        chain,\n        can,\n        pasteEvent,\n        dropEvent,\n      })\n\n      handlers.push(handler)\n    })\n  })\n\n  const success = handlers.every(handler => handler !== null)\n\n  return success\n}\n\nconst createClipboardPasteEvent = (text: string) => {\n  const event = new ClipboardEvent('paste', {\n    clipboardData: new DataTransfer(),\n  })\n\n  event.clipboardData?.setData('text/html', text)\n\n  return event\n}\n\n/**\n * Create an paste rules plugin. When enabled, it will cause pasted\n * text that matches any of the given rules to trigger the rule’s\n * action.\n */\nexport function pasteRulesPlugin(props: { editor: Editor; rules: PasteRule[] }): Plugin[] {\n  const { editor, rules } = props\n  let dragSourceElement: Element | null = null\n  let isPastedFromProseMirror = false\n  let isDroppedFromProseMirror = false\n  let pasteEvent = typeof ClipboardEvent !== 'undefined' ? new ClipboardEvent('paste') : null\n  let dropEvent = typeof DragEvent !== 'undefined' ? new DragEvent('drop') : null\n\n  const processEvent = ({\n    state,\n    from,\n    to,\n    rule,\n    pasteEvt,\n  }: {\n    state: EditorState\n    from: number\n    to: { b: number }\n    rule: PasteRule\n    pasteEvt: ClipboardEvent | null\n  }) => {\n    const tr = state.tr\n    const chainableState = createChainableState({\n      state,\n      transaction: tr,\n    })\n\n    const handler = run({\n      editor,\n      state: chainableState,\n      from: Math.max(from - 1, 0),\n      to: to.b - 1,\n      rule,\n      pasteEvent: pasteEvt,\n      dropEvent,\n    })\n\n    if (!handler || !tr.steps.length) {\n      return\n    }\n\n    dropEvent = typeof DragEvent !== 'undefined' ? new DragEvent('drop') : null\n    pasteEvent = typeof ClipboardEvent !== 'undefined' ? new ClipboardEvent('paste') : null\n\n    return tr\n  }\n\n  const plugins = rules.map(rule => {\n    return new Plugin({\n      // we register a global drag handler to track the current drag source element\n      view(view) {\n        const handleDragstart = (event: DragEvent) => {\n          dragSourceElement = view.dom.parentElement?.contains(event.target as Element)\n            ? view.dom.parentElement\n            : null\n        }\n\n        window.addEventListener('dragstart', handleDragstart)\n\n        return {\n          destroy() {\n            window.removeEventListener('dragstart', handleDragstart)\n          },\n        }\n      },\n\n      props: {\n        handleDOMEvents: {\n          drop: (view, event: Event) => {\n            isDroppedFromProseMirror = dragSourceElement === view.dom.parentElement\n            dropEvent = event as DragEvent\n\n            return false\n          },\n\n          paste: (_view, event: Event) => {\n            const html = (event as ClipboardEvent).clipboardData?.getData('text/html')\n\n            pasteEvent = event as ClipboardEvent\n\n            isPastedFromProseMirror = !!html?.includes('data-pm-slice')\n\n            return false\n          },\n        },\n      },\n\n      appendTransaction: (transactions, oldState, state) => {\n        const transaction = transactions[0]\n        const isPaste = transaction.getMeta('uiEvent') === 'paste' && !isPastedFromProseMirror\n        const isDrop = transaction.getMeta('uiEvent') === 'drop' && !isDroppedFromProseMirror\n\n        // if PasteRule is triggered by insertContent()\n        const simulatedPasteMeta = transaction.getMeta('applyPasteRules')\n        const isSimulatedPaste = !!simulatedPasteMeta\n\n        if (!isPaste && !isDrop && !isSimulatedPaste) {\n          return\n        }\n\n        // Handle simulated paste\n        if (isSimulatedPaste) {\n          const { from, text } = simulatedPasteMeta\n          const to = from + text.length\n          const pasteEvt = createClipboardPasteEvent(text)\n\n          return processEvent({\n            rule,\n            state,\n            from,\n            to: { b: to },\n            pasteEvt,\n          })\n        }\n\n        // handle actual paste/drop\n        const from = oldState.doc.content.findDiffStart(state.doc.content)\n        const to = oldState.doc.content.findDiffEnd(state.doc.content)\n\n        // stop if there is no changed range\n        if (!isNumber(from) || !to || from === to.b) {\n          return\n        }\n\n        return processEvent({\n          rule,\n          state,\n          from,\n          to,\n          pasteEvt: pasteEvent,\n        })\n      },\n    })\n  })\n\n  return plugins\n}\n", "export function findDuplicates(items: any[]): any[] {\n  const filtered = items.filter((el, index) => items.indexOf(el) !== index)\n\n  return Array.from(new Set(filtered))\n}\n", "import { keymap } from '@tiptap/pm/keymap'\nimport { Node as ProsemirrorNode, Schema } from '@tiptap/pm/model'\nimport { Plugin } from '@tiptap/pm/state'\nimport { Decoration, EditorView } from '@tiptap/pm/view'\n\nimport type { Editor } from './Editor.js'\nimport { getAttributesFromExtensions } from './helpers/getAttributesFromExtensions.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { getNodeType } from './helpers/getNodeType.js'\nimport { getRenderedAttributes } from './helpers/getRenderedAttributes.js'\nimport { getSchemaByResolvedExtensions } from './helpers/getSchemaByResolvedExtensions.js'\nimport { getSchemaTypeByName } from './helpers/getSchemaTypeByName.js'\nimport { isExtensionRulesEnabled } from './helpers/isExtensionRulesEnabled.js'\nimport { splitExtensions } from './helpers/splitExtensions.js'\nimport { Mark, NodeConfig } from './index.js'\nimport { InputRule, inputRulesPlugin } from './InputRule.js'\nimport { PasteRule, pasteRulesPlugin } from './PasteRule.js'\nimport { AnyConfig, Extensions, RawCommands } from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { findDuplicates } from './utilities/findDuplicates.js'\n\nexport class ExtensionManager {\n  editor: Editor\n\n  schema: Schema\n\n  extensions: Extensions\n\n  splittableMarks: string[] = []\n\n  constructor(extensions: Extensions, editor: Editor) {\n    this.editor = editor\n    this.extensions = ExtensionManager.resolve(extensions)\n    this.schema = getSchemaByResolvedExtensions(this.extensions, editor)\n    this.setupExtensions()\n  }\n\n  /**\n   * Returns a flattened and sorted extension list while\n   * also checking for duplicated extensions and warns the user.\n   * @param extensions An array of Tiptap extensions\n   * @returns An flattened and sorted array of Tiptap extensions\n   */\n  static resolve(extensions: Extensions): Extensions {\n    const resolvedExtensions = ExtensionManager.sort(ExtensionManager.flatten(extensions))\n    const duplicatedNames = findDuplicates(resolvedExtensions.map(extension => extension.name))\n\n    if (duplicatedNames.length) {\n      console.warn(\n        `[tiptap warn]: Duplicate extension names found: [${duplicatedNames\n          .map(item => `'${item}'`)\n          .join(', ')}]. This can lead to issues.`,\n      )\n    }\n\n    return resolvedExtensions\n  }\n\n  /**\n   * Create a flattened array of extensions by traversing the `addExtensions` field.\n   * @param extensions An array of Tiptap extensions\n   * @returns A flattened array of Tiptap extensions\n   */\n  static flatten(extensions: Extensions): Extensions {\n    return (\n      extensions\n        .map(extension => {\n          const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n          }\n\n          const addExtensions = getExtensionField<AnyConfig['addExtensions']>(\n            extension,\n            'addExtensions',\n            context,\n          )\n\n          if (addExtensions) {\n            return [extension, ...this.flatten(addExtensions())]\n          }\n\n          return extension\n        })\n        // `Infinity` will break TypeScript so we set a number that is probably high enough\n        .flat(10)\n    )\n  }\n\n  /**\n   * Sort extensions by priority.\n   * @param extensions An array of Tiptap extensions\n   * @returns A sorted array of Tiptap extensions by priority\n   */\n  static sort(extensions: Extensions): Extensions {\n    const defaultPriority = 100\n\n    return extensions.sort((a, b) => {\n      const priorityA = getExtensionField<AnyConfig['priority']>(a, 'priority') || defaultPriority\n      const priorityB = getExtensionField<AnyConfig['priority']>(b, 'priority') || defaultPriority\n\n      if (priorityA > priorityB) {\n        return -1\n      }\n\n      if (priorityA < priorityB) {\n        return 1\n      }\n\n      return 0\n    })\n  }\n\n  /**\n   * Get all commands from the extensions.\n   * @returns An object with all commands where the key is the command name and the value is the command function\n   */\n  get commands(): RawCommands {\n    return this.extensions.reduce((commands, extension) => {\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor: this.editor,\n        type: getSchemaTypeByName(extension.name, this.schema),\n      }\n\n      const addCommands = getExtensionField<AnyConfig['addCommands']>(\n        extension,\n        'addCommands',\n        context,\n      )\n\n      if (!addCommands) {\n        return commands\n      }\n\n      return {\n        ...commands,\n        ...addCommands(),\n      }\n    }, {} as RawCommands)\n  }\n\n  /**\n   * Get all registered Prosemirror plugins from the extensions.\n   * @returns An array of Prosemirror plugins\n   */\n  get plugins(): Plugin[] {\n    const { editor } = this\n\n    // With ProseMirror, first plugins within an array are executed first.\n    // In Tiptap, we provide the ability to override plugins,\n    // so it feels more natural to run plugins at the end of an array first.\n    // That’s why we have to reverse the `extensions` array and sort again\n    // based on the `priority` option.\n    const extensions = ExtensionManager.sort([...this.extensions].reverse())\n\n    const inputRules: InputRule[] = []\n    const pasteRules: PasteRule[] = []\n\n    const allPlugins = extensions\n      .map(extension => {\n        const context = {\n          name: extension.name,\n          options: extension.options,\n          storage: extension.storage,\n          editor,\n          type: getSchemaTypeByName(extension.name, this.schema),\n        }\n\n        const plugins: Plugin[] = []\n\n        const addKeyboardShortcuts = getExtensionField<AnyConfig['addKeyboardShortcuts']>(\n          extension,\n          'addKeyboardShortcuts',\n          context,\n        )\n\n        let defaultBindings: Record<string, () => boolean> = {}\n\n        // bind exit handling\n        if (extension.type === 'mark' && getExtensionField<AnyConfig['exitable']>(extension, 'exitable', context)) {\n          defaultBindings.ArrowRight = () => Mark.handleExit({ editor, mark: extension as Mark })\n        }\n\n        if (addKeyboardShortcuts) {\n          const bindings = Object.fromEntries(\n            Object.entries(addKeyboardShortcuts()).map(([shortcut, method]) => {\n              return [shortcut, () => method({ editor })]\n            }),\n          )\n\n          defaultBindings = { ...defaultBindings, ...bindings }\n        }\n\n        const keyMapPlugin = keymap(defaultBindings)\n\n        plugins.push(keyMapPlugin)\n\n        const addInputRules = getExtensionField<AnyConfig['addInputRules']>(\n          extension,\n          'addInputRules',\n          context,\n        )\n\n        if (isExtensionRulesEnabled(extension, editor.options.enableInputRules) && addInputRules) {\n          inputRules.push(...addInputRules())\n        }\n\n        const addPasteRules = getExtensionField<AnyConfig['addPasteRules']>(\n          extension,\n          'addPasteRules',\n          context,\n        )\n\n        if (isExtensionRulesEnabled(extension, editor.options.enablePasteRules) && addPasteRules) {\n          pasteRules.push(...addPasteRules())\n        }\n\n        const addProseMirrorPlugins = getExtensionField<AnyConfig['addProseMirrorPlugins']>(\n          extension,\n          'addProseMirrorPlugins',\n          context,\n        )\n\n        if (addProseMirrorPlugins) {\n          const proseMirrorPlugins = addProseMirrorPlugins()\n\n          plugins.push(...proseMirrorPlugins)\n        }\n\n        return plugins\n      })\n      .flat()\n\n    return [\n      inputRulesPlugin({\n        editor,\n        rules: inputRules,\n      }),\n      ...pasteRulesPlugin({\n        editor,\n        rules: pasteRules,\n      }),\n      ...allPlugins,\n    ]\n  }\n\n  /**\n   * Get all attributes from the extensions.\n   * @returns An array of attributes\n   */\n  get attributes() {\n    return getAttributesFromExtensions(this.extensions)\n  }\n\n  /**\n   * Get all node views from the extensions.\n   * @returns An object with all node views where the key is the node name and the value is the node view function\n   */\n  get nodeViews() {\n    const { editor } = this\n    const { nodeExtensions } = splitExtensions(this.extensions)\n\n    return Object.fromEntries(\n      nodeExtensions\n        .filter(extension => !!getExtensionField(extension, 'addNodeView'))\n        .map(extension => {\n          const extensionAttributes = this.attributes.filter(\n            attribute => attribute.type === extension.name,\n          )\n          const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            editor,\n            type: getNodeType(extension.name, this.schema),\n          }\n          const addNodeView = getExtensionField<NodeConfig['addNodeView']>(\n            extension,\n            'addNodeView',\n            context,\n          )\n\n          if (!addNodeView) {\n            return []\n          }\n\n          const nodeview = (\n            node: ProsemirrorNode,\n            view: EditorView,\n            getPos: (() => number) | boolean,\n            decorations: Decoration[],\n          ) => {\n            const HTMLAttributes = getRenderedAttributes(node, extensionAttributes)\n\n            return addNodeView()({\n              editor,\n              node,\n              getPos,\n              decorations,\n              HTMLAttributes,\n              extension,\n            })\n          }\n\n          return [extension.name, nodeview]\n        }),\n    )\n  }\n\n  /**\n   * Go through all extensions, create extension storages & setup marks\n   * & bind editor event listener.\n   */\n  private setupExtensions() {\n    this.extensions.forEach(extension => {\n      // store extension storage in editor\n      this.editor.extensionStorage[extension.name] = extension.storage\n\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor: this.editor,\n        type: getSchemaTypeByName(extension.name, this.schema),\n      }\n\n      if (extension.type === 'mark') {\n        const keepOnSplit = callOrReturn(getExtensionField(extension, 'keepOnSplit', context)) ?? true\n\n        if (keepOnSplit) {\n          this.splittableMarks.push(extension.name)\n        }\n      }\n\n      const onBeforeCreate = getExtensionField<AnyConfig['onBeforeCreate']>(\n        extension,\n        'onBeforeCreate',\n        context,\n      )\n      const onCreate = getExtensionField<AnyConfig['onCreate']>(extension, 'onCreate', context)\n      const onUpdate = getExtensionField<AnyConfig['onUpdate']>(extension, 'onUpdate', context)\n      const onSelectionUpdate = getExtensionField<AnyConfig['onSelectionUpdate']>(\n        extension,\n        'onSelectionUpdate',\n        context,\n      )\n      const onTransaction = getExtensionField<AnyConfig['onTransaction']>(\n        extension,\n        'onTransaction',\n        context,\n      )\n      const onFocus = getExtensionField<AnyConfig['onFocus']>(extension, 'onFocus', context)\n      const onBlur = getExtensionField<AnyConfig['onBlur']>(extension, 'onBlur', context)\n      const onDestroy = getExtensionField<AnyConfig['onDestroy']>(extension, 'onDestroy', context)\n\n      if (onBeforeCreate) {\n        this.editor.on('beforeCreate', onBeforeCreate)\n      }\n\n      if (onCreate) {\n        this.editor.on('create', onCreate)\n      }\n\n      if (onUpdate) {\n        this.editor.on('update', onUpdate)\n      }\n\n      if (onSelectionUpdate) {\n        this.editor.on('selectionUpdate', onSelectionUpdate)\n      }\n\n      if (onTransaction) {\n        this.editor.on('transaction', onTransaction)\n      }\n\n      if (onFocus) {\n        this.editor.on('focus', onFocus)\n      }\n\n      if (onBlur) {\n        this.editor.on('blur', onBlur)\n      }\n\n      if (onDestroy) {\n        this.editor.on('destroy', onDestroy)\n      }\n    })\n  }\n}\n", "// see: https://github.com/mesqueeb/is-what/blob/88d6e4ca92fb2baab6003c54e02eedf4e729e5ab/src/index.ts\n\nfunction getType(value: any): string {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nexport function isPlainObject(value: any): value is Record<string, any> {\n  if (getType(value) !== 'Object') {\n    return false\n  }\n\n  return value.constructor === Object && Object.getPrototypeOf(value) === Object.prototype\n}\n", "import { isPlainObject } from './isPlainObject.js'\n\nexport function mergeDeep(target: Record<string, any>, source: Record<string, any>): Record<string, any> {\n  const output = { ...target }\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isPlainObject(source[key]) && isPlainObject(target[key])) {\n        output[key] = mergeDeep(target[key], source[key])\n      } else {\n        output[key] = source[key]\n      }\n    })\n  }\n\n  return output\n}\n", "import { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { ExtensionConfig } from './index.js'\nimport { InputRule } from './InputRule.js'\nimport { Mark } from './Mark.js'\nimport { Node } from './Node.js'\nimport { PasteRule } from './PasteRule.js'\nimport {\n  AnyConfig,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  ParentConfig,\n  RawCommands,\n} from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { mergeDeep } from './utilities/mergeDeep.js'\n\ndeclare module '@tiptap/core' {\n  interface ExtensionConfig<Options = any, Storage = any> {\n    // @ts-ignore - this is a dynamic key\n    [key: string]: any\n\n    /**\n     * The extension name - this must be unique.\n     * It will be used to identify the extension.\n     *\n     * @example 'myExtension'\n     */\n    name: string\n\n    /**\n     * The priority of your extension. The higher, the earlier it will be called\n     * and will take precedence over other extensions with a lower priority.\n     * @default 100\n     * @example 101\n     */\n    priority?: number\n\n    /**\n     * The default options for this extension.\n     * @example\n     * defaultOptions: {\n     *   myOption: 'foo',\n     *   myOtherOption: 10,\n     * }\n     */\n    defaultOptions?: Options\n\n    /**\n     * This method will add options to this extension\n     * @see https://tiptap.dev/docs/editor/guide/custom-extensions#settings\n     * @example\n     * addOptions() {\n     *  return {\n     *    myOption: 'foo',\n     *    myOtherOption: 10,\n     * }\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<ExtensionConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * The default storage this extension can save data to.\n     * @see https://tiptap.dev/docs/editor/guide/custom-extensions#storage\n     * @example\n     * defaultStorage: {\n     *   prefetchedUsers: [],\n     *   loading: false,\n     * }\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<ExtensionConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * This function adds globalAttributes to specific nodes.\n     * @see https://tiptap.dev/docs/editor/guide/custom-extensions#global-attributes\n     * @example\n     * addGlobalAttributes() {\n     *   return [\n     *     {\n             // Extend the following extensions\n     *       types: [\n     *         'heading',\n     *         'paragraph',\n     *       ],\n     *       // … with those attributes\n     *       attributes: {\n     *         textAlign: {\n     *           default: 'left',\n     *           renderHTML: attributes => ({\n     *             style: `text-align: ${attributes.textAlign}`,\n     *           }),\n     *           parseHTML: element => element.style.textAlign || 'left',\n     *         },\n     *       },\n     *     },\n     *   ]\n     * }\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      extensions: (Node | Mark)[]\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes\n\n    /**\n     * This function adds commands to the editor\n     * @see https://tiptap.dev/docs/editor/guide/custom-extensions#commands\n     * @example\n     * addCommands() {\n     *   return {\n     *     myCommand: () => ({ chain }) => chain().setMark('type', 'foo').run(),\n     *   }\n     * }\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * This function registers keyboard shortcuts.\n     * @see https://tiptap.dev/docs/editor/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addKeyboardShortcuts() {\n     *   return {\n     *     'Mod-l': () => this.editor.commands.toggleBulletList(),\n     *   }\n     * },\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * This function adds input rules to the editor.\n     * @see https://tiptap.dev/docs/editor/guide/custom-extensions#input-rules\n     * @example\n     * addInputRules() {\n     *   return [\n     *     markInputRule({\n     *       find: inputRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * This function adds paste rules to the editor.\n     * @see https://tiptap.dev/docs/editor/guide/custom-extensions#paste-rules\n     * @example\n     * addPasteRules() {\n     *   return [\n     *     markPasteRule({\n     *       find: pasteRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * This function adds Prosemirror plugins to the editor\n     * @see https://tiptap.dev/docs/editor/guide/custom-extensions#prosemirror-plugins\n     * @example\n     * addProseMirrorPlugins() {\n     *   return [\n     *     customPlugin(),\n     *   ]\n     * }\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * This function adds additional extensions to the editor. This is useful for\n     * building extension kits.\n     * @example\n     * addExtensions() {\n     *   return [\n     *     BulletList,\n     *     OrderedList,\n     *     ListItem\n     *   ]\n     * }\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * This function extends the schema of the node.\n     * @example\n     * extendNodeSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * This function extends the schema of the mark.\n     * @example\n     * extendMarkSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['extendMarkSchema']\n          },\n          extension: Mark,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            editor: Editor\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn’t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n  }\n}\n\n/**\n * The Extension class is the base class for all extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nexport class Extension<Options = any, Storage = any> {\n  type = 'extension'\n\n  name = 'extension'\n\n  parent: Extension | null = null\n\n  child: Extension | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: ExtensionConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<ExtensionConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<ExtensionConfig<O, S>> = {}) {\n    return new Extension<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend<Options, Storage>({\n      ...this.config,\n      addOptions: () => {\n        return mergeDeep(this.options as Record<string, any>, options) as Options\n      },\n    })\n\n    // Always preserve the current name\n    extension.name = this.name\n    // Set the parent to be our parent\n    extension.parent = this.parent\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<ExtensionConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Extension<ExtendedOptions, ExtendedStorage>({ ...this.config, ...extendedConfig })\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { Range, TextSerializer } from '../types.js'\n\n/**\n * Gets the text between two positions in a Prosemirror node\n * and serializes it using the given text serializers and block separator (see getText)\n * @param startNode The Prosemirror node to start from\n * @param range The range of the text to get\n * @param options Options for the text serializer & block separator\n * @returns The text between the two positions\n */\nexport function getTextBetween(\n  startNode: ProseMirrorNode,\n  range: Range,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n): string {\n  const { from, to } = range\n  const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n  let text = ''\n\n  startNode.nodesBetween(from, to, (node, pos, parent, index) => {\n    if (node.isBlock && pos > from) {\n      text += blockSeparator\n    }\n\n    const textSerializer = textSerializers?.[node.type.name]\n\n    if (textSerializer) {\n      if (parent) {\n        text += textSerializer({\n          node,\n          pos,\n          parent,\n          index,\n          range,\n        })\n      }\n      // do not descend into child nodes when there exists a serializer\n      return false\n    }\n\n    if (node.isText) {\n      text += node?.text?.slice(Math.max(from, pos) - pos, to - pos) // eslint-disable-line\n    }\n  })\n\n  return text\n}\n", "import { Schema } from '@tiptap/pm/model'\n\nimport { TextSerializer } from '../types.js'\n\n/**\n * Find text serializers `toText` in a Prosemirror schema\n * @param schema The Prosemirror schema to search in\n * @returns A record of text serializers by node name\n */\nexport function getTextSerializersFromSchema(schema: Schema): Record<string, TextSerializer> {\n  return Object.fromEntries(\n    Object.entries(schema.nodes)\n      .filter(([, node]) => node.spec.toText)\n      .map(([name, node]) => [name, node.spec.toText]),\n  )\n}\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\nimport { getTextBetween } from '../helpers/getTextBetween.js'\nimport { getTextSerializersFromSchema } from '../helpers/getTextSerializersFromSchema.js'\n\nexport type ClipboardTextSerializerOptions = {\n  blockSeparator?: string,\n}\n\nexport const ClipboardTextSerializer = Extension.create<ClipboardTextSerializerOptions>({\n  name: 'clipboardTextSerializer',\n\n  addOptions() {\n    return {\n      blockSeparator: undefined,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('clipboardTextSerializer'),\n        props: {\n          clipboardTextSerializer: () => {\n            const { editor } = this\n            const { state, schema } = editor\n            const { doc, selection } = state\n            const { ranges } = selection\n            const from = Math.min(...ranges.map(range => range.$from.pos))\n            const to = Math.max(...ranges.map(range => range.$to.pos))\n            const textSerializers = getTextSerializersFromSchema(schema)\n            const range = { from, to }\n\n            return getTextBetween(doc, range, {\n              ...(this.options.blockSeparator !== undefined\n                ? { blockSeparator: this.options.blockSeparator }\n                : {}),\n              textSerializers,\n            })\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blur: {\n      /**\n       * Removes focus from the editor.\n       * @example editor.commands.blur()\n       */\n      blur: () => ReturnType,\n    }\n  }\n}\n\nexport const blur: RawCommands['blur'] = () => ({ editor, view }) => {\n  requestAnimationFrame(() => {\n    if (!editor.isDestroyed) {\n      (view.dom as HTMLElement).blur()\n\n      // Browsers should remove the caret on blur but safari does not.\n      // See: https://github.com/ueberdosis/tiptap/issues/2405\n      window?.getSelection()?.removeAllRanges()\n    }\n  })\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    clearContent: {\n      /**\n       * Clear the whole document.\n       * @param emitUpdate Whether to emit an update event.\n       * @example editor.commands.clearContent()\n       */\n      clearContent: (emitUpdate?: boolean) => ReturnType,\n    }\n  }\n}\n\nexport const clearContent: RawCommands['clearContent'] = (emitUpdate = false) => ({ commands }) => {\n  return commands.setContent('', emitUpdate)\n}\n", "import { liftTarget } from '@tiptap/pm/transform'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    clearNodes: {\n      /**\n       * Normalize nodes to a simple paragraph.\n       * @example editor.commands.clearNodes()\n       */\n      clearNodes: () => ReturnType,\n    }\n  }\n}\n\nexport const clearNodes: RawCommands['clearNodes'] = () => ({ state, tr, dispatch }) => {\n  const { selection } = tr\n  const { ranges } = selection\n\n  if (!dispatch) {\n    return true\n  }\n\n  ranges.forEach(({ $from, $to }) => {\n    state.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n      if (node.type.isText) {\n        return\n      }\n\n      const { doc, mapping } = tr\n      const $mappedFrom = doc.resolve(mapping.map(pos))\n      const $mappedTo = doc.resolve(mapping.map(pos + node.nodeSize))\n      const nodeRange = $mappedFrom.blockRange($mappedTo)\n\n      if (!nodeRange) {\n        return\n      }\n\n      const targetLiftDepth = liftTarget(nodeRange)\n\n      if (node.type.isTextblock) {\n        const { defaultType } = $mappedFrom.parent.contentMatchAt($mappedFrom.index())\n\n        tr.setNodeMarkup(nodeRange.start, defaultType)\n      }\n\n      if (targetLiftDepth || targetLiftDepth === 0) {\n        tr.lift(nodeRange, targetLiftDepth)\n      }\n    })\n  })\n\n  return true\n}\n", "import { Command, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    command: {\n      /**\n       * Define a command inline.\n       * @param fn The command function.\n       * @example\n       * editor.commands.command(({ tr, state }) => {\n       *   ...\n       *   return true\n       * })\n       */\n      command: (fn: (props: Parameters<Command>[0]) => boolean) => ReturnType,\n    }\n  }\n}\n\nexport const command: RawCommands['command'] = fn => props => {\n  return fn(props)\n}\n", "import { createParagraphNear as originalCreateParagraphNear } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    createParagraphNear: {\n      /**\n       * Create a paragraph nearby.\n       * @example editor.commands.createParagraphNear()\n       */\n      createParagraphNear: () => ReturnType\n    }\n  }\n}\n\nexport const createParagraphNear: RawCommands['createParagraphNear'] = () => ({ state, dispatch }) => {\n  return originalCreateParagraphNear(state, dispatch)\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    cut: {\n      /**\n       * Cuts content from a range and inserts it at a given position.\n       * @param range The range to cut.\n       * @param range.from The start position of the range.\n       * @param range.to The end position of the range.\n       * @param targetPos The position to insert the content at.\n       * @example editor.commands.cut({ from: 1, to: 3 }, 5)\n       */\n      cut: ({ from, to }: { from: number, to: number }, targetPos: number) => ReturnType,\n    }\n  }\n}\n\nexport const cut: RawCommands['cut'] = (originRange, targetPos) => ({ editor, tr }) => {\n  const { state } = editor\n\n  const contentSlice = state.doc.slice(originRange.from, originRange.to)\n\n  tr.deleteRange(originRange.from, originRange.to)\n  const newPos = tr.mapping.map(targetPos)\n\n  tr.insert(newPos, contentSlice.content)\n\n  tr.setSelection(new TextSelection(tr.doc.resolve(newPos - 1)))\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteCurrentNode: {\n      /**\n       * Delete the node that currently has the selection anchor.\n       * @example editor.commands.deleteCurrentNode()\n       */\n      deleteCurrentNode: () => ReturnType,\n    }\n  }\n}\n\nexport const deleteCurrentNode: RawCommands['deleteCurrentNode'] = () => ({ tr, dispatch }) => {\n  const { selection } = tr\n  const currentNode = selection.$anchor.node()\n\n  // if there is content inside the current node, break out of this command\n  if (currentNode.content.size > 0) {\n    return false\n  }\n\n  const $pos = tr.selection.$anchor\n\n  for (let depth = $pos.depth; depth > 0; depth -= 1) {\n    const node = $pos.node(depth)\n\n    if (node.type === currentNode.type) {\n      if (dispatch) {\n        const from = $pos.before(depth)\n        const to = $pos.after(depth)\n\n        tr.delete(from, to).scrollIntoView()\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteNode: {\n      /**\n       * Delete a node with a given type or name.\n       * @param typeOrName The type or name of the node.\n       * @example editor.commands.deleteNode('paragraph')\n       */\n      deleteNode: (typeOrName: string | NodeType) => ReturnType,\n    }\n  }\n}\n\nexport const deleteNode: RawCommands['deleteNode'] = typeOrName => ({ tr, state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const $pos = tr.selection.$anchor\n\n  for (let depth = $pos.depth; depth > 0; depth -= 1) {\n    const node = $pos.node(depth)\n\n    if (node.type === type) {\n      if (dispatch) {\n        const from = $pos.before(depth)\n        const to = $pos.after(depth)\n\n        tr.delete(from, to).scrollIntoView()\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { Range, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteRange: {\n      /**\n       * Delete a given range.\n       * @param range The range to delete.\n       * @example editor.commands.deleteRange({ from: 1, to: 3 })\n       */\n      deleteRange: (range: Range) => ReturnType,\n    }\n  }\n}\n\nexport const deleteRange: RawCommands['deleteRange'] = range => ({ tr, dispatch }) => {\n  const { from, to } = range\n\n  if (dispatch) {\n    tr.delete(from, to)\n  }\n\n  return true\n}\n", "import { deleteSelection as originalDeleteSelection } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteSelection: {\n      /**\n       * Delete the selection, if there is one.\n       * @example editor.commands.deleteSelection()\n       */\n      deleteSelection: () => ReturnType\n    }\n  }\n}\n\nexport const deleteSelection: RawCommands['deleteSelection'] = () => ({ state, dispatch }) => {\n  return originalDeleteSelection(state, dispatch)\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    enter: {\n      /**\n       * Trigger enter.\n       * @example editor.commands.enter()\n       */\n      enter: () => ReturnType,\n    }\n  }\n}\n\nexport const enter: RawCommands['enter'] = () => ({ commands }) => {\n  return commands.keyboardShortcut('Enter')\n}\n", "import { exitCode as originalExitCode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    exitCode: {\n      /**\n       * Exit from a code block.\n       * @example editor.commands.exitCode()\n       */\n      exitCode: () => ReturnType\n    }\n  }\n}\n\nexport const exitCode: RawCommands['exitCode'] = () => ({ state, dispatch }) => {\n  return originalExitCode(state, dispatch)\n}\n", "import { isRegExp } from './isRegExp.js'\n\n/**\n * Check if object1 includes object2\n * @param object1 Object\n * @param object2 Object\n */\nexport function objectIncludes(\n  object1: Record<string, any>,\n  object2: Record<string, any>,\n  options: { strict: boolean } = { strict: true },\n): boolean {\n  const keys = Object.keys(object2)\n\n  if (!keys.length) {\n    return true\n  }\n\n  return keys.every(key => {\n    if (options.strict) {\n      return object2[key] === object1[key]\n    }\n\n    if (isRegExp(object2[key])) {\n      return object2[key].test(object1[key])\n    }\n\n    return object2[key] === object1[key]\n  })\n}\n", "import { Mark as ProseMirrorMark, MarkType, ResolvedPos } from '@tiptap/pm/model'\n\nimport { Range } from '../types.js'\nimport { objectIncludes } from '../utilities/objectIncludes.js'\n\nfunction findMarkInSet(\n  marks: ProseMirrorMark[],\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): ProseMirrorMark | undefined {\n  return marks.find(item => {\n    return item.type === type && objectIncludes(item.attrs, attributes)\n  })\n}\n\nfunction isMarkInSet(\n  marks: ProseMirrorMark[],\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): boolean {\n  return !!findMarkInSet(marks, type, attributes)\n}\n\nexport function getMarkRange(\n  $pos: ResolvedPos,\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): Range | void {\n  if (!$pos || !type) {\n    return\n  }\n\n  let start = $pos.parent.childAfter($pos.parentOffset)\n\n  if ($pos.parentOffset === start.offset && start.offset !== 0) {\n    start = $pos.parent.childBefore($pos.parentOffset)\n  }\n\n  if (!start.node) {\n    return\n  }\n\n  const mark = findMarkInSet([...start.node.marks], type, attributes)\n\n  if (!mark) {\n    return\n  }\n\n  let startIndex = start.index\n  let startPos = $pos.start() + start.offset\n  let endIndex = startIndex + 1\n  let endPos = startPos + start.node.nodeSize\n\n  findMarkInSet([...start.node.marks], type, attributes)\n\n  while (startIndex > 0 && mark.isInSet($pos.parent.child(startIndex - 1).marks)) {\n    startIndex -= 1\n    startPos -= $pos.parent.child(startIndex).nodeSize\n  }\n\n  while (\n    endIndex < $pos.parent.childCount\n    && isMarkInSet([...$pos.parent.child(endIndex).marks], type, attributes)\n  ) {\n    endPos += $pos.parent.child(endIndex).nodeSize\n    endIndex += 1\n  }\n\n  return {\n    from: startPos,\n    to: endPos,\n  }\n}\n", "import { MarkType, Schema } from '@tiptap/pm/model'\n\nexport function getMarkType(nameOrType: string | MarkType, schema: Schema): MarkType {\n  if (typeof nameOrType === 'string') {\n    if (!schema.marks[nameOrType]) {\n      throw Error(\n        `There is no mark type named '${nameOrType}'. Maybe you forgot to add the extension?`,\n      )\n    }\n\n    return schema.marks[nameOrType]\n  }\n\n  return nameOrType\n}\n", "import { MarkType } from '@tiptap/pm/model'\nimport { TextSelection } from '@tiptap/pm/state'\n\nimport { getMarkRange } from '../helpers/getMarkRange.js'\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    extendMarkRange: {\n      /**\n       * Extends the text selection to the current mark by type or name.\n       * @param typeOrName The type or name of the mark.\n       * @param attributes The attributes of the mark.\n       * @example editor.commands.extendMarkRange('bold')\n       * @example editor.commands.extendMarkRange('mention', { userId: \"1\" })\n       */\n      extendMarkRange: (\n        /**\n         * The type or name of the mark.\n         */\n        typeOrName: string | MarkType,\n\n        /**\n         * The attributes of the mark.\n         */\n        attributes?: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const extendMarkRange: RawCommands['extendMarkRange'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  const type = getMarkType(typeOrName, state.schema)\n  const { doc, selection } = tr\n  const { $from, from, to } = selection\n\n  if (dispatch) {\n    const range = getMarkRange($from, type, attributes)\n\n    if (range && range.from <= from && range.to >= to) {\n      const newSelection = TextSelection.create(doc, range.from, range.to)\n\n      tr.setSelection(newSelection)\n    }\n  }\n\n  return true\n}\n", "import { Command, CommandProps, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    first: {\n      /**\n       * Runs one command after the other and stops at the first which returns true.\n       * @param commands The commands to run.\n       * @example editor.commands.first([command1, command2])\n       */\n      first: (commands: Command[] | ((props: CommandProps) => Command[])) => ReturnType,\n    }\n  }\n}\n\nexport const first: RawCommands['first'] = commands => props => {\n  const items = typeof commands === 'function'\n    ? commands(props)\n    : commands\n\n  for (let i = 0; i < items.length; i += 1) {\n    if (items[i](props)) {\n      return true\n    }\n  }\n\n  return false\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nexport function isTextSelection(value: unknown): value is TextSelection {\n  return value instanceof TextSelection\n}\n", "export function minMax(value = 0, min = 0, max = 0): number {\n  return Math.min(Math.max(value, min), max)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Selection, TextSelection } from '@tiptap/pm/state'\n\nimport { FocusPosition } from '../types.js'\nimport { minMax } from '../utilities/minMax.js'\n\nexport function resolveFocusPosition(\n  doc: ProseMirrorNode,\n  position: FocusPosition = null,\n): Selection | null {\n  if (!position) {\n    return null\n  }\n\n  const selectionAtStart = Selection.atStart(doc)\n  const selectionAtEnd = Selection.atEnd(doc)\n\n  if (position === 'start' || position === true) {\n    return selectionAtStart\n  }\n\n  if (position === 'end') {\n    return selectionAtEnd\n  }\n\n  const minPos = selectionAtStart.from\n  const maxPos = selectionAtEnd.to\n\n  if (position === 'all') {\n    return TextSelection.create(\n      doc,\n      minMax(0, minPos, maxPos),\n      minMax(doc.content.size, minPos, maxPos),\n    )\n  }\n\n  return TextSelection.create(\n    doc,\n    minMax(position, minPos, maxPos),\n    minMax(position, minPos, maxPos),\n  )\n}\n", "export function isiOS(): boolean {\n  return [\n    'iPad Simulator',\n    'iPhone Simulator',\n    'iPod Simulator',\n    'iPad',\n    'iPhone',\n    'iPod',\n  ].includes(navigator.platform)\n  // iPad on iOS 13 detection\n  || (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n}\n", "import { isTextSelection } from '../helpers/isTextSelection.js'\nimport { resolveFocusPosition } from '../helpers/resolveFocusPosition.js'\nimport { FocusPosition, RawCommands } from '../types.js'\nimport { isiOS } from '../utilities/isiOS.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    focus: {\n      /**\n       * Focus the editor at the given position.\n       * @param position The position to focus at.\n       * @param options.scrollIntoView Scroll the focused position into view after focusing\n       * @example editor.commands.focus()\n       * @example editor.commands.focus(32, { scrollIntoView: false })\n       */\n      focus: (\n        /**\n         * The position to focus at.\n         */\n        position?: FocusPosition,\n\n        /**\n         * Optional options\n         * @default { scrollIntoView: true }\n         */\n        options?: {\n          scrollIntoView?: boolean,\n        },\n      ) => ReturnType,\n    }\n  }\n}\n\nexport const focus: RawCommands['focus'] = (position = null, options = {}) => ({\n  editor,\n  view,\n  tr,\n  dispatch,\n}) => {\n  options = {\n    scrollIntoView: true,\n    ...options,\n  }\n\n  const delayedFocus = () => {\n    // focus within `requestAnimationFrame` breaks focus on iOS\n    // so we have to call this\n    if (isiOS()) {\n      (view.dom as HTMLElement).focus()\n    }\n\n    // For React we have to focus asynchronously. Otherwise wild things happen.\n    // see: https://github.com/ueberdosis/tiptap/issues/1520\n    requestAnimationFrame(() => {\n      if (!editor.isDestroyed) {\n        view.focus()\n\n        if (options?.scrollIntoView) {\n          editor.commands.scrollIntoView()\n        }\n      }\n    })\n  }\n\n  if ((view.hasFocus() && position === null) || position === false) {\n    return true\n  }\n\n  // we don’t try to resolve a NodeSelection or CellSelection\n  if (dispatch && position === null && !isTextSelection(editor.state.selection)) {\n    delayedFocus()\n    return true\n  }\n\n  // pass through tr.doc instead of editor.state.doc\n  // since transactions could change the editors state before this command has been run\n  const selection = resolveFocusPosition(tr.doc, position) || editor.state.selection\n  const isSameSelection = editor.state.selection.eq(selection)\n\n  if (dispatch) {\n    if (!isSameSelection) {\n      tr.setSelection(selection)\n    }\n\n    // `tr.setSelection` resets the stored marks\n    // so we’ll restore them if the selection is the same as before\n    if (isSameSelection && tr.storedMarks) {\n      tr.setStoredMarks(tr.storedMarks)\n    }\n\n    delayedFocus()\n  }\n\n  return true\n}\n", "import { CommandProps, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    forEach: {\n      /**\n       * Loop through an array of items.\n       */\n      forEach: <T>(\n        items: T[],\n        fn: (\n          item: T,\n          props: CommandProps & {\n            index: number,\n          },\n        ) => boolean,\n      ) => ReturnType,\n    }\n  }\n}\n\nexport const forEach: RawCommands['forEach'] = (items, fn) => props => {\n  return items.every((item, index) => fn(item, { ...props, index }))\n}\n", "import { ParseOptions } from '@tiptap/pm/model'\n\nimport { Content, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    insertContent: {\n      /**\n       * Insert a node or string of HTML at the current position.\n       * @example editor.commands.insertContent('<h1>Example</h1>')\n       * @example editor.commands.insertContent('<h1>Example</h1>', { updateSelection: false })\n       */\n      insertContent: (\n        /**\n         * The ProseMirror content to insert.\n         */\n        value: Content,\n\n        /**\n         * Optional options\n         */\n        options?: {\n          /**\n           * Options for parsing the content.\n           */\n          parseOptions?: ParseOptions\n\n          /**\n           * Whether to update the selection after inserting the content.\n           */\n          updateSelection?: boolean\n          applyInputRules?: boolean\n          applyPasteRules?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const insertContent: RawCommands['insertContent'] = (value, options) => ({ tr, commands }) => {\n  return commands.insertContentAt(\n    { from: tr.selection.from, to: tr.selection.to },\n    value,\n    options,\n  )\n}\n", "const removeWhitespaces = (node: HTMLElement) => {\n  const children = node.childNodes\n\n  for (let i = children.length - 1; i >= 0; i -= 1) {\n    const child = children[i]\n\n    if (child.nodeType === 3 && child.nodeValue && /^(\\n\\s\\s|\\n)$/.test(child.nodeValue)) {\n      node.removeChild(child)\n    } else if (child.nodeType === 1) {\n      removeWhitespaces(child as HTMLElement)\n    }\n  }\n\n  return node\n}\n\nexport function elementFromString(value: string): HTMLElement {\n  // add a wrapper to preserve leading and trailing whitespace\n  const wrappedValue = `<body>${value}</body>`\n\n  const html = new window.DOMParser().parseFromString(wrappedValue, 'text/html').body\n\n  return removeWhitespaces(html)\n}\n", "import {\n  DOMParser,\n  Fragment,\n  Node as ProseMirrorNode,\n  ParseOptions,\n  Schema,\n} from '@tiptap/pm/model'\n\nimport { Content } from '../types.js'\nimport { elementFromString } from '../utilities/elementFromString.js'\n\nexport type CreateNodeFromContentOptions = {\n  slice?: boolean\n  parseOptions?: ParseOptions\n  errorOnInvalidContent?: boolean\n}\n\n/**\n * Takes a JSON or HTML content and creates a Prosemirror node or fragment from it.\n * @param content The JSON or HTML content to create the node from\n * @param schema The Prosemirror schema to use for the node\n * @param options Options for the parser\n * @returns The created Prosemirror node or fragment\n */\nexport function createNodeFromContent(\n  content: Content,\n  schema: Schema,\n  options?: CreateNodeFromContentOptions,\n): ProseMirrorNode | Fragment {\n  options = {\n    slice: true,\n    parseOptions: {},\n    ...options,\n  }\n\n  const isJSONContent = typeof content === 'object' && content !== null\n  const isTextContent = typeof content === 'string'\n\n  if (isJSONContent) {\n    try {\n      const isArrayContent = Array.isArray(content) && content.length > 0\n\n      // if the JSON Content is an array of nodes, create a fragment for each node\n      if (isArrayContent) {\n        return Fragment.fromArray(content.map(item => schema.nodeFromJSON(item)))\n      }\n\n      const node = schema.nodeFromJSON(content)\n\n      if (options.errorOnInvalidContent) {\n        node.check()\n      }\n\n      return node\n    } catch (error) {\n      if (options.errorOnInvalidContent) {\n        throw new Error('[tiptap error]: Invalid JSON content', { cause: error as Error })\n      }\n\n      console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error)\n\n      return createNodeFromContent('', schema, options)\n    }\n  }\n\n  if (isTextContent) {\n\n    // Check for invalid content\n    if (options.errorOnInvalidContent) {\n      let hasInvalidContent = false\n      let invalidContent = ''\n\n      // A copy of the current schema with a catch-all node at the end\n      const contentCheckSchema = new Schema({\n        topNode: schema.spec.topNode,\n        marks: schema.spec.marks,\n        // Prosemirror's schemas are executed such that: the last to execute, matches last\n        // This means that we can add a catch-all node at the end of the schema to catch any content that we don't know how to handle\n        nodes: schema.spec.nodes.append({\n          __tiptap__private__unknown__catch__all__node: {\n            content: 'inline*',\n            group: 'block',\n            parseDOM: [\n              {\n                tag: '*',\n                getAttrs: e => {\n                  // If this is ever called, we know that the content has something that we don't know how to handle in the schema\n                  hasInvalidContent = true\n                  // Try to stringify the element for a more helpful error message\n                  invalidContent = typeof e === 'string' ? e : e.outerHTML\n                  return null\n                },\n              },\n            ],\n          },\n        }),\n      })\n\n      if (options.slice) {\n        DOMParser.fromSchema(contentCheckSchema).parseSlice(elementFromString(content), options.parseOptions)\n      } else {\n        DOMParser.fromSchema(contentCheckSchema).parse(elementFromString(content), options.parseOptions)\n      }\n\n      if (options.errorOnInvalidContent && hasInvalidContent) {\n        throw new Error('[tiptap error]: Invalid HTML content', { cause: new Error(`Invalid element found: ${invalidContent}`) })\n      }\n    }\n\n    const parser = DOMParser.fromSchema(schema)\n\n    if (options.slice) {\n      return parser.parseSlice(elementFromString(content), options.parseOptions).content\n    }\n\n    return parser.parse(elementFromString(content), options.parseOptions)\n\n  }\n\n  return createNodeFromContent('', schema, options)\n}\n", "import { Selection, Transaction } from '@tiptap/pm/state'\nimport { ReplaceAroundStep, ReplaceStep } from '@tiptap/pm/transform'\n\n// source: https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.js#L466\nexport function selectionToInsertionEnd(tr: Transaction, startLen: number, bias: number) {\n  const last = tr.steps.length - 1\n\n  if (last < startLen) {\n    return\n  }\n\n  const step = tr.steps[last]\n\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) {\n    return\n  }\n\n  const map = tr.mapping.maps[last]\n  let end = 0\n\n  map.forEach((_from, _to, _newFrom, newTo) => {\n    if (end === 0) {\n      end = newTo\n    }\n  })\n\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias))\n}\n", "import { Fragment, Node as ProseMirrorNode, ParseOptions } from '@tiptap/pm/model'\n\nimport { createNodeFromContent } from '../helpers/createNodeFromContent.js'\nimport { selectionToInsertionEnd } from '../helpers/selectionToInsertionEnd.js'\nimport { Content, Range, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    insertContentAt: {\n      /**\n       * Insert a node or string of HTML at a specific position.\n       * @example editor.commands.insertContentAt(0, '<h1>Example</h1>')\n       */\n      insertContentAt: (\n        /**\n         * The position to insert the content at.\n         */\n        position: number | Range,\n\n        /**\n         * The ProseMirror content to insert.\n         */\n        value: Content,\n\n        /**\n         * Optional options\n         */\n        options?: {\n          /**\n           * Options for parsing the content.\n           */\n          parseOptions?: ParseOptions\n\n          /**\n           * Whether to update the selection after inserting the content.\n           */\n          updateSelection?: boolean\n\n          /**\n           * Whether to apply input rules after inserting the content.\n           */\n          applyInputRules?: boolean\n\n          /**\n           * Whether to apply paste rules after inserting the content.\n           */\n          applyPasteRules?: boolean\n\n          /**\n           * Whether to throw an error if the content is invalid.\n           */\n          errorOnInvalidContent?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nconst isFragment = (nodeOrFragment: ProseMirrorNode | Fragment): nodeOrFragment is Fragment => {\n  return !('type' in nodeOrFragment)\n}\n\nexport const insertContentAt: RawCommands['insertContentAt'] = (position, value, options) => ({ tr, dispatch, editor }) => {\n  if (dispatch) {\n    options = {\n      parseOptions: {},\n      updateSelection: true,\n      applyInputRules: false,\n      applyPasteRules: false,\n      ...options,\n    }\n\n    let content: Fragment | ProseMirrorNode\n\n    try {\n      content = createNodeFromContent(value, editor.schema, {\n        parseOptions: {\n          preserveWhitespace: 'full',\n          ...options.parseOptions,\n        },\n        errorOnInvalidContent: options.errorOnInvalidContent ?? editor.options.enableContentCheck,\n      })\n    } catch (e) {\n      editor.emit('contentError', {\n        editor,\n        error: e as Error,\n        disableCollaboration: () => {\n          console.error('[tiptap error]: Unable to disable collaboration at this point in time')\n        },\n      })\n      return false\n    }\n\n    let { from, to } = typeof position === 'number' ? { from: position, to: position } : { from: position.from, to: position.to }\n\n    let isOnlyTextContent = true\n    let isOnlyBlockContent = true\n    const nodes = isFragment(content) ? content : [content]\n\n    nodes.forEach(node => {\n      // check if added node is valid\n      node.check()\n\n      isOnlyTextContent = isOnlyTextContent ? node.isText && node.marks.length === 0 : false\n\n      isOnlyBlockContent = isOnlyBlockContent ? node.isBlock : false\n    })\n\n    // check if we can replace the wrapping node by\n    // the newly inserted content\n    // example:\n    // replace an empty paragraph by an inserted image\n    // instead of inserting the image below the paragraph\n    if (from === to && isOnlyBlockContent) {\n      const { parent } = tr.doc.resolve(from)\n      const isEmptyTextBlock = parent.isTextblock && !parent.type.spec.code && !parent.childCount\n\n      if (isEmptyTextBlock) {\n        from -= 1\n        to += 1\n      }\n    }\n\n    let newContent\n\n    // if there is only plain text we have to use `insertText`\n    // because this will keep the current marks\n    if (isOnlyTextContent) {\n      // if value is string, we can use it directly\n      // otherwise if it is an array, we have to join it\n      if (Array.isArray(value)) {\n        newContent = value.map(v => v.text || '').join('')\n      } else if (typeof value === 'object' && !!value && !!value.text) {\n        newContent = value.text\n      } else {\n        newContent = value as string\n      }\n\n      tr.insertText(newContent, from, to)\n    } else {\n      newContent = content\n\n      tr.replaceWith(from, to, newContent)\n    }\n\n    // set cursor at end of inserted content\n    if (options.updateSelection) {\n      selectionToInsertionEnd(tr, tr.steps.length - 1, -1)\n    }\n\n    if (options.applyInputRules) {\n      tr.setMeta('applyInputRules', { from, text: newContent })\n    }\n\n    if (options.applyPasteRules) {\n      tr.setMeta('applyPasteRules', { from, text: newContent })\n    }\n  }\n\n  return true\n}\n", "import {\n  joinBackward as originalJoinBackward,\n  joinDown as originalJoinDown,\n  joinForward as originalJoinForward,\n  joinUp as originalJoinUp,\n} from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinUp: {\n      /**\n       * Join the selected block or, if there is a text selection, the closest ancestor block of the selection that can be joined, with the sibling above it.\n       * @example editor.commands.joinUp()\n       */\n      joinUp: () => ReturnType\n    }\n    joinDown: {\n      /**\n       * Join the selected block, or the closest ancestor of the selection that can be joined, with the sibling after it.\n       * @example editor.commands.joinDown()\n       */\n      joinDown: () => ReturnType\n    }\n    joinBackward: {\n      /**\n       * If the selection is empty and at the start of a textblock, try to reduce the distance between that block and the one before it—if there's a block directly before it that can be joined, join them.\n       * If not, try to move the selected block closer to the next one in the document structure by lifting it out of its\n       * parent or moving it into a parent of the previous block. Will use the view for accurate (bidi-aware) start-of-textblock detection if given.\n       * @example editor.commands.joinBackward()\n       */\n      joinBackward: () => ReturnType\n    }\n    joinForward: {\n      /**\n       * If the selection is empty and the cursor is at the end of a textblock, try to reduce or remove the boundary between that block and the one after it,\n       * either by joining them or by moving the other block closer to this one in the tree structure.\n       * Will use the view for accurate start-of-textblock detection if given.\n       * @example editor.commands.joinForward()\n       */\n      joinForward: () => ReturnType\n    }\n  }\n}\n\nexport const joinUp: RawCommands['joinUp'] = () => ({ state, dispatch }) => {\n  return originalJoinUp(state, dispatch)\n}\n\nexport const joinDown: RawCommands['joinDown'] = () => ({ state, dispatch }) => {\n  return originalJoinDown(state, dispatch)\n}\n\nexport const joinBackward: RawCommands['joinBackward'] = () => ({ state, dispatch }) => {\n  return originalJoinBackward(state, dispatch)\n}\n\nexport const joinForward: RawCommands['joinForward'] = () => ({ state, dispatch }) => {\n  return originalJoinForward(state, dispatch)\n}\n", "import { joinPoint } from '@tiptap/pm/transform'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinItemBackward: {\n      /**\n       * Join two items backward.\n       * @example editor.commands.joinItemBackward()\n       */\n      joinItemBackward: () => ReturnType\n    }\n  }\n}\n\nexport const joinItemBackward: RawCommands['joinItemBackward'] = () => ({\n  state,\n  dispatch,\n  tr,\n}) => {\n  try {\n    const point = joinPoint(state.doc, state.selection.$from.pos, -1)\n\n    if (point === null || point === undefined) {\n      return false\n    }\n\n    tr.join(point, 2)\n\n    if (dispatch) {\n      dispatch(tr)\n    }\n\n    return true\n  } catch (e) {\n    return false\n  }\n}\n", "import { joinPoint } from '@tiptap/pm/transform'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinItemForward: {\n      /**\n       * Join two items Forwards.\n       * @example editor.commands.joinItemForward()\n       */\n      joinItemForward: () => ReturnType\n    }\n  }\n}\n\nexport const joinItemForward: RawCommands['joinItemForward'] = () => ({\n  state,\n  dispatch,\n  tr,\n}) => {\n  try {\n    const point = joinPoint(state.doc, state.selection.$from.pos, +1)\n\n    if (point === null || point === undefined) {\n      return false\n    }\n\n    tr.join(point, 2)\n\n    if (dispatch) {\n      dispatch(tr)\n    }\n\n    return true\n  } catch (e) {\n    return false\n  }\n}\n", "import { joinTextblockBackward as originalCommand } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinTextblockBackward: {\n      /**\n       * A more limited form of joinBackward that only tries to join the current textblock to the one before it, if the cursor is at the start of a textblock.\n       */\n      joinTextblockBackward: () => ReturnType\n    }\n  }\n}\n\nexport const joinTextblockBackward: RawCommands['joinTextblockBackward'] = () => ({ state, dispatch }) => {\n  return originalCommand(state, dispatch)\n}\n", "import { joinTextblockForward as originalCommand } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinTextblockForward: {\n      /**\n       * A more limited form of joinForward that only tries to join the current textblock to the one after it, if the cursor is at the end of a textblock.\n       */\n      joinTextblockForward: () => ReturnType\n    }\n  }\n}\n\nexport const joinTextblockForward: RawCommands['joinTextblockForward'] = () => ({ state, dispatch }) => {\n  return originalCommand(state, dispatch)\n}\n", "export function isMacOS(): boolean {\n  return typeof navigator !== 'undefined'\n    ? /Mac/.test(navigator.platform)\n    : false\n}\n", "import { RawCommands } from '../types.js'\nimport { isiOS } from '../utilities/isiOS.js'\nimport { isMacOS } from '../utilities/isMacOS.js'\n\nfunction normalizeKeyName(name: string) {\n  const parts = name.split(/-(?!$)/)\n  let result = parts[parts.length - 1]\n\n  if (result === 'Space') {\n    result = ' '\n  }\n\n  let alt\n  let ctrl\n  let shift\n  let meta\n\n  for (let i = 0; i < parts.length - 1; i += 1) {\n    const mod = parts[i]\n\n    if (/^(cmd|meta|m)$/i.test(mod)) {\n      meta = true\n    } else if (/^a(lt)?$/i.test(mod)) {\n      alt = true\n    } else if (/^(c|ctrl|control)$/i.test(mod)) {\n      ctrl = true\n    } else if (/^s(hift)?$/i.test(mod)) {\n      shift = true\n    } else if (/^mod$/i.test(mod)) {\n      if (isiOS() || isMacOS()) {\n        meta = true\n      } else {\n        ctrl = true\n      }\n    } else {\n      throw new Error(`Unrecognized modifier name: ${mod}`)\n    }\n  }\n\n  if (alt) {\n    result = `Alt-${result}`\n  }\n\n  if (ctrl) {\n    result = `Ctrl-${result}`\n  }\n\n  if (meta) {\n    result = `Meta-${result}`\n  }\n\n  if (shift) {\n    result = `Shift-${result}`\n  }\n\n  return result\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    keyboardShortcut: {\n      /**\n       * Trigger a keyboard shortcut.\n       * @param name The name of the keyboard shortcut.\n       * @example editor.commands.keyboardShortcut('Mod-b')\n       */\n      keyboardShortcut: (name: string) => ReturnType,\n    }\n  }\n}\n\nexport const keyboardShortcut: RawCommands['keyboardShortcut'] = name => ({\n  editor,\n  view,\n  tr,\n  dispatch,\n}) => {\n  const keys = normalizeKeyName(name).split(/-(?!$)/)\n  const key = keys.find(item => !['Alt', 'Ctrl', 'Meta', 'Shift'].includes(item))\n  const event = new KeyboardEvent('keydown', {\n    key: key === 'Space'\n      ? ' '\n      : key,\n    altKey: keys.includes('Alt'),\n    ctrlKey: keys.includes('Ctrl'),\n    metaKey: keys.includes('Meta'),\n    shiftKey: keys.includes('Shift'),\n    bubbles: true,\n    cancelable: true,\n  })\n\n  const capturedTransaction = editor.captureTransaction(() => {\n    view.someProp('handleKeyDown', f => f(view, event))\n  })\n\n  capturedTransaction?.steps.forEach(step => {\n    const newStep = step.map(tr.mapping)\n\n    if (newStep && dispatch) {\n      tr.maybeStep(newStep)\n    }\n  })\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { NodeRange } from '../types.js'\nimport { objectIncludes } from '../utilities/objectIncludes.js'\nimport { getNodeType } from './getNodeType.js'\n\nexport function isNodeActive(\n  state: EditorState,\n  typeOrName: NodeType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { from, to, empty } = state.selection\n  const type = typeOrName ? getNodeType(typeOrName, state.schema) : null\n\n  const nodeRanges: NodeRange[] = []\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isText) {\n      return\n    }\n\n    const relativeFrom = Math.max(from, pos)\n    const relativeTo = Math.min(to, pos + node.nodeSize)\n\n    nodeRanges.push({\n      node,\n      from: relativeFrom,\n      to: relativeTo,\n    })\n  })\n\n  const selectionRange = to - from\n  const matchedNodeRanges = nodeRanges\n    .filter(nodeRange => {\n      if (!type) {\n        return true\n      }\n\n      return type.name === nodeRange.node.type.name\n    })\n    .filter(nodeRange => objectIncludes(nodeRange.node.attrs, attributes, { strict: false }))\n\n  if (empty) {\n    return !!matchedNodeRanges.length\n  }\n\n  const range = matchedNodeRanges.reduce((sum, nodeRange) => sum + nodeRange.to - nodeRange.from, 0)\n\n  return range >= selectionRange\n}\n", "import { lift as originalLift } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isNodeActive } from '../helpers/isNodeActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    lift: {\n      /**\n       * Removes an existing wrap if possible lifting the node out of it\n       * @param typeOrName The type or name of the node.\n       * @param attributes The attributes of the node.\n       * @example editor.commands.lift('paragraph')\n       * @example editor.commands.lift('heading', { level: 1 })\n       */\n      lift: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const lift: RawCommands['lift'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (!isActive) {\n    return false\n  }\n\n  return originalLift(state, dispatch)\n}\n", "import { liftEmptyBlock as originalLiftEmptyBlock } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    liftEmptyBlock: {\n      /**\n       * If the cursor is in an empty textblock that can be lifted, lift the block.\n       * @example editor.commands.liftEmptyBlock()\n       */\n      liftEmptyBlock: () => ReturnType,\n    }\n  }\n}\n\nexport const liftEmptyBlock: RawCommands['liftEmptyBlock'] = () => ({ state, dispatch }) => {\n  return originalLiftEmptyBlock(state, dispatch)\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { liftListItem as originalLiftListItem } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    liftListItem: {\n      /**\n       * Create a command to lift the list item around the selection up into a wrapping list.\n       * @param typeOrName The type or name of the node.\n       * @example editor.commands.liftListItem('listItem')\n       */\n      liftListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const liftListItem: RawCommands['liftListItem'] = typeOrName => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalLiftListItem(type)(state, dispatch)\n}\n", "import { newlineInCode as originalNewlineInCode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    newlineInCode: {\n      /**\n       * Add a newline character in code.\n       * @example editor.commands.newlineInCode()\n       */\n      newlineInCode: () => ReturnType\n    }\n  }\n}\n\nexport const newlineInCode: RawCommands['newlineInCode'] = () => ({ state, dispatch }) => {\n  return originalNewlineInCode(state, dispatch)\n}\n", "import { Schema } from '@tiptap/pm/model'\n\n/**\n * Get the type of a schema item by its name.\n * @param name The name of the schema item\n * @param schema The Prosemiror schema to search in\n * @returns The type of the schema item (`node` or `mark`), or null if it doesn't exist\n */\nexport function getSchemaTypeNameByName(name: string, schema: Schema): 'node' | 'mark' | null {\n  if (schema.nodes[name]) {\n    return 'node'\n  }\n\n  if (schema.marks[name]) {\n    return 'mark'\n  }\n\n  return null\n}\n", "/**\n * Remove a property or an array of properties from an object\n * @param obj Object\n * @param key Key to remove\n */\nexport function deleteProps(obj: Record<string, any>, propOrProps: string | string[]): Record<string, any> {\n  const props = typeof propOrProps === 'string'\n    ? [propOrProps]\n    : propOrProps\n\n  return Object\n    .keys(obj)\n    .reduce((newObj: Record<string, any>, prop) => {\n      if (!props.includes(prop)) {\n        newObj[prop] = obj[prop]\n      }\n\n      return newObj\n    }, {})\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { getSchemaTypeNameByName } from '../helpers/getSchemaTypeNameByName.js'\nimport { RawCommands } from '../types.js'\nimport { deleteProps } from '../utilities/deleteProps.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    resetAttributes: {\n      /**\n       * Resets some node attributes to the default value.\n       * @param typeOrName The type or name of the node.\n       * @param attributes The attributes of the node to reset.\n       * @example editor.commands.resetAttributes('heading', 'level')\n       */\n      resetAttributes: (\n        typeOrName: string | NodeType | MarkType,\n        attributes: string | string[],\n      ) => ReturnType\n    }\n  }\n}\n\nexport const resetAttributes: RawCommands['resetAttributes'] = (typeOrName, attributes) => ({ tr, state, dispatch }) => {\n  let nodeType: NodeType | null = null\n  let markType: MarkType | null = null\n\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (!schemaType) {\n    return false\n  }\n\n  if (schemaType === 'node') {\n    nodeType = getNodeType(typeOrName as NodeType, state.schema)\n  }\n\n  if (schemaType === 'mark') {\n    markType = getMarkType(typeOrName as MarkType, state.schema)\n  }\n\n  if (dispatch) {\n    tr.selection.ranges.forEach(range => {\n      state.doc.nodesBetween(range.$from.pos, range.$to.pos, (node, pos) => {\n        if (nodeType && nodeType === node.type) {\n          tr.setNodeMarkup(pos, undefined, deleteProps(node.attrs, attributes))\n        }\n\n        if (markType && node.marks.length) {\n          node.marks.forEach(mark => {\n            if (markType === mark.type) {\n              tr.addMark(\n                pos,\n                pos + node.nodeSize,\n                markType.create(deleteProps(mark.attrs, attributes)),\n              )\n            }\n          })\n        }\n      })\n    })\n  }\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    scrollIntoView: {\n      /**\n       * Scroll the selection into view.\n       * @example editor.commands.scrollIntoView()\n       */\n      scrollIntoView: () => ReturnType,\n    }\n  }\n}\n\nexport const scrollIntoView: RawCommands['scrollIntoView'] = () => ({ tr, dispatch }) => {\n  if (dispatch) {\n    tr.scrollIntoView()\n  }\n\n  return true\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectAll: {\n      /**\n       * Select the whole document.\n       * @example editor.commands.selectAll()\n       */\n      selectAll: () => ReturnType,\n    }\n  }\n}\n\nexport const selectAll: RawCommands['selectAll'] = () => ({ tr, commands }) => {\n  return commands.setTextSelection({\n    from: 0,\n    to: tr.doc.content.size,\n  })\n}\n", "import { selectNodeBackward as originalSelectNodeBackward } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectNodeBackward: {\n      /**\n       * Select a node backward.\n       * @example editor.commands.selectNodeBackward()\n       */\n      selectNodeBackward: () => ReturnType\n    }\n  }\n}\n\nexport const selectNodeBackward: RawCommands['selectNodeBackward'] = () => ({ state, dispatch }) => {\n  return originalSelectNodeBackward(state, dispatch)\n}\n", "import { selectNodeForward as originalSelectNodeForward } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectNodeForward: {\n      /**\n       * Select a node forward.\n       * @example editor.commands.selectNodeForward()\n       */\n      selectNodeForward: () => ReturnType\n    }\n  }\n}\n\nexport const selectNodeForward: RawCommands['selectNodeForward'] = () => ({ state, dispatch }) => {\n  return originalSelectNodeForward(state, dispatch)\n}\n", "import { selectParentNode as originalSelectParentNode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectParentNode: {\n      /**\n       * Select the parent node.\n       * @example editor.commands.selectParentNode()\n       */\n      selectParentNode: () => ReturnType\n    }\n  }\n}\n\nexport const selectParentNode: RawCommands['selectParentNode'] = () => ({ state, dispatch }) => {\n  return originalSelectParentNode(state, dispatch)\n}\n", "// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nimport { selectTextblockEnd as originalSelectTextblockEnd } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectTextblockEnd: {\n      /**\n       * Moves the cursor to the end of current text block.\n       * @example editor.commands.selectTextblockEnd()\n       */\n      selectTextblockEnd: () => ReturnType\n    }\n  }\n}\n\nexport const selectTextblockEnd: RawCommands['selectTextblockEnd'] = () => ({ state, dispatch }) => {\n  return originalSelectTextblockEnd(state, dispatch)\n}\n", "// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nimport { selectTextblockStart as originalSelectTextblockStart } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectTextblockStart: {\n      /**\n       * Moves the cursor to the start of current text block.\n       * @example editor.commands.selectTextblockStart()\n       */\n      selectTextblockStart: () => ReturnType\n    }\n  }\n}\n\nexport const selectTextblockStart: RawCommands['selectTextblockStart'] = () => ({ state, dispatch }) => {\n  return originalSelectTextblockStart(state, dispatch)\n}\n", "import { Node as ProseMirrorNode, ParseOptions, Schema } from '@tiptap/pm/model'\n\nimport { Content } from '../types.js'\nimport { createNodeFromContent } from './createNodeFromContent.js'\n\n/**\n * Create a new Prosemirror document node from content.\n * @param content The JSON or HTML content to create the document from\n * @param schema The Prosemirror schema to use for the document\n * @param parseOptions Options for the parser\n * @returns The created Prosemirror document node\n */\nexport function createDocument(\n  content: Content,\n  schema: Schema,\n  parseOptions: ParseOptions = {},\n  options: { errorOnInvalidContent?: boolean } = {},\n): ProseMirrorNode {\n  return createNodeFromContent(content, schema, {\n    slice: false,\n    parseOptions,\n    errorOnInvalidContent: options.errorOnInvalidContent,\n  }) as ProseMirrorNode\n}\n", "import { ParseOptions } from '@tiptap/pm/model'\n\nimport { createDocument } from '../helpers/createDocument.js'\nimport { Content, RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setContent: {\n      /**\n       * Replace the whole document with new content.\n       * @param content The new content.\n       * @param emitUpdate Whether to emit an update event.\n       * @param parseOptions Options for parsing the content.\n       * @example editor.commands.setContent('<p>Example text</p>')\n       */\n      setContent: (\n        /**\n         * The new content.\n         */\n        content: Content,\n\n        /**\n         * Whether to emit an update event.\n         * @default false\n         */\n        emitUpdate?: boolean,\n\n        /**\n         * Options for parsing the content.\n         * @default {}\n         */\n        parseOptions?: ParseOptions,\n        /**\n         * Options for `setContent`.\n         */\n        options?: {\n          /**\n           * Whether to throw an error if the content is invalid.\n           */\n           errorOnInvalidContent?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const setContent: RawCommands['setContent'] = (content, emitUpdate = false, parseOptions = {}, options = {}) => ({\n  editor, tr, dispatch, commands,\n}) => {\n  const { doc } = tr\n\n  // This is to keep backward compatibility with the previous behavior\n  // TODO remove this in the next major version\n  if (parseOptions.preserveWhitespace !== 'full') {\n    const document = createDocument(content, editor.schema, parseOptions, {\n      errorOnInvalidContent: options.errorOnInvalidContent ?? editor.options.enableContentCheck,\n    })\n\n    if (dispatch) {\n      tr.replaceWith(0, doc.content.size, document).setMeta('preventUpdate', !emitUpdate)\n    }\n    return true\n  }\n\n  if (dispatch) {\n    tr.setMeta('preventUpdate', !emitUpdate)\n  }\n\n  return commands.insertContentAt(\n    { from: 0, to: doc.content.size },\n    content,\n    {\n      parseOptions,\n      errorOnInvalidContent: options.errorOnInvalidContent ?? editor.options.enableContentCheck,\n    },\n  )\n}\n", "import { Mark, MarkType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getMarkType } from './getMarkType.js'\n\nexport function getMarkAttributes(\n  state: EditorState,\n  typeOrName: string | MarkType,\n): Record<string, any> {\n  const type = getMarkType(typeOrName, state.schema)\n  const { from, to, empty } = state.selection\n  const marks: Mark[] = []\n\n  if (empty) {\n    if (state.storedMarks) {\n      marks.push(...state.storedMarks)\n    }\n\n    marks.push(...state.selection.$head.marks())\n  } else {\n    state.doc.nodesBetween(from, to, node => {\n      marks.push(...node.marks)\n    })\n  }\n\n  const mark = marks.find(markItem => markItem.type.name === type.name)\n\n  if (!mark) {\n    return {}\n  }\n\n  return { ...mark.attrs }\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Transaction } from '@tiptap/pm/state'\nimport { Transform } from '@tiptap/pm/transform'\n\n/**\n * Returns a new `Transform` based on all steps of the passed transactions.\n * @param oldDoc The Prosemirror node to start from\n * @param transactions The transactions to combine\n * @returns A new `Transform` with all steps of the passed transactions\n */\nexport function combineTransactionSteps(\n  oldDoc: ProseMirrorNode,\n  transactions: Transaction[],\n): Transform {\n  const transform = new Transform(oldDoc)\n\n  transactions.forEach(transaction => {\n    transaction.steps.forEach(step => {\n      transform.step(step)\n    })\n  })\n\n  return transform\n}\n", "import { ContentMatch, NodeType } from '@tiptap/pm/model'\n\n/**\n * Gets the default block type at a given match\n * @param match The content match to get the default block type from\n * @returns The default block type or null\n */\nexport function defaultBlockAt(match: ContentMatch): NodeType | null {\n  for (let i = 0; i < match.edgeCount; i += 1) {\n    const { type } = match.edge(i)\n\n    if (type.isTextblock && !type.hasRequiredAttrs()) {\n      return type\n    }\n  }\n\n  return null\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { NodeWithPos, Predicate } from '../types.js'\n\n/**\n * Find children inside a Prosemirror node that match a predicate.\n * @param node The Prosemirror node to search in\n * @param predicate The predicate to match\n * @returns An array of nodes with their positions\n */\nexport function findChildren(node: ProseMirrorNode, predicate: Predicate): NodeWithPos[] {\n  const nodesWithPos: NodeWithPos[] = []\n\n  node.descendants((child, pos) => {\n    if (predicate(child)) {\n      nodesWithPos.push({\n        node: child,\n        pos,\n      })\n    }\n  })\n\n  return nodesWithPos\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { NodeWithPos, Predicate, Range } from '../types.js'\n\n/**\n * Same as `findChildren` but searches only within a `range`.\n * @param node The Prosemirror node to search in\n * @param range The range to search in\n * @param predicate The predicate to match\n * @returns An array of nodes with their positions\n */\nexport function findChildrenInRange(\n  node: ProseMirrorNode,\n  range: Range,\n  predicate: Predicate,\n): NodeWithPos[] {\n  const nodesWithPos: NodeWithPos[] = []\n\n  // if (range.from === range.to) {\n  //   const nodeAt = node.nodeAt(range.from)\n\n  //   if (nodeAt) {\n  //     nodesWithPos.push({\n  //       node: nodeAt,\n  //       pos: range.from,\n  //     })\n  //   }\n  // }\n\n  node.nodesBetween(range.from, range.to, (child, pos) => {\n    if (predicate(child)) {\n      nodesWithPos.push({\n        node: child,\n        pos,\n      })\n    }\n  })\n\n  return nodesWithPos\n}\n", "import { Node as ProseMirrorNode, ResolvedPos } from '@tiptap/pm/model'\n\nimport { Predicate } from '../types.js'\n\n/**\n * Finds the closest parent node to a resolved position that matches a predicate.\n * @param $pos The resolved position to search from\n * @param predicate The predicate to match\n * @returns The closest parent node to the resolved position that matches the predicate\n * @example ```js\n * findParentNodeClosestToPos($from, node => node.type.name === 'paragraph')\n * ```\n */\nexport function findParentNodeClosestToPos(\n  $pos: ResolvedPos,\n  predicate: Predicate,\n):\n  | {\n      pos: number\n      start: number\n      depth: number\n      node: ProseMirrorNode\n    }\n  | undefined {\n  for (let i = $pos.depth; i > 0; i -= 1) {\n    const node = $pos.node(i)\n\n    if (predicate(node)) {\n      return {\n        pos: i > 0 ? $pos.before(i) : 0,\n        start: $pos.start(i),\n        depth: i,\n        node,\n      }\n    }\n  }\n}\n", "import { Selection } from '@tiptap/pm/state'\n\nimport { Predicate } from '../types.js'\nimport { findParentNodeClosestToPos } from './findParentNodeClosestToPos.js'\n\n/**\n * Finds the closest parent node to the current selection that matches a predicate.\n * @param predicate The predicate to match\n * @returns A command that finds the closest parent node to the current selection that matches the predicate\n * @example ```js\n * findParentNode(node => node.type.name === 'paragraph')\n * ```\n */\nexport function findParentNode(predicate: Predicate) {\n  return (selection: Selection) => findParentNodeClosestToPos(selection.$from, predicate)\n}\n", "import { DOMSerializer, Fragment, Schema } from '@tiptap/pm/model'\n\nexport function getHTMLFromFragment(fragment: Fragment, schema: Schema): string {\n  const documentFragment = DOMSerializer.fromSchema(schema).serializeFragment(fragment)\n\n  const temporaryDocument = document.implementation.createHTMLDocument()\n  const container = temporaryDocument.createElement('div')\n\n  container.appendChild(documentFragment)\n\n  return container.innerHTML\n}\n", "import { Schema } from '@tiptap/pm/model'\n\nimport { Editor } from '../Editor.js'\nimport { ExtensionManager } from '../ExtensionManager.js'\nimport { Extensions } from '../types.js'\nimport { getSchemaByResolvedExtensions } from './getSchemaByResolvedExtensions.js'\n\nexport function getSchema(extensions: Extensions, editor?: Editor): Schema {\n  const resolvedExtensions = ExtensionManager.resolve(extensions)\n\n  return getSchemaByResolvedExtensions(resolvedExtensions, editor)\n}\n", "import { Node } from '@tiptap/pm/model'\n\nimport { Extensions, JSONContent } from '../types.js'\nimport { getHTMLFromFragment } from './getHTMLFromFragment.js'\nimport { getSchema } from './getSchema.js'\n\n/**\n * Generate HTML from a JSONContent\n * @param doc The JSONContent to generate HTML from\n * @param extensions The extensions to use for the schema\n * @returns The generated HTML\n */\nexport function generateHTML(doc: JSONContent, extensions: Extensions): string {\n  const schema = getSchema(extensions)\n  const contentNode = Node.fromJSON(schema, doc)\n\n  return getHTMLFromFragment(contentNode.content, schema)\n}\n", "import { DOMParser } from '@tiptap/pm/model'\n\nimport { Extensions } from '../types.js'\nimport { elementFromString } from '../utilities/elementFromString.js'\nimport { getSchema } from './getSchema.js'\n\n/**\n * Generate JSONContent from HTML\n * @param html The HTML to generate JSONContent from\n * @param extensions The extensions to use for the schema\n * @returns The generated JSONContent\n */\nexport function generateJSON(html: string, extensions: Extensions): Record<string, any> {\n  const schema = getSchema(extensions)\n  const dom = elementFromString(html)\n\n  return DOMParser.fromSchema(schema).parse(dom).toJSON()\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { TextSerializer } from '../types.js'\nimport { getTextBetween } from './getTextBetween.js'\n\n/**\n * Gets the text of a Prosemirror node\n * @param node The Prosemirror node\n * @param options Options for the text serializer & block separator\n * @returns The text of the node\n * @example ```js\n * const text = getText(node, { blockSeparator: '\\n' })\n * ```\n */\nexport function getText(\n  node: ProseMirrorNode,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n) {\n  const range = {\n    from: 0,\n    to: node.content.size,\n  }\n\n  return getTextBetween(node, range, options)\n}\n", "import { Node } from '@tiptap/pm/model'\n\nimport { Extensions, JSONContent, TextSerializer } from '../types.js'\nimport { getSchema } from './getSchema.js'\nimport { getText } from './getText.js'\nimport { getTextSerializersFromSchema } from './getTextSerializersFromSchema.js'\n\n/**\n * Generate raw text from a JSONContent\n * @param doc The JSONContent to generate text from\n * @param extensions The extensions to use for the schema\n * @param options Options for the text generation f.e. blockSeparator or textSerializers\n * @returns The generated text\n */\nexport function generateText(\n  doc: JSONContent,\n  extensions: Extensions,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n): string {\n  const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n  const schema = getSchema(extensions)\n  const contentNode = Node.fromJSON(schema, doc)\n\n  return getText(contentNode, {\n    blockSeparator,\n    textSerializers: {\n      ...getTextSerializersFromSchema(schema),\n      ...textSerializers,\n    },\n  })\n}\n", "import { Node, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getNodeType } from './getNodeType.js'\n\nexport function getNodeAttributes(\n  state: EditorState,\n  typeOrName: string | NodeType,\n): Record<string, any> {\n  const type = getNodeType(typeOrName, state.schema)\n  const { from, to } = state.selection\n  const nodes: Node[] = []\n\n  state.doc.nodesBetween(from, to, node => {\n    nodes.push(node)\n  })\n\n  const node = nodes.reverse().find(nodeItem => nodeItem.type.name === type.name)\n\n  if (!node) {\n    return {}\n  }\n\n  return { ...node.attrs }\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getMarkAttributes } from './getMarkAttributes.js'\nimport { getNodeAttributes } from './getNodeAttributes.js'\nimport { getSchemaTypeNameByName } from './getSchemaTypeNameByName.js'\n\n/**\n * Get node or mark attributes by type or name on the current editor state\n * @param state The current editor state\n * @param typeOrName The node or mark type or name\n * @returns The attributes of the node or mark or an empty object\n */\nexport function getAttributes(\n  state: EditorState,\n  typeOrName: string | NodeType | MarkType,\n): Record<string, any> {\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (schemaType === 'node') {\n    return getNodeAttributes(state, typeOrName as NodeType)\n  }\n\n  if (schemaType === 'mark') {\n    return getMarkAttributes(state, typeOrName as MarkType)\n  }\n\n  return {}\n}\n", "/**\n * Removes duplicated values within an array.\n * Supports numbers, strings and objects.\n */\nexport function removeDuplicates<T>(array: T[], by = JSON.stringify): T[] {\n  const seen: Record<any, any> = {}\n\n  return array.filter(item => {\n    const key = by(item)\n\n    return Object.prototype.hasOwnProperty.call(seen, key)\n      ? false\n      : (seen[key] = true)\n  })\n}\n", "import { Step, Transform } from '@tiptap/pm/transform'\n\nimport { Range } from '../types.js'\nimport { removeDuplicates } from '../utilities/removeDuplicates.js'\n\nexport type ChangedRange = {\n  oldRange: Range,\n  newRange: Range,\n}\n\n/**\n * Removes duplicated ranges and ranges that are\n * fully captured by other ranges.\n */\nfunction simplifyChangedRanges(changes: ChangedRange[]): ChangedRange[] {\n  const uniqueChanges = removeDuplicates(changes)\n\n  return uniqueChanges.length === 1\n    ? uniqueChanges\n    : uniqueChanges.filter((change, index) => {\n      const rest = uniqueChanges.filter((_, i) => i !== index)\n\n      return !rest.some(otherChange => {\n        return change.oldRange.from >= otherChange.oldRange.from\n          && change.oldRange.to <= otherChange.oldRange.to\n          && change.newRange.from >= otherChange.newRange.from\n          && change.newRange.to <= otherChange.newRange.to\n      })\n    })\n}\n\n/**\n * Returns a list of changed ranges\n * based on the first and last state of all steps.\n */\nexport function getChangedRanges(transform: Transform): ChangedRange[] {\n  const { mapping, steps } = transform\n  const changes: ChangedRange[] = []\n\n  mapping.maps.forEach((stepMap, index) => {\n    const ranges: Range[] = []\n\n    // This accounts for step changes where no range was actually altered\n    // e.g. when setting a mark, node attribute, etc.\n    // @ts-ignore\n    if (!stepMap.ranges.length) {\n      const { from, to } = steps[index] as Step & {\n        from?: number,\n        to?: number,\n      }\n\n      if (from === undefined || to === undefined) {\n        return\n      }\n\n      ranges.push({ from, to })\n    } else {\n      stepMap.forEach((from, to) => {\n        ranges.push({ from, to })\n      })\n    }\n\n    ranges.forEach(({ from, to }) => {\n      const newStart = mapping.slice(index).map(from, -1)\n      const newEnd = mapping.slice(index).map(to)\n      const oldStart = mapping.invert().map(newStart, -1)\n      const oldEnd = mapping.invert().map(newEnd)\n\n      changes.push({\n        oldRange: {\n          from: oldStart,\n          to: oldEnd,\n        },\n        newRange: {\n          from: newStart,\n          to: newEnd,\n        },\n      })\n    })\n  })\n\n  return simplifyChangedRanges(changes)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { JSONContent } from '../types.js'\n\ninterface DebugJSONContent extends JSONContent {\n  from: number\n  to: number\n}\n\nexport function getDebugJSON(node: ProseMirrorNode, startOffset = 0): DebugJSONContent {\n  const isTopNode = node.type === node.type.schema.topNodeType\n  const increment = isTopNode ? 0 : 1\n  const from = startOffset\n  const to = from + node.nodeSize\n  const marks = node.marks.map(mark => {\n    const output: { type: string; attrs?: Record<string, any> } = {\n      type: mark.type.name,\n    }\n\n    if (Object.keys(mark.attrs).length) {\n      output.attrs = { ...mark.attrs }\n    }\n\n    return output\n  })\n  const attrs = { ...node.attrs }\n  const output: DebugJSONContent = {\n    type: node.type.name,\n    from,\n    to,\n  }\n\n  if (Object.keys(attrs).length) {\n    output.attrs = attrs\n  }\n\n  if (marks.length) {\n    output.marks = marks\n  }\n\n  if (node.content.childCount) {\n    output.content = []\n\n    node.forEach((child, offset) => {\n      output.content?.push(getDebugJSON(child, startOffset + offset + increment))\n    })\n  }\n\n  if (node.text) {\n    output.text = node.text\n  }\n\n  return output\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { MarkRange } from '../types.js'\nimport { getMarkRange } from './getMarkRange.js'\n\nexport function getMarksBetween(from: number, to: number, doc: ProseMirrorNode): MarkRange[] {\n  const marks: MarkRange[] = []\n\n  // get all inclusive marks on empty selection\n  if (from === to) {\n    doc\n      .resolve(from)\n      .marks()\n      .forEach(mark => {\n        const $pos = doc.resolve(from)\n        const range = getMarkRange($pos, mark.type)\n\n        if (!range) {\n          return\n        }\n\n        marks.push({\n          mark,\n          ...range,\n        })\n      })\n  } else {\n    doc.nodesBetween(from, to, (node, pos) => {\n      if (!node || node?.nodeSize === undefined) {\n        return\n      }\n\n      marks.push(\n        ...node.marks.map(mark => ({\n          from: pos,\n          to: pos + node.nodeSize,\n          mark,\n        })),\n      )\n    })\n  }\n\n  return marks\n}\n", "import { Node, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\n/**\n * Finds the first node of a given type or name in the current selection.\n * @param state The editor state.\n * @param typeOrName The node type or name.\n * @param pos The position to start searching from.\n * @param maxDepth The maximum depth to search.\n * @returns The node and the depth as an array.\n */\nexport const getNodeAtPosition = (state: EditorState, typeOrName: string | NodeType, pos: number, maxDepth = 20) => {\n  const $pos = state.doc.resolve(pos)\n\n  let currentDepth = maxDepth\n  let node: Node | null = null\n\n  while (currentDepth > 0 && node === null) {\n    const currentNode = $pos.node(currentDepth)\n\n    if (currentNode?.type.name === typeOrName) {\n      node = currentNode\n    } else {\n      currentDepth -= 1\n    }\n  }\n\n  return [node, currentDepth] as [Node | null, number]\n}\n", "import { ExtensionAttribute } from '../types.js'\n\n/**\n * Return attributes of an extension that should be splitted by keepOnSplit flag\n * @param extensionAttributes Array of extension attributes\n * @param typeName The type of the extension\n * @param attributes The attributes of the extension\n * @returns The splitted attributes\n */\nexport function getSplittedAttributes(\n  extensionAttributes: ExtensionAttribute[],\n  typeName: string,\n  attributes: Record<string, any>,\n): Record<string, any> {\n  return Object.fromEntries(Object\n    .entries(attributes)\n    .filter(([name]) => {\n      const extensionAttribute = extensionAttributes.find(item => {\n        return item.type === typeName && item.name === name\n      })\n\n      if (!extensionAttribute) {\n        return false\n      }\n\n      return extensionAttribute.attribute.keepOnSplit\n    }))\n}\n", "import { MarkType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { MarkRange } from '../types.js'\nimport { objectIncludes } from '../utilities/objectIncludes.js'\nimport { getMarkType } from './getMarkType.js'\n\nexport function isMarkActive(\n  state: EditorState,\n  typeOrName: MarkType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { empty, ranges } = state.selection\n  const type = typeOrName ? getMarkType(typeOrName, state.schema) : null\n\n  if (empty) {\n    return !!(state.storedMarks || state.selection.$from.marks())\n      .filter(mark => {\n        if (!type) {\n          return true\n        }\n\n        return type.name === mark.type.name\n      })\n      .find(mark => objectIncludes(mark.attrs, attributes, { strict: false }))\n  }\n\n  let selectionRange = 0\n  const markRanges: MarkRange[] = []\n\n  ranges.forEach(({ $from, $to }) => {\n    const from = $from.pos\n    const to = $to.pos\n\n    state.doc.nodesBetween(from, to, (node, pos) => {\n      if (!node.isText && !node.marks.length) {\n        return\n      }\n\n      const relativeFrom = Math.max(from, pos)\n      const relativeTo = Math.min(to, pos + node.nodeSize)\n      const range = relativeTo - relativeFrom\n\n      selectionRange += range\n\n      markRanges.push(\n        ...node.marks.map(mark => ({\n          mark,\n          from: relativeFrom,\n          to: relativeTo,\n        })),\n      )\n    })\n  })\n\n  if (selectionRange === 0) {\n    return false\n  }\n\n  // calculate range of matched mark\n  const matchedRange = markRanges\n    .filter(markRange => {\n      if (!type) {\n        return true\n      }\n\n      return type.name === markRange.mark.type.name\n    })\n    .filter(markRange => objectIncludes(markRange.mark.attrs, attributes, { strict: false }))\n    .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0)\n\n  // calculate range of marks that excludes the searched mark\n  // for example `code` doesn’t allow any other marks\n  const excludedRange = markRanges\n    .filter(markRange => {\n      if (!type) {\n        return true\n      }\n\n      return markRange.mark.type !== type && markRange.mark.type.excludes(type)\n    })\n    .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0)\n\n  // we only include the result of `excludedRange`\n  // if there is a match at all\n  const range = matchedRange > 0 ? matchedRange + excludedRange : matchedRange\n\n  return range >= selectionRange\n}\n", "import { EditorState } from '@tiptap/pm/state'\n\nimport { getSchemaTypeNameByName } from './getSchemaTypeNameByName.js'\nimport { isMarkActive } from './isMarkActive.js'\nimport { isNodeActive } from './isNodeActive.js'\n\nexport function isActive(\n  state: EditorState,\n  name: string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  if (!name) {\n    return isNodeActive(state, null, attributes) || isMarkActive(state, null, attributes)\n  }\n\n  const schemaType = getSchemaTypeNameByName(name, state.schema)\n\n  if (schemaType === 'node') {\n    return isNodeActive(state, name, attributes)\n  }\n\n  if (schemaType === 'mark') {\n    return isMarkActive(state, name, attributes)\n  }\n\n  return false\n}\n", "import { EditorState } from '@tiptap/pm/state'\n\nimport { findParentNode } from './findParentNode.js'\n\nexport const isAtEndOfNode = (state: EditorState, nodeType?: string) => {\n  const { $from, $to, $anchor } = state.selection\n\n  if (nodeType) {\n    const parentNode = findParentNode(node => node.type.name === nodeType)(state.selection)\n\n    if (!parentNode) {\n      return false\n    }\n\n    const $parentPos = state.doc.resolve(parentNode.pos + 1)\n\n    if ($anchor.pos + 1 === $parentPos.end()) {\n      return true\n    }\n\n    return false\n  }\n\n  if ($to.parentOffset < $to.parent.nodeSize - 2 || $from.pos !== $to.pos) {\n    return false\n  }\n\n  return true\n}\n", "import { EditorState } from '@tiptap/pm/state'\n\nexport const isAtStartOfNode = (state: EditorState) => {\n  const { $from, $to } = state.selection\n\n  if ($from.parentOffset > 0 || $from.pos !== $to.pos) {\n    return false\n  }\n\n  return true\n}\n", "import { getExtensionField } from '../helpers/getExtensionField.js'\nimport { NodeConfig } from '../index.js'\nimport { Extensions } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\nimport { splitExtensions } from './splitExtensions.js'\n\nexport function isList(name: string, extensions: Extensions): boolean {\n  const { nodeExtensions } = splitExtensions(extensions)\n  const extension = nodeExtensions.find(item => item.name === name)\n\n  if (!extension) {\n    return false\n  }\n\n  const context = {\n    name: extension.name,\n    options: extension.options,\n    storage: extension.storage,\n  }\n  const group = callOrReturn(getExtensionField<NodeConfig['group']>(extension, 'group', context))\n\n  if (typeof group !== 'string') {\n    return false\n  }\n\n  return group.split(' ').includes('list')\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\n/**\n * Returns true if the given prosemirror node is empty.\n */\nexport function isNodeEmpty(\n  node: ProseMirrorNode,\n  {\n    checkChildren = true,\n    ignoreWhitespace = false,\n  }: {\n    /**\n     * When true (default), it will also check if all children are empty.\n     */\n    checkChildren?: boolean;\n    /**\n     * When true, it will ignore whitespace when checking for emptiness.\n     */\n    ignoreWhitespace?: boolean;\n  } = {},\n): boolean {\n  if (ignoreWhitespace) {\n    if (node.type.name === 'hardBreak') {\n      // Hard breaks are considered empty\n      return true\n    }\n    if (node.isText) {\n      return /^\\s*$/m.test(node.text ?? '')\n    }\n  }\n\n  if (node.isText) {\n    return !node.text\n  }\n\n  if (node.isAtom || node.isLeaf) {\n    return false\n  }\n\n  if (node.content.childCount === 0) {\n    return true\n  }\n\n  if (checkChildren) {\n    let isContentEmpty = true\n\n    node.content.forEach(childNode => {\n      if (isContentEmpty === false) {\n        // Exit early for perf\n        return\n      }\n\n      if (!isNodeEmpty(childNode, { ignoreWhitespace, checkChildren })) {\n        isContentEmpty = false\n      }\n    })\n\n    return isContentEmpty\n  }\n\n  return false\n}\n", "import { NodeSelection } from '@tiptap/pm/state'\n\nexport function isNodeSelection(value: unknown): value is NodeSelection {\n  return value instanceof NodeSelection\n}\n", "import { EditorView } from '@tiptap/pm/view'\n\nimport { minMax } from '../utilities/minMax.js'\n\nexport function posToDOMRect(view: EditorView, from: number, to: number): DOMRect {\n  const minPos = 0\n  const maxPos = view.state.doc.content.size\n  const resolvedFrom = minMax(from, minPos, maxPos)\n  const resolvedEnd = minMax(to, minPos, maxPos)\n  const start = view.coordsAtPos(resolvedFrom)\n  const end = view.coordsAtPos(resolvedEnd, -1)\n  const top = Math.min(start.top, end.top)\n  const bottom = Math.max(start.bottom, end.bottom)\n  const left = Math.min(start.left, end.left)\n  const right = Math.max(start.right, end.right)\n  const width = right - left\n  const height = bottom - top\n  const x = left\n  const y = top\n  const data = {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height,\n    x,\n    y,\n  }\n\n  return {\n    ...data,\n    toJSON: () => data,\n  }\n}\n", "import { MarkType, ResolvedPos } from '@tiptap/pm/model'\nimport { EditorState, Transaction } from '@tiptap/pm/state'\n\nimport { getMarkAttributes } from '../helpers/getMarkAttributes.js'\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { isTextSelection } from '../helpers/index.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setMark: {\n      /**\n       * Add a mark with new attributes.\n       * @param typeOrName The mark type or name.\n       * @example editor.commands.setMark('bold', { level: 1 })\n       */\n      setMark: (typeOrName: string | MarkType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nfunction canSetMark(state: EditorState, tr: Transaction, newMarkType: MarkType) {\n  const { selection } = tr\n  let cursor: ResolvedPos | null = null\n\n  if (isTextSelection(selection)) {\n    cursor = selection.$cursor\n  }\n\n  if (cursor) {\n    const currentMarks = state.storedMarks ?? cursor.marks()\n\n    // There can be no current marks that exclude the new mark\n    return (\n      !!newMarkType.isInSet(currentMarks)\n      || !currentMarks.some(mark => mark.type.excludes(newMarkType))\n    )\n  }\n\n  const { ranges } = selection\n\n  return ranges.some(({ $from, $to }) => {\n    let someNodeSupportsMark = $from.depth === 0\n      ? state.doc.inlineContent && state.doc.type.allowsMarkType(newMarkType)\n      : false\n\n    state.doc.nodesBetween($from.pos, $to.pos, (node, _pos, parent) => {\n      // If we already found a mark that we can enable, return false to bypass the remaining search\n      if (someNodeSupportsMark) {\n        return false\n      }\n\n      if (node.isInline) {\n        const parentAllowsMarkType = !parent || parent.type.allowsMarkType(newMarkType)\n        const currentMarksAllowMarkType = !!newMarkType.isInSet(node.marks)\n          || !node.marks.some(otherMark => otherMark.type.excludes(newMarkType))\n\n        someNodeSupportsMark = parentAllowsMarkType && currentMarksAllowMarkType\n      }\n      return !someNodeSupportsMark\n    })\n\n    return someNodeSupportsMark\n  })\n}\nexport const setMark: RawCommands['setMark'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  const { selection } = tr\n  const { empty, ranges } = selection\n  const type = getMarkType(typeOrName, state.schema)\n\n  if (dispatch) {\n    if (empty) {\n      const oldAttributes = getMarkAttributes(state, type)\n\n      tr.addStoredMark(\n        type.create({\n          ...oldAttributes,\n          ...attributes,\n        }),\n      )\n    } else {\n      ranges.forEach(range => {\n        const from = range.$from.pos\n        const to = range.$to.pos\n\n        state.doc.nodesBetween(from, to, (node, pos) => {\n          const trimmedFrom = Math.max(pos, from)\n          const trimmedTo = Math.min(pos + node.nodeSize, to)\n          const someHasMark = node.marks.find(mark => mark.type === type)\n\n          // if there is already a mark of this type\n          // we know that we have to merge its attributes\n          // otherwise we add a fresh new mark\n          if (someHasMark) {\n            node.marks.forEach(mark => {\n              if (type === mark.type) {\n                tr.addMark(\n                  trimmedFrom,\n                  trimmedTo,\n                  type.create({\n                    ...mark.attrs,\n                    ...attributes,\n                  }),\n                )\n              }\n            })\n          } else {\n            tr.addMark(trimmedFrom, trimmedTo, type.create(attributes))\n          }\n        })\n      })\n    }\n  }\n\n  return canSetMark(state, tr, type)\n}\n", "import type { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setMeta: {\n      /**\n       * Store a metadata property in the current transaction.\n       * @param key The key of the metadata property.\n       * @param value The value to store.\n       * @example editor.commands.setMeta('foo', 'bar')\n       */\n      setMeta: (key: string | Plugin | PluginKey, value: any) => ReturnType,\n    }\n  }\n}\n\nexport const setMeta: RawCommands['setMeta'] = (key, value) => ({ tr }) => {\n  tr.setMeta(key, value)\n\n  return true\n}\n", "import { setBlockType } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setNode: {\n      /**\n       * Replace a given range with a node.\n       * @param typeOrName The type or name of the node\n       * @param attributes The attributes of the node\n       * @example editor.commands.setNode('paragraph')\n       */\n      setNode: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const setNode: RawCommands['setNode'] = (typeOrName, attributes = {}) => ({ state, dispatch, chain }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  // TODO: use a fallback like insertContent?\n  if (!type.isTextblock) {\n    console.warn('[tiptap warn]: Currently \"setNode()\" only supports text block nodes.')\n\n    return false\n  }\n\n  return (\n    chain()\n    // try to convert node to default node if needed\n      .command(({ commands }) => {\n        const canSetBlock = setBlockType(type, attributes)(state)\n\n        if (canSetBlock) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .command(({ state: updatedState }) => {\n        return setBlockType(type, attributes)(updatedState, dispatch)\n      })\n      .run()\n  )\n}\n", "import { NodeSelection } from '@tiptap/pm/state'\n\nimport { RawCommands } from '../types.js'\nimport { minMax } from '../utilities/minMax.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setNodeSelection: {\n      /**\n       * Creates a NodeSelection.\n       * @param position - Position of the node.\n       * @example editor.commands.setNodeSelection(10)\n       */\n      setNodeSelection: (position: number) => ReturnType\n    }\n  }\n}\n\nexport const setNodeSelection: RawCommands['setNodeSelection'] = position => ({ tr, dispatch }) => {\n  if (dispatch) {\n    const { doc } = tr\n    const from = minMax(position, 0, doc.content.size)\n    const selection = NodeSelection.create(doc, from)\n\n    tr.setSelection(selection)\n  }\n\n  return true\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nimport { Range, RawCommands } from '../types.js'\nimport { minMax } from '../utilities/minMax.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setTextSelection: {\n      /**\n       * Creates a TextSelection.\n       * @param position The position of the selection.\n       * @example editor.commands.setTextSelection(10)\n       */\n      setTextSelection: (position: number | Range) => ReturnType\n    }\n  }\n}\n\nexport const setTextSelection: RawCommands['setTextSelection'] = position => ({ tr, dispatch }) => {\n  if (dispatch) {\n    const { doc } = tr\n    const { from, to } = typeof position === 'number' ? { from: position, to: position } : position\n    const minPos = TextSelection.atStart(doc).from\n    const maxPos = TextSelection.atEnd(doc).to\n    const resolvedFrom = minMax(from, minPos, maxPos)\n    const resolvedEnd = minMax(to, minPos, maxPos)\n    const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd)\n\n    tr.setSelection(selection)\n  }\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { sinkListItem as originalSinkListItem } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    sinkListItem: {\n      /**\n       * Sink the list item down into an inner list.\n       * @param typeOrName The type or name of the node.\n       * @example editor.commands.sinkListItem('listItem')\n       */\n      sinkListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const sinkListItem: RawCommands['sinkListItem'] = typeOrName => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalSinkListItem(type)(state, dispatch)\n}\n", "import { EditorState, NodeSelection, TextSelection } from '@tiptap/pm/state'\nimport { canSplit } from '@tiptap/pm/transform'\n\nimport { defaultBlockAt } from '../helpers/defaultBlockAt.js'\nimport { getSplittedAttributes } from '../helpers/getSplittedAttributes.js'\nimport { RawCommands } from '../types.js'\n\nfunction ensureMarks(state: EditorState, splittableMarks?: string[]) {\n  const marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks())\n\n  if (marks) {\n    const filteredMarks = marks.filter(mark => splittableMarks?.includes(mark.type.name))\n\n    state.tr.ensureMarks(filteredMarks)\n  }\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    splitBlock: {\n      /**\n       * Forks a new node from an existing node.\n       * @param options.keepMarks Keep marks from the previous node.\n       * @example editor.commands.splitBlock()\n       * @example editor.commands.splitBlock({ keepMarks: true })\n       */\n      splitBlock: (options?: { keepMarks?: boolean }) => ReturnType\n    }\n  }\n}\n\nexport const splitBlock: RawCommands['splitBlock'] = ({ keepMarks = true } = {}) => ({\n  tr, state, dispatch, editor,\n}) => {\n  const { selection, doc } = tr\n  const { $from, $to } = selection\n  const extensionAttributes = editor.extensionManager.attributes\n  const newAttributes = getSplittedAttributes(\n    extensionAttributes,\n    $from.node().type.name,\n    $from.node().attrs,\n  )\n\n  if (selection instanceof NodeSelection && selection.node.isBlock) {\n    if (!$from.parentOffset || !canSplit(doc, $from.pos)) {\n      return false\n    }\n\n    if (dispatch) {\n      if (keepMarks) {\n        ensureMarks(state, editor.extensionManager.splittableMarks)\n      }\n\n      tr.split($from.pos).scrollIntoView()\n    }\n\n    return true\n  }\n\n  if (!$from.parent.isBlock) {\n    return false\n  }\n\n  const atEnd = $to.parentOffset === $to.parent.content.size\n\n  const deflt = $from.depth === 0\n    ? undefined\n    : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)))\n\n  let types = atEnd && deflt\n    ? [\n      {\n        type: deflt,\n        attrs: newAttributes,\n      },\n    ]\n    : undefined\n\n  let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types)\n\n  if (\n    !types\n      && !can\n      && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)\n  ) {\n    can = true\n    types = deflt\n      ? [\n        {\n          type: deflt,\n          attrs: newAttributes,\n        },\n      ]\n      : undefined\n  }\n\n  if (dispatch) {\n    if (can) {\n      if (selection instanceof TextSelection) {\n        tr.deleteSelection()\n      }\n\n      tr.split(tr.mapping.map($from.pos), 1, types)\n\n      if (deflt && !atEnd && !$from.parentOffset && $from.parent.type !== deflt) {\n        const first = tr.mapping.map($from.before())\n        const $first = tr.doc.resolve(first)\n\n        if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt)) {\n          tr.setNodeMarkup(tr.mapping.map($from.before()), deflt)\n        }\n      }\n    }\n\n    if (keepMarks) {\n      ensureMarks(state, editor.extensionManager.splittableMarks)\n    }\n\n    tr.scrollIntoView()\n  }\n\n  return can\n}\n", "import {\n  Fragment, Node as ProseMirrorNode, NodeType, Slice,\n} from '@tiptap/pm/model'\nimport { TextSelection } from '@tiptap/pm/state'\nimport { canSplit } from '@tiptap/pm/transform'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { getSplittedAttributes } from '../helpers/getSplittedAttributes.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    splitListItem: {\n      /**\n       * Splits one list item into two list items.\n       * @param typeOrName The type or name of the node.\n       * @param overrideAttrs The attributes to ensure on the new node.\n       * @example editor.commands.splitListItem('listItem')\n       */\n      splitListItem: (typeOrName: string | NodeType, overrideAttrs?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const splitListItem: RawCommands['splitListItem'] = (typeOrName, overrideAttrs = {}) => ({\n  tr, state, dispatch, editor,\n}) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const { $from, $to } = state.selection\n\n  // @ts-ignore\n  // eslint-disable-next-line\n    const node: ProseMirrorNode = state.selection.node\n\n  if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) {\n    return false\n  }\n\n  const grandParent = $from.node(-1)\n\n  if (grandParent.type !== type) {\n    return false\n  }\n\n  const extensionAttributes = editor.extensionManager.attributes\n\n  if ($from.parent.content.size === 0 && $from.node(-1).childCount === $from.indexAfter(-1)) {\n    // In an empty block. If this is a nested list, the wrapping\n    // list item should be split. Otherwise, bail out and let next\n    // command handle lifting.\n    if (\n      $from.depth === 2\n        || $from.node(-3).type !== type\n        || $from.index(-2) !== $from.node(-2).childCount - 1\n    ) {\n      return false\n    }\n\n    if (dispatch) {\n      let wrap = Fragment.empty\n      // eslint-disable-next-line\n        const depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3\n\n      // Build a fragment containing empty versions of the structure\n      // from the outer list item to the parent node of the cursor\n      for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d -= 1) {\n        wrap = Fragment.from($from.node(d).copy(wrap))\n      }\n\n      // eslint-disable-next-line\n        const depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1 : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3\n\n      // Add a second list item with an empty default start node\n      const newNextTypeAttributes = {\n        ...getSplittedAttributes(\n          extensionAttributes,\n          $from.node().type.name,\n          $from.node().attrs,\n        ),\n        ...overrideAttrs,\n      }\n      const nextType = type.contentMatch.defaultType?.createAndFill(newNextTypeAttributes) || undefined\n\n      wrap = wrap.append(Fragment.from(type.createAndFill(null, nextType) || undefined))\n\n      const start = $from.before($from.depth - (depthBefore - 1))\n\n      tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0))\n\n      let sel = -1\n\n      tr.doc.nodesBetween(start, tr.doc.content.size, (n, pos) => {\n        if (sel > -1) {\n          return false\n        }\n\n        if (n.isTextblock && n.content.size === 0) {\n          sel = pos + 1\n        }\n      })\n\n      if (sel > -1) {\n        tr.setSelection(TextSelection.near(tr.doc.resolve(sel)))\n      }\n\n      tr.scrollIntoView()\n    }\n\n    return true\n  }\n\n  const nextType = $to.pos === $from.end() ? grandParent.contentMatchAt(0).defaultType : null\n\n  const newTypeAttributes = {\n    ...getSplittedAttributes(\n      extensionAttributes,\n      grandParent.type.name,\n      grandParent.attrs,\n    ),\n    ...overrideAttrs,\n  }\n  const newNextTypeAttributes = {\n    ...getSplittedAttributes(\n      extensionAttributes,\n      $from.node().type.name,\n      $from.node().attrs,\n    ),\n    ...overrideAttrs,\n  }\n\n  tr.delete($from.pos, $to.pos)\n\n  const types = nextType\n    ? [\n      { type, attrs: newTypeAttributes },\n      { type: nextType, attrs: newNextTypeAttributes },\n    ]\n    : [{ type, attrs: newTypeAttributes }]\n\n  if (!canSplit(tr.doc, $from.pos, 2)) {\n    return false\n  }\n\n  if (dispatch) {\n    const { selection, storedMarks } = state\n    const { splittableMarks } = editor.extensionManager\n    const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n    tr.split($from.pos, 2, types).scrollIntoView()\n\n    if (!marks || !dispatch) {\n      return true\n    }\n\n    const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n    tr.ensureMarks(filteredMarks)\n  }\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { Transaction } from '@tiptap/pm/state'\nimport { canJoin } from '@tiptap/pm/transform'\n\nimport { findParentNode } from '../helpers/findParentNode.js'\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isList } from '../helpers/isList.js'\nimport { RawCommands } from '../types.js'\n\nconst joinListBackwards = (tr: Transaction, listType: NodeType): boolean => {\n  const list = findParentNode(node => node.type === listType)(tr.selection)\n\n  if (!list) {\n    return true\n  }\n\n  const before = tr.doc.resolve(Math.max(0, list.pos - 1)).before(list.depth)\n\n  if (before === undefined) {\n    return true\n  }\n\n  const nodeBefore = tr.doc.nodeAt(before)\n  const canJoinBackwards = list.node.type === nodeBefore?.type && canJoin(tr.doc, list.pos)\n\n  if (!canJoinBackwards) {\n    return true\n  }\n\n  tr.join(list.pos)\n\n  return true\n}\n\nconst joinListForwards = (tr: Transaction, listType: NodeType): boolean => {\n  const list = findParentNode(node => node.type === listType)(tr.selection)\n\n  if (!list) {\n    return true\n  }\n\n  const after = tr.doc.resolve(list.start).after(list.depth)\n\n  if (after === undefined) {\n    return true\n  }\n\n  const nodeAfter = tr.doc.nodeAt(after)\n  const canJoinForwards = list.node.type === nodeAfter?.type && canJoin(tr.doc, after)\n\n  if (!canJoinForwards) {\n    return true\n  }\n\n  tr.join(after)\n\n  return true\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleList: {\n      /**\n       * Toggle between different list types.\n       * @param listTypeOrName The type or name of the list.\n       * @param itemTypeOrName The type or name of the list item.\n       * @param keepMarks Keep marks when toggling.\n       * @param attributes Attributes for the new list.\n       * @example editor.commands.toggleList('bulletList', 'listItem')\n       */\n      toggleList: (listTypeOrName: string | NodeType, itemTypeOrName: string | NodeType, keepMarks?: boolean, attributes?: Record<string, any>) => ReturnType;\n    }\n  }\n}\n\nexport const toggleList: RawCommands['toggleList'] = (listTypeOrName, itemTypeOrName, keepMarks, attributes = {}) => ({\n  editor, tr, state, dispatch, chain, commands, can,\n}) => {\n  const { extensions, splittableMarks } = editor.extensionManager\n  const listType = getNodeType(listTypeOrName, state.schema)\n  const itemType = getNodeType(itemTypeOrName, state.schema)\n  const { selection, storedMarks } = state\n  const { $from, $to } = selection\n  const range = $from.blockRange($to)\n\n  const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n  if (!range) {\n    return false\n  }\n\n  const parentList = findParentNode(node => isList(node.type.name, extensions))(selection)\n\n  if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n    // remove list\n    if (parentList.node.type === listType) {\n      return commands.liftListItem(itemType)\n    }\n\n    // change list type\n    if (\n      isList(parentList.node.type.name, extensions)\n        && listType.validContent(parentList.node.content)\n        && dispatch\n    ) {\n      return chain()\n        .command(() => {\n          tr.setNodeMarkup(parentList.pos, listType)\n\n          return true\n        })\n        .command(() => joinListBackwards(tr, listType))\n        .command(() => joinListForwards(tr, listType))\n        .run()\n    }\n  }\n  if (!keepMarks || !marks || !dispatch) {\n\n    return chain()\n      // try to convert node to default node if needed\n      .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes)\n\n        if (canWrapInList) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .wrapInList(listType, attributes)\n      .command(() => joinListBackwards(tr, listType))\n      .command(() => joinListForwards(tr, listType))\n      .run()\n  }\n\n  return (\n    chain()\n    // try to convert node to default node if needed\n      .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes)\n\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n        tr.ensureMarks(filteredMarks)\n\n        if (canWrapInList) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .wrapInList(listType, attributes)\n      .command(() => joinListBackwards(tr, listType))\n      .command(() => joinListForwards(tr, listType))\n      .run()\n  )\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { isMarkActive } from '../helpers/isMarkActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleMark: {\n      /**\n       * Toggle a mark on and off.\n       * @param typeOrName The mark type or name.\n       * @param attributes The attributes of the mark.\n       * @param options.extendEmptyMarkRange Removes the mark even across the current selection. Defaults to `false`.\n       * @example editor.commands.toggleMark('bold')\n       */\n      toggleMark: (\n        /**\n         * The mark type or name.\n         */\n        typeOrName: string | MarkType,\n\n        /**\n         * The attributes of the mark.\n         */\n        attributes?: Record<string, any>,\n\n        options?: {\n          /**\n           * Removes the mark even across the current selection. Defaults to `false`.\n           */\n          extendEmptyMarkRange?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const toggleMark: RawCommands['toggleMark'] = (typeOrName, attributes = {}, options = {}) => ({ state, commands }) => {\n  const { extendEmptyMarkRange = false } = options\n  const type = getMarkType(typeOrName, state.schema)\n  const isActive = isMarkActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.unsetMark(type, { extendEmptyMarkRange })\n  }\n\n  return commands.setMark(type, attributes)\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isNodeActive } from '../helpers/isNodeActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleNode: {\n      /**\n       * Toggle a node with another node.\n       * @param typeOrName The type or name of the node.\n       * @param toggleTypeOrName The type or name of the node to toggle.\n       * @param attributes The attributes of the node.\n       * @example editor.commands.toggleNode('heading', 'paragraph')\n       */\n      toggleNode: (\n        typeOrName: string | NodeType,\n        toggleTypeOrName: string | NodeType,\n        attributes?: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const toggleNode: RawCommands['toggleNode'] = (typeOrName, toggleTypeOrName, attributes = {}) => ({ state, commands }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const toggleType = getNodeType(toggleTypeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.setNode(toggleType)\n  }\n\n  return commands.setNode(type, attributes)\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { isNodeActive } from '../helpers/isNodeActive.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleWrap: {\n      /**\n       * Wraps nodes in another node, or removes an existing wrap.\n       * @param typeOrName The type or name of the node.\n       * @param attributes The attributes of the node.\n       * @example editor.commands.toggleWrap('blockquote')\n       */\n      toggleWrap: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const toggleWrap: RawCommands['toggleWrap'] = (typeOrName, attributes = {}) => ({ state, commands }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.lift(type)\n  }\n\n  return commands.wrapIn(type, attributes)\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    undoInputRule: {\n      /**\n       * Undo an input rule.\n       * @example editor.commands.undoInputRule()\n       */\n      undoInputRule: () => ReturnType,\n    }\n  }\n}\n\nexport const undoInputRule: RawCommands['undoInputRule'] = () => ({ state, dispatch }) => {\n  const plugins = state.plugins\n\n  for (let i = 0; i < plugins.length; i += 1) {\n    const plugin = plugins[i]\n    let undoable\n\n    // @ts-ignore\n    // eslint-disable-next-line\n    if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n      if (dispatch) {\n        const tr = state.tr\n        const toUndo = undoable.transform\n\n        for (let j = toUndo.steps.length - 1; j >= 0; j -= 1) {\n          tr.step(toUndo.steps[j].invert(toUndo.docs[j]))\n        }\n\n        if (undoable.text) {\n          const marks = tr.doc.resolve(undoable.from).marks()\n\n          tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks))\n        } else {\n          tr.delete(undoable.from, undoable.to)\n        }\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    unsetAllMarks: {\n      /**\n       * Remove all marks in the current selection.\n       * @example editor.commands.unsetAllMarks()\n       */\n      unsetAllMarks: () => ReturnType,\n    }\n  }\n}\n\nexport const unsetAllMarks: RawCommands['unsetAllMarks'] = () => ({ tr, dispatch }) => {\n  const { selection } = tr\n  const { empty, ranges } = selection\n\n  if (empty) {\n    return true\n  }\n\n  if (dispatch) {\n    ranges.forEach(range => {\n      tr.removeMark(range.$from.pos, range.$to.pos)\n    })\n  }\n\n  return true\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarkRange } from '../helpers/getMarkRange.js'\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    unsetMark: {\n      /**\n       * Remove all marks in the current selection.\n       * @param typeOrName The mark type or name.\n       * @param options.extendEmptyMarkRange Removes the mark even across the current selection. Defaults to `false`.\n       * @example editor.commands.unsetMark('bold')\n       */\n      unsetMark: (\n        /**\n         * The mark type or name.\n         */\n        typeOrName: string | MarkType,\n\n        options?: {\n          /**\n           * Removes the mark even across the current selection. Defaults to `false`.\n           */\n          extendEmptyMarkRange?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const unsetMark: RawCommands['unsetMark'] = (typeOrName, options = {}) => ({ tr, state, dispatch }) => {\n  const { extendEmptyMarkRange = false } = options\n  const { selection } = tr\n  const type = getMarkType(typeOrName, state.schema)\n  const { $from, empty, ranges } = selection\n\n  if (!dispatch) {\n    return true\n  }\n\n  if (empty && extendEmptyMarkRange) {\n    let { from, to } = selection\n    const attrs = $from.marks().find(mark => mark.type === type)?.attrs\n    const range = getMarkRange($from, type, attrs)\n\n    if (range) {\n      from = range.from\n      to = range.to\n    }\n\n    tr.removeMark(from, to, type)\n  } else {\n    ranges.forEach(range => {\n      tr.removeMark(range.$from.pos, range.$to.pos, type)\n    })\n  }\n\n  tr.removeStoredMark(type)\n\n  return true\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType.js'\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { getSchemaTypeNameByName } from '../helpers/getSchemaTypeNameByName.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    updateAttributes: {\n      /**\n       * Update attributes of a node or mark.\n       * @param typeOrName The type or name of the node or mark.\n       * @param attributes The attributes of the node or mark.\n       * @example editor.commands.updateAttributes('mention', { userId: \"2\" })\n       */\n      updateAttributes: (\n        /**\n         * The type or name of the node or mark.\n         */\n        typeOrName: string | NodeType | MarkType,\n\n        /**\n         * The attributes of the node or mark.\n         */\n        attributes: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const updateAttributes: RawCommands['updateAttributes'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  let nodeType: NodeType | null = null\n  let markType: MarkType | null = null\n\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (!schemaType) {\n    return false\n  }\n\n  if (schemaType === 'node') {\n    nodeType = getNodeType(typeOrName as NodeType, state.schema)\n  }\n\n  if (schemaType === 'mark') {\n    markType = getMarkType(typeOrName as MarkType, state.schema)\n  }\n\n  if (dispatch) {\n    tr.selection.ranges.forEach(range => {\n      const from = range.$from.pos\n      const to = range.$to.pos\n\n      state.doc.nodesBetween(from, to, (node, pos) => {\n        if (nodeType && nodeType === node.type) {\n          tr.setNodeMarkup(pos, undefined, {\n            ...node.attrs,\n            ...attributes,\n          })\n        }\n\n        if (markType && node.marks.length) {\n          node.marks.forEach(mark => {\n            if (markType === mark.type) {\n              const trimmedFrom = Math.max(pos, from)\n              const trimmedTo = Math.min(pos + node.nodeSize, to)\n\n              tr.addMark(\n                trimmedFrom,\n                trimmedTo,\n                markType.create({\n                  ...mark.attrs,\n                  ...attributes,\n                }),\n              )\n            }\n          })\n        }\n      })\n    })\n  }\n\n  return true\n}\n", "import { wrapIn as originalWrapIn } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    wrapIn: {\n      /**\n       * Wraps nodes in another node.\n       * @param typeOrName The type or name of the node.\n       * @param attributes The attributes of the node.\n       * @example editor.commands.wrapIn('blockquote')\n       */\n      wrapIn: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const wrapIn: RawCommands['wrapIn'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalWrapIn(type, attributes)(state, dispatch)\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { wrapInList as originalWrapInList } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType.js'\nimport { RawCommands } from '../types.js'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    wrapInList: {\n      /**\n       * Wrap a node in a list.\n       * @param typeOrName The type or name of the node.\n       * @param attributes The attributes of the node.\n       * @example editor.commands.wrapInList('bulletList')\n       */\n      wrapInList: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const wrapInList: RawCommands['wrapInList'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalWrapInList(type, attributes)(state, dispatch)\n}\n", "import * as commands from '../commands/index.js'\nimport { Extension } from '../Extension.js'\n\nexport * from '../commands/index.js'\n\nexport const Commands = Extension.create({\n  name: 'commands',\n\n  addCommands() {\n    return {\n      ...commands,\n    }\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\n\nexport const Editable = Extension.create({\n  name: 'editable',\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('editable'),\n        props: {\n          editable: () => this.editor.options.editable,\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\n\nexport const FocusEvents = Extension.create({\n  name: 'focusEvents',\n\n  addProseMirrorPlugins() {\n    const { editor } = this\n\n    return [\n      new Plugin({\n        key: new PluginKey('focusEvents'),\n        props: {\n          handleDOMEvents: {\n            focus: (view, event: Event) => {\n              editor.isFocused = true\n\n              const transaction = editor.state.tr\n                .setMeta('focus', { event })\n                .setMeta('addToHistory', false)\n\n              view.dispatch(transaction)\n\n              return false\n            },\n            blur: (view, event: Event) => {\n              editor.isFocused = false\n\n              const transaction = editor.state.tr\n                .setMeta('blur', { event })\n                .setMeta('addToHistory', false)\n\n              view.dispatch(transaction)\n\n              return false\n            },\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey, Selection } from '@tiptap/pm/state'\n\nimport { CommandManager } from '../CommandManager.js'\nimport { Extension } from '../Extension.js'\nimport { createChainableState } from '../helpers/createChainableState.js'\nimport { isiOS } from '../utilities/isiOS.js'\nimport { isMacOS } from '../utilities/isMacOS.js'\n\nexport const Keymap = Extension.create({\n  name: 'keymap',\n\n  addKeyboardShortcuts() {\n    const handleBackspace = () => this.editor.commands.first(({ commands }) => [\n      () => commands.undoInputRule(),\n\n      // maybe convert first text block node to default node\n      () => commands.command(({ tr }) => {\n        const { selection, doc } = tr\n        const { empty, $anchor } = selection\n        const { pos, parent } = $anchor\n        const $parentPos = $anchor.parent.isTextblock && pos > 0 ? tr.doc.resolve(pos - 1) : $anchor\n        const parentIsIsolating = $parentPos.parent.type.spec.isolating\n\n        const parentPos = $anchor.pos - $anchor.parentOffset\n\n        const isAtStart = (parentIsIsolating && $parentPos.parent.childCount === 1)\n          ? parentPos === $anchor.pos\n          : Selection.atStart(doc).from === pos\n\n        if (\n          !empty\n          || !parent.type.isTextblock\n          || parent.textContent.length\n          || !isAtStart\n          || (isAtStart && $anchor.parent.type.name === 'paragraph') // prevent clearNodes when no nodes to clear, otherwise history stack is appended\n        ) {\n          return false\n        }\n\n        return commands.clearNodes()\n      }),\n\n      () => commands.deleteSelection(),\n      () => commands.joinBackward(),\n      () => commands.selectNodeBackward(),\n    ])\n\n    const handleDelete = () => this.editor.commands.first(({ commands }) => [\n      () => commands.deleteSelection(),\n      () => commands.deleteCurrentNode(),\n      () => commands.joinForward(),\n      () => commands.selectNodeForward(),\n    ])\n\n    const handleEnter = () => this.editor.commands.first(({ commands }) => [\n      () => commands.newlineInCode(),\n      () => commands.createParagraphNear(),\n      () => commands.liftEmptyBlock(),\n      () => commands.splitBlock(),\n    ])\n\n    const baseKeymap = {\n      Enter: handleEnter,\n      'Mod-Enter': () => this.editor.commands.exitCode(),\n      Backspace: handleBackspace,\n      'Mod-Backspace': handleBackspace,\n      'Shift-Backspace': handleBackspace,\n      Delete: handleDelete,\n      'Mod-Delete': handleDelete,\n      'Mod-a': () => this.editor.commands.selectAll(),\n    }\n\n    const pcKeymap = {\n      ...baseKeymap,\n    }\n\n    const macKeymap = {\n      ...baseKeymap,\n      'Ctrl-h': handleBackspace,\n      'Alt-Backspace': handleBackspace,\n      'Ctrl-d': handleDelete,\n      'Ctrl-Alt-Backspace': handleDelete,\n      'Alt-Delete': handleDelete,\n      'Alt-d': handleDelete,\n      'Ctrl-a': () => this.editor.commands.selectTextblockStart(),\n      'Ctrl-e': () => this.editor.commands.selectTextblockEnd(),\n    }\n\n    if (isiOS() || isMacOS()) {\n      return macKeymap\n    }\n\n    return pcKeymap\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      // With this plugin we check if the whole document was selected and deleted.\n      // In this case we will additionally call `clearNodes()` to convert e.g. a heading\n      // to a paragraph if necessary.\n      // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well\n      // with many other commands.\n      new Plugin({\n        key: new PluginKey('clearDocument'),\n        appendTransaction: (transactions, oldState, newState) => {\n          const docChanges = transactions.some(transaction => transaction.docChanged)\n            && !oldState.doc.eq(newState.doc)\n\n          if (!docChanges) {\n            return\n          }\n\n          const { empty, from, to } = oldState.selection\n          const allFrom = Selection.atStart(oldState.doc).from\n          const allEnd = Selection.atEnd(oldState.doc).to\n          const allWasSelected = from === allFrom && to === allEnd\n\n          if (empty || !allWasSelected) {\n            return\n          }\n\n          const isEmpty = newState.doc.textBetween(0, newState.doc.content.size, ' ', ' ').length === 0\n\n          if (!isEmpty) {\n            return\n          }\n\n          const tr = newState.tr\n          const state = createChainableState({\n            state: newState,\n            transaction: tr,\n          })\n          const { commands } = new CommandManager({\n            editor: this.editor,\n            state,\n          })\n\n          commands.clearNodes()\n\n          if (!tr.steps.length) {\n            return\n          }\n\n          return tr\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension.js'\n\nexport const Tabindex = Extension.create({\n  name: 'tabindex',\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('tabindex'),\n        props: {\n          attributes: (): { [name: string]: string; } => (this.editor.isEditable ? { tabindex: '0' } : {}),\n        },\n      }),\n    ]\n  },\n})\n", "import {\n  Fragment, Node, ResolvedPos,\n} from '@tiptap/pm/model'\n\nimport { Editor } from './Editor.js'\nimport { Content, Range } from './types.js'\n\nexport class NodePos {\n  private resolvedPos: ResolvedPos\n\n  private isBlock: boolean\n\n  private editor: Editor\n\n  private get name(): string {\n    return this.node.type.name\n  }\n\n  constructor(pos: ResolvedPos, editor: Editor, isBlock = false, node: Node | null = null) {\n    this.isBlock = isBlock\n    this.resolvedPos = pos\n    this.editor = editor\n    this.currentNode = node\n  }\n\n  private currentNode: Node | null = null\n\n  get node(): Node {\n    return this.currentNode || this.resolvedPos.node()\n  }\n\n  get element(): HTMLElement {\n    return this.editor.view.domAtPos(this.pos).node as HTMLElement\n  }\n\n  public actualDepth: number | null = null\n\n  get depth(): number {\n    return this.actualDepth ?? this.resolvedPos.depth\n  }\n\n  get pos(): number {\n    return this.resolvedPos.pos\n  }\n\n  get content(): Fragment {\n    return this.node.content\n  }\n\n  set content(content: Content) {\n    let from = this.from\n    let to = this.to\n\n    if (this.isBlock) {\n      if (this.content.size === 0) {\n        console.error(`You can’t set content on a block node. Tried to set content on ${this.name} at ${this.pos}`)\n        return\n      }\n\n      from = this.from + 1\n      to = this.to - 1\n    }\n\n    this.editor.commands.insertContentAt({ from, to }, content)\n  }\n\n  get attributes(): { [key: string]: any } {\n    return this.node.attrs\n  }\n\n  get textContent(): string {\n    return this.node.textContent\n  }\n\n  get size(): number {\n    return this.node.nodeSize\n  }\n\n  get from(): number {\n    if (this.isBlock) {\n      return this.pos\n    }\n\n    return this.resolvedPos.start(this.resolvedPos.depth)\n  }\n\n  get range(): Range {\n    return {\n      from: this.from,\n      to: this.to,\n    }\n  }\n\n  get to(): number {\n    if (this.isBlock) {\n      return this.pos + this.size\n    }\n\n    return this.resolvedPos.end(this.resolvedPos.depth) + (this.node.isText ? 0 : 1)\n  }\n\n  get parent(): NodePos | null {\n    if (this.depth === 0) {\n      return null\n    }\n\n    const parentPos = this.resolvedPos.start(this.resolvedPos.depth - 1)\n    const $pos = this.resolvedPos.doc.resolve(parentPos)\n\n    return new NodePos($pos, this.editor)\n  }\n\n  get before(): NodePos | null {\n    let $pos = this.resolvedPos.doc.resolve(this.from - (this.isBlock ? 1 : 2))\n\n    if ($pos.depth !== this.depth) {\n      $pos = this.resolvedPos.doc.resolve(this.from - 3)\n    }\n\n    return new NodePos($pos, this.editor)\n  }\n\n  get after(): NodePos | null {\n    let $pos = this.resolvedPos.doc.resolve(this.to + (this.isBlock ? 2 : 1))\n\n    if ($pos.depth !== this.depth) {\n      $pos = this.resolvedPos.doc.resolve(this.to + 3)\n    }\n\n    return new NodePos($pos, this.editor)\n  }\n\n  get children(): NodePos[] {\n    const children: NodePos[] = []\n\n    this.node.content.forEach((node, offset) => {\n      const isBlock = node.isBlock && !node.isTextblock\n\n      const targetPos = this.pos + offset + 1\n      const $pos = this.resolvedPos.doc.resolve(targetPos)\n\n      if (!isBlock && $pos.depth <= this.depth) {\n        return\n      }\n\n      const childNodePos = new NodePos($pos, this.editor, isBlock, isBlock ? node : null)\n\n      if (isBlock) {\n        childNodePos.actualDepth = this.depth + 1\n      }\n\n      children.push(new NodePos($pos, this.editor, isBlock, isBlock ? node : null))\n    })\n\n    return children\n  }\n\n  get firstChild(): NodePos | null {\n    return this.children[0] || null\n  }\n\n  get lastChild(): NodePos | null {\n    const children = this.children\n\n    return children[children.length - 1] || null\n  }\n\n  closest(selector: string, attributes: { [key: string]: any } = {}): NodePos | null {\n    let node: NodePos | null = null\n    let currentNode = this.parent\n\n    while (currentNode && !node) {\n      if (currentNode.node.type.name === selector) {\n        if (Object.keys(attributes).length > 0) {\n          const nodeAttributes = currentNode.node.attrs\n          const attrKeys = Object.keys(attributes)\n\n          for (let index = 0; index < attrKeys.length; index += 1) {\n            const key = attrKeys[index]\n\n            if (nodeAttributes[key] !== attributes[key]) {\n              break\n            }\n          }\n        } else {\n          node = currentNode\n        }\n      }\n\n      currentNode = currentNode.parent\n    }\n\n    return node\n  }\n\n  querySelector(selector: string, attributes: { [key: string]: any } = {}): NodePos | null {\n    return this.querySelectorAll(selector, attributes, true)[0] || null\n  }\n\n  querySelectorAll(selector: string, attributes: { [key: string]: any } = {}, firstItemOnly = false): NodePos[] {\n    let nodes: NodePos[] = []\n\n    if (!this.children || this.children.length === 0) {\n      return nodes\n    }\n    const attrKeys = Object.keys(attributes)\n\n    /**\n     * Finds all children recursively that match the selector and attributes\n     * If firstItemOnly is true, it will return the first item found\n     */\n    this.children.forEach(childPos => {\n      // If we already found a node and we only want the first item, we dont need to keep going\n      if (firstItemOnly && nodes.length > 0) {\n        return\n      }\n\n      if (childPos.node.type.name === selector) {\n        const doesAllAttributesMatch = attrKeys.every(key => attributes[key] === childPos.node.attrs[key])\n\n        if (doesAllAttributesMatch) {\n          nodes.push(childPos)\n        }\n      }\n\n      // If we already found a node and we only want the first item, we can stop here and skip the recursion\n      if (firstItemOnly && nodes.length > 0) {\n        return\n      }\n\n      nodes = nodes.concat(childPos.querySelectorAll(selector, attributes, firstItemOnly))\n    })\n\n    return nodes\n  }\n\n  setAttribute(attributes: { [key: string]: any }) {\n    const oldSelection = this.editor.state.selection\n\n    this.editor.chain().setTextSelection(this.from).updateAttributes(this.node.type.name, attributes).setTextSelection(oldSelection.from)\n      .run()\n  }\n}\n", "export const style = `.ProseMirror {\n  position: relative;\n}\n\n.ProseMirror {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  white-space: break-spaces;\n  -webkit-font-variant-ligatures: none;\n  font-variant-ligatures: none;\n  font-feature-settings: \"liga\" 0; /* the above doesn't seem to work in Edge */\n}\n\n.ProseMirror [contenteditable=\"false\"] {\n  white-space: normal;\n}\n\n.ProseMirror [contenteditable=\"false\"] [contenteditable=\"true\"] {\n  white-space: pre-wrap;\n}\n\n.ProseMirror pre {\n  white-space: pre-wrap;\n}\n\nimg.ProseMirror-separator {\n  display: inline !important;\n  border: none !important;\n  margin: 0 !important;\n  width: 0 !important;\n  height: 0 !important;\n}\n\n.ProseMirror-gapcursor {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n  margin: 0;\n}\n\n.ProseMirror-gapcursor:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: -2px;\n  width: 20px;\n  border-top: 1px solid black;\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n}\n\n@keyframes ProseMirror-cursor-blink {\n  to {\n    visibility: hidden;\n  }\n}\n\n.ProseMirror-hideselection *::selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection *::-moz-selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection * {\n  caret-color: transparent;\n}\n\n.ProseMirror-focused .ProseMirror-gapcursor {\n  display: block;\n}\n\n.tippy-box[data-animation=fade][data-state=hidden] {\n  opacity: 0\n}`\n", "export function createStyleTag(style: string, nonce?: string, suffix?: string): HTMLStyleElement {\n  const tiptapStyleTag = (<HTMLStyleElement>document.querySelector(`style[data-tiptap-style${suffix ? `-${suffix}` : ''}]`))\n\n  if (tiptapStyleTag !== null) {\n    return tiptapStyleTag\n  }\n\n  const styleNode = document.createElement('style')\n\n  if (nonce) {\n    styleNode.setAttribute('nonce', nonce)\n  }\n\n  styleNode.setAttribute(`data-tiptap-style${suffix ? `-${suffix}` : ''}`, '')\n  styleNode.innerHTML = style\n  document.getElementsByTagName('head')[0].appendChild(styleNode)\n\n  return styleNode\n}\n", "import {\n  MarkType,\n  Node as ProseMirrorNode,\n  NodeType,\n  Schema,\n} from '@tiptap/pm/model'\nimport {\n  EditorState, Plugin, PluginKey, Transaction,\n} from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\n\nimport { CommandManager } from './CommandManager.js'\nimport { EventEmitter } from './EventEmitter.js'\nimport { ExtensionManager } from './ExtensionManager.js'\nimport {\n  ClipboardTextSerializer, Commands, Editable, FocusEvents, Keymap, Tabindex,\n} from './extensions/index.js'\nimport { createDocument } from './helpers/createDocument.js'\nimport { getAttributes } from './helpers/getAttributes.js'\nimport { getHTMLFromFragment } from './helpers/getHTMLFromFragment.js'\nimport { getText } from './helpers/getText.js'\nimport { getTextSerializersFromSchema } from './helpers/getTextSerializersFromSchema.js'\nimport { isActive } from './helpers/isActive.js'\nimport { isNodeEmpty } from './helpers/isNodeEmpty.js'\nimport { resolveFocusPosition } from './helpers/resolveFocusPosition.js'\nimport { NodePos } from './NodePos.js'\nimport { style } from './style.js'\nimport {\n  CanCommands,\n  ChainedCommands,\n  EditorEvents,\n  EditorOptions,\n  JSONContent,\n  SingleCommands,\n  TextSerializer,\n} from './types.js'\nimport { createStyleTag } from './utilities/createStyleTag.js'\nimport { isFunction } from './utilities/isFunction.js'\n\nexport * as extensions from './extensions/index.js'\n\n// @ts-ignore\nexport interface TiptapEditorHTMLElement extends HTMLElement {\n  editor?: Editor\n}\n\nexport class Editor extends EventEmitter<EditorEvents> {\n  private commandManager!: CommandManager\n\n  public extensionManager!: ExtensionManager\n\n  private css!: HTMLStyleElement\n\n  public schema!: Schema\n\n  public view!: EditorView\n\n  public isFocused = false\n\n  /**\n   * The editor is considered initialized after the `create` event has been emitted.\n   */\n  public isInitialized = false\n\n  public extensionStorage: Record<string, any> = {}\n\n  public options: EditorOptions = {\n    element: document.createElement('div'),\n    content: '',\n    injectCSS: true,\n    injectNonce: undefined,\n    extensions: [],\n    autofocus: false,\n    editable: true,\n    editorProps: {},\n    parseOptions: {},\n    coreExtensionOptions: {},\n    enableInputRules: true,\n    enablePasteRules: true,\n    enableCoreExtensions: true,\n    enableContentCheck: false,\n    onBeforeCreate: () => null,\n    onCreate: () => null,\n    onUpdate: () => null,\n    onSelectionUpdate: () => null,\n    onTransaction: () => null,\n    onFocus: () => null,\n    onBlur: () => null,\n    onDestroy: () => null,\n    onContentError: ({ error }) => { throw error },\n  }\n\n  constructor(options: Partial<EditorOptions> = {}) {\n    super()\n    this.setOptions(options)\n    this.createExtensionManager()\n    this.createCommandManager()\n    this.createSchema()\n    this.on('beforeCreate', this.options.onBeforeCreate)\n    this.emit('beforeCreate', { editor: this })\n    this.on('contentError', this.options.onContentError)\n    this.createView()\n    this.injectCSS()\n    this.on('create', this.options.onCreate)\n    this.on('update', this.options.onUpdate)\n    this.on('selectionUpdate', this.options.onSelectionUpdate)\n    this.on('transaction', this.options.onTransaction)\n    this.on('focus', this.options.onFocus)\n    this.on('blur', this.options.onBlur)\n    this.on('destroy', this.options.onDestroy)\n\n    window.setTimeout(() => {\n      if (this.isDestroyed) {\n        return\n      }\n\n      this.commands.focus(this.options.autofocus)\n      this.emit('create', { editor: this })\n      this.isInitialized = true\n    }, 0)\n  }\n\n  /**\n   * Returns the editor storage.\n   */\n  public get storage(): Record<string, any> {\n    return this.extensionStorage\n  }\n\n  /**\n   * An object of all registered commands.\n   */\n  public get commands(): SingleCommands {\n    return this.commandManager.commands\n  }\n\n  /**\n   * Create a command chain to call multiple commands at once.\n   */\n  public chain(): ChainedCommands {\n    return this.commandManager.chain()\n  }\n\n  /**\n   * Check if a command or a command chain can be executed. Without executing it.\n   */\n  public can(): CanCommands {\n    return this.commandManager.can()\n  }\n\n  /**\n   * Inject CSS styles.\n   */\n  private injectCSS(): void {\n    if (this.options.injectCSS && document) {\n      this.css = createStyleTag(style, this.options.injectNonce)\n    }\n  }\n\n  /**\n   * Update editor options.\n   *\n   * @param options A list of options\n   */\n  public setOptions(options: Partial<EditorOptions> = {}): void {\n    this.options = {\n      ...this.options,\n      ...options,\n    }\n\n    if (!this.view || !this.state || this.isDestroyed) {\n      return\n    }\n\n    if (this.options.editorProps) {\n      this.view.setProps(this.options.editorProps)\n    }\n\n    this.view.updateState(this.state)\n  }\n\n  /**\n   * Update editable state of the editor.\n   */\n  public setEditable(editable: boolean, emitUpdate = true): void {\n    this.setOptions({ editable })\n\n    if (emitUpdate) {\n      this.emit('update', { editor: this, transaction: this.state.tr })\n    }\n  }\n\n  /**\n   * Returns whether the editor is editable.\n   */\n  public get isEditable(): boolean {\n    // since plugins are applied after creating the view\n    // `editable` is always `true` for one tick.\n    // that’s why we also have to check for `options.editable`\n    return this.options.editable && this.view && this.view.editable\n  }\n\n  /**\n   * Returns the editor state.\n   */\n  public get state(): EditorState {\n    return this.view.state\n  }\n\n  /**\n   * Register a ProseMirror plugin.\n   *\n   * @param plugin A ProseMirror plugin\n   * @param handlePlugins Control how to merge the plugin into the existing plugins.\n   */\n  public registerPlugin(\n    plugin: Plugin,\n    handlePlugins?: (newPlugin: Plugin, plugins: Plugin[]) => Plugin[],\n  ): void {\n    const plugins = isFunction(handlePlugins)\n      ? handlePlugins(plugin, [...this.state.plugins])\n      : [...this.state.plugins, plugin]\n\n    const state = this.state.reconfigure({ plugins })\n\n    this.view.updateState(state)\n  }\n\n  /**\n   * Unregister a ProseMirror plugin.\n   *\n   * @param nameOrPluginKey The plugins name\n   */\n  public unregisterPlugin(nameOrPluginKey: string | PluginKey): void {\n    if (this.isDestroyed) {\n      return\n    }\n\n    // @ts-ignore\n    const name = typeof nameOrPluginKey === 'string' ? `${nameOrPluginKey}$` : nameOrPluginKey.key\n\n    const state = this.state.reconfigure({\n      // @ts-ignore\n      plugins: this.state.plugins.filter(plugin => !plugin.key.startsWith(name)),\n    })\n\n    this.view.updateState(state)\n  }\n\n  /**\n   * Creates an extension manager.\n   */\n  private createExtensionManager(): void {\n\n    const coreExtensions = this.options.enableCoreExtensions ? [\n      Editable,\n      ClipboardTextSerializer.configure({\n        blockSeparator: this.options.coreExtensionOptions?.clipboardTextSerializer?.blockSeparator,\n      }),\n      Commands,\n      FocusEvents,\n      Keymap,\n      Tabindex,\n    ] : []\n    const allExtensions = [...coreExtensions, ...this.options.extensions].filter(extension => {\n      return ['extension', 'node', 'mark'].includes(extension?.type)\n    })\n\n    this.extensionManager = new ExtensionManager(allExtensions, this)\n  }\n\n  /**\n   * Creates an command manager.\n   */\n  private createCommandManager(): void {\n    this.commandManager = new CommandManager({\n      editor: this,\n    })\n  }\n\n  /**\n   * Creates a ProseMirror schema.\n   */\n  private createSchema(): void {\n    this.schema = this.extensionManager.schema\n  }\n\n  /**\n   * Creates a ProseMirror view.\n   */\n  private createView(): void {\n    let doc: ProseMirrorNode\n\n    try {\n      doc = createDocument(\n        this.options.content,\n        this.schema,\n        this.options.parseOptions,\n        { errorOnInvalidContent: this.options.enableContentCheck },\n      )\n    } catch (e) {\n      if (!(e instanceof Error) || !['[tiptap error]: Invalid JSON content', '[tiptap error]: Invalid HTML content'].includes(e.message)) {\n        // Not the content error we were expecting\n        throw e\n      }\n      this.emit('contentError', {\n        editor: this,\n        error: e as Error,\n        disableCollaboration: () => {\n          // To avoid syncing back invalid content, reinitialize the extensions without the collaboration extension\n          this.options.extensions = this.options.extensions.filter(extension => extension.name !== 'collaboration')\n\n          // Restart the initialization process by recreating the extension manager with the new set of extensions\n          this.createExtensionManager()\n        },\n      })\n\n      // Content is invalid, but attempt to create it anyway, stripping out the invalid parts\n      doc = createDocument(\n        this.options.content,\n        this.schema,\n        this.options.parseOptions,\n        { errorOnInvalidContent: false },\n      )\n    }\n    const selection = resolveFocusPosition(doc, this.options.autofocus)\n\n    this.view = new EditorView(this.options.element, {\n      ...this.options.editorProps,\n      dispatchTransaction: this.dispatchTransaction.bind(this),\n      state: EditorState.create({\n        doc,\n        selection: selection || undefined,\n      }),\n    })\n\n    // `editor.view` is not yet available at this time.\n    // Therefore we will add all plugins and node views directly afterwards.\n    const newState = this.state.reconfigure({\n      plugins: this.extensionManager.plugins,\n    })\n\n    this.view.updateState(newState)\n\n    this.createNodeViews()\n    this.prependClass()\n\n    // Let’s store the editor instance in the DOM element.\n    // So we’ll have access to it for tests.\n    // @ts-ignore\n    const dom = this.view.dom as TiptapEditorHTMLElement\n\n    dom.editor = this\n  }\n\n  /**\n   * Creates all node views.\n   */\n  public createNodeViews(): void {\n    if (this.view.isDestroyed) {\n      return\n    }\n\n    this.view.setProps({\n      nodeViews: this.extensionManager.nodeViews,\n    })\n  }\n\n  /**\n   * Prepend class name to element.\n   */\n  public prependClass(): void {\n    this.view.dom.className = `tiptap ${this.view.dom.className}`\n  }\n\n  public isCapturingTransaction = false\n\n  private capturedTransaction: Transaction | null = null\n\n  public captureTransaction(fn: Function) {\n    this.isCapturingTransaction = true\n    fn()\n    this.isCapturingTransaction = false\n\n    const tr = this.capturedTransaction\n\n    this.capturedTransaction = null\n\n    return tr\n  }\n\n  /**\n   * The callback over which to send transactions (state updates) produced by the view.\n   *\n   * @param transaction An editor state transaction\n   */\n  private dispatchTransaction(transaction: Transaction): void {\n    // if the editor / the view of the editor was destroyed\n    // the transaction should not be dispatched as there is no view anymore.\n    if (this.view.isDestroyed) {\n      return\n    }\n\n    if (this.isCapturingTransaction) {\n      if (!this.capturedTransaction) {\n        this.capturedTransaction = transaction\n\n        return\n      }\n\n      transaction.steps.forEach(step => this.capturedTransaction?.step(step))\n\n      return\n    }\n\n    const state = this.state.apply(transaction)\n    const selectionHasChanged = !this.state.selection.eq(state.selection)\n\n    this.emit('beforeTransaction', {\n      editor: this,\n      transaction,\n      nextState: state,\n    })\n    this.view.updateState(state)\n    this.emit('transaction', {\n      editor: this,\n      transaction,\n    })\n\n    if (selectionHasChanged) {\n      this.emit('selectionUpdate', {\n        editor: this,\n        transaction,\n      })\n    }\n\n    const focus = transaction.getMeta('focus')\n    const blur = transaction.getMeta('blur')\n\n    if (focus) {\n      this.emit('focus', {\n        editor: this,\n        event: focus.event,\n        transaction,\n      })\n    }\n\n    if (blur) {\n      this.emit('blur', {\n        editor: this,\n        event: blur.event,\n        transaction,\n      })\n    }\n\n    if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n      return\n    }\n\n    this.emit('update', {\n      editor: this,\n      transaction,\n    })\n  }\n\n  /**\n   * Get attributes of the currently selected node or mark.\n   */\n  public getAttributes(nameOrType: string | NodeType | MarkType): Record<string, any> {\n    return getAttributes(this.state, nameOrType)\n  }\n\n  /**\n   * Returns if the currently selected node or mark is active.\n   *\n   * @param name Name of the node or mark\n   * @param attributes Attributes of the node or mark\n   */\n  public isActive(name: string, attributes?: {}): boolean\n  public isActive(attributes: {}): boolean\n  public isActive(nameOrAttributes: string, attributesOrUndefined?: {}): boolean {\n    const name = typeof nameOrAttributes === 'string' ? nameOrAttributes : null\n\n    const attributes = typeof nameOrAttributes === 'string' ? attributesOrUndefined : nameOrAttributes\n\n    return isActive(this.state, name, attributes)\n  }\n\n  /**\n   * Get the document as JSON.\n   */\n  public getJSON(): JSONContent {\n    return this.state.doc.toJSON()\n  }\n\n  /**\n   * Get the document as HTML.\n   */\n  public getHTML(): string {\n    return getHTMLFromFragment(this.state.doc.content, this.schema)\n  }\n\n  /**\n   * Get the document as text.\n   */\n  public getText(options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  }): string {\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n\n    return getText(this.state.doc, {\n      blockSeparator,\n      textSerializers: {\n        ...getTextSerializersFromSchema(this.schema),\n        ...textSerializers,\n      },\n    })\n  }\n\n  /**\n   * Check if there is no content.\n   */\n  public get isEmpty(): boolean {\n    return isNodeEmpty(this.state.doc)\n  }\n\n  /**\n   * Get the number of characters for the current document.\n   *\n   * @deprecated\n   */\n  public getCharacterCount(): number {\n    console.warn(\n      '[tiptap warn]: \"editor.getCharacterCount()\" is deprecated. Please use \"editor.storage.characterCount.characters()\" instead.',\n    )\n\n    return this.state.doc.content.size - 2\n  }\n\n  /**\n   * Destroy the editor.\n   */\n  public destroy(): void {\n    this.emit('destroy')\n\n    if (this.view) {\n      this.view.destroy()\n    }\n\n    this.removeAllListeners()\n  }\n\n  /**\n   * Check if the editor is already destroyed.\n   */\n  public get isDestroyed(): boolean {\n    // @ts-ignore\n    return !this.view?.docView\n  }\n\n  public $node(selector: string, attributes?: { [key: string]: any }): NodePos | null {\n    return this.$doc?.querySelector(selector, attributes) || null\n  }\n\n  public $nodes(selector: string, attributes?: { [key: string]: any }): NodePos[] | null {\n    return this.$doc?.querySelectorAll(selector, attributes) || null\n  }\n\n  public $pos(pos: number) {\n    const $pos = this.state.doc.resolve(pos)\n\n    return new NodePos($pos, this)\n  }\n\n  get $doc() {\n    return this.$pos(0)\n  }\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarksBetween } from '../helpers/getMarksBetween.js'\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule that adds a mark when the\n * matched text is typed into it.\n * @see https://tiptap.dev/guide/custom-extensions/#input-rules\n */\nexport function markInputRule(config: {\n  find: InputRuleFinder\n  type: MarkType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      const { tr } = state\n      const captureGroup = match[match.length - 1]\n      const fullMatch = match[0]\n\n      if (captureGroup) {\n        const startSpaces = fullMatch.search(/\\S/)\n        const textStart = range.from + fullMatch.indexOf(captureGroup)\n        const textEnd = textStart + captureGroup.length\n\n        const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n          .filter(item => {\n            // @ts-ignore\n            const excluded = item.mark.type.excluded as MarkType[]\n\n            return excluded.find(type => type === config.type && type !== item.mark.type)\n          })\n          .filter(item => item.to > textStart)\n\n        if (excludedMarks.length) {\n          return null\n        }\n\n        if (textEnd < range.to) {\n          tr.delete(textEnd, range.to)\n        }\n\n        if (textStart > range.from) {\n          tr.delete(range.from + startSpaces, textStart)\n        }\n\n        const markEnd = range.from + startSpaces + captureGroup.length\n\n        tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}))\n\n        tr.removeStoredMark(config.type)\n      }\n    },\n  })\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule that adds a node when the\n * matched text is typed into it.\n * @see https://tiptap.dev/guide/custom-extensions/#input-rules\n */\nexport function nodeInputRule(config: {\n  /**\n   * The regex to match.\n   */\n  find: InputRuleFinder\n\n  /**\n   * The node type to add.\n   */\n  type: NodeType\n\n  /**\n   * A function that returns the attributes for the node\n   * can also be an object of attributes\n   */\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n      const { tr } = state\n      const start = range.from\n      let end = range.to\n\n      const newNode = config.type.create(attributes)\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n        let matchStart = start + offset\n\n        if (matchStart > end) {\n          matchStart = end\n        } else {\n          end = matchStart + match[1].length\n        }\n\n        // insert last typed character\n        const lastChar = match[0][match[0].length - 1]\n\n        tr.insertText(lastChar, start + match[0].length - 1)\n\n        // insert node from input rule\n        tr.replaceWith(matchStart, end, newNode)\n      } else if (match[0]) {\n        const insertionStart = config.type.isInline ? start : start - 1\n\n        tr.insert(insertionStart, config.type.create(attributes)).delete(\n          tr.mapping.map(start),\n          tr.mapping.map(end),\n        )\n      }\n\n      tr.scrollIntoView()\n    },\n  })\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule that changes the type of a textblock when the\n * matched text is typed into it. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n * @see https://tiptap.dev/guide/custom-extensions/#input-rules\n */\nexport function textblockTypeInputRule(config: {\n  find: InputRuleFinder\n  type: NodeType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const $start = state.doc.resolve(range.from)\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n\n      if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), config.type)) {\n        return null\n      }\n\n      state.tr\n        .delete(range.from, range.to)\n        .setBlockType(range.from, range.from, config.type, attributes)\n    },\n  })\n}\n", "import { InputRule, InputRuleFinder } from '../InputRule.js'\n\n/**\n * Build an input rule that replaces text when the\n * matched text is typed into it.\n * @see https://tiptap.dev/guide/custom-extensions/#input-rules\n */\nexport function textInputRule(config: {\n  find: InputRuleFinder,\n  replace: string,\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      let insert = config.replace\n      let start = range.from\n      const end = range.to\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n\n        insert += match[0].slice(offset + match[1].length)\n        start += offset\n\n        const cutOff = start - end\n\n        if (cutOff > 0) {\n          insert = match[0].slice(offset - cutOff, offset) + insert\n          start = end\n        }\n      }\n\n      state.tr.insertText(insert, start, end)\n    },\n  })\n}\n", "import { Node as ProseMirrorNode, NodeType } from '@tiptap/pm/model'\nimport { canJoin, findWrapping } from '@tiptap/pm/transform'\n\nimport { Editor } from '../Editor.js'\nimport { InputRule, InputRuleFinder } from '../InputRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an input rule for automatically wrapping a textblock when a\n * given string is typed. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n *\n * `type` is the type of node to wrap in.\n *\n * By default, if there’s a node with the same type above the newly\n * wrapped node, the rule will try to join those\n * two nodes. You can pass a join predicate, which takes a regular\n * expression match and the node before the wrapped node, and can\n * return a boolean to indicate whether a join should happen.\n * @see https://tiptap.dev/guide/custom-extensions/#input-rules\n */\nexport function wrappingInputRule(config: {\n  find: InputRuleFinder,\n  type: NodeType,\n  keepMarks?: boolean,\n  keepAttributes?: boolean,\n  editor?: Editor\n  getAttributes?:\n  | Record<string, any>\n  | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n  | false\n  | null\n  ,\n  joinPredicate?: (match: ExtendedRegExpMatchArray, node: ProseMirrorNode) => boolean,\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({\n      state, range, match, chain,\n    }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n      const tr = state.tr.delete(range.from, range.to)\n      const $start = tr.doc.resolve(range.from)\n      const blockRange = $start.blockRange()\n      const wrapping = blockRange && findWrapping(blockRange, config.type, attributes)\n\n      if (!wrapping) {\n        return null\n      }\n\n      tr.wrap(blockRange, wrapping)\n\n      if (config.keepMarks && config.editor) {\n        const { selection, storedMarks } = state\n        const { splittableMarks } = config.editor.extensionManager\n        const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n        if (marks) {\n          const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n          tr.ensureMarks(filteredMarks)\n        }\n      }\n      if (config.keepAttributes) {\n        /** If the nodeType is `bulletList` or `orderedList` set the `nodeType` as `listItem` */\n        const nodeType = config.type.name === 'bulletList' || config.type.name === 'orderedList' ? 'listItem' : 'taskList'\n\n        chain().updateAttributes(nodeType, attributes).run()\n      }\n\n      const before = tr.doc.resolve(range.from - 1).nodeBefore\n\n      if (\n        before\n        && before.type === config.type\n        && canJoin(tr.doc, range.from - 1)\n        && (!config.joinPredicate || config.joinPredicate(match, before))\n      ) {\n        tr.join(range.from - 1)\n      }\n    },\n  })\n}\n", "import {\n  DOMOutputSpec, Mark as ProseMirrorMark, MarkSpec, MarkType,\n} from '@tiptap/pm/model'\nimport { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { MarkConfig } from './index.js'\nimport { InputRule } from './InputRule.js'\nimport { Node } from './Node.js'\nimport { PasteRule } from './PasteRule.js'\nimport {\n  AnyConfig,\n  Attributes,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  ParentConfig,\n  RawCommands,\n} from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { mergeDeep } from './utilities/mergeDeep.js'\n\ndeclare module '@tiptap/core' {\n  export interface MarkConfig<Options = any, Storage = any> {\n    // @ts-ignore - this is a dynamic key\n    [key: string]: any\n\n    /**\n     * The extension name - this must be unique.\n     * It will be used to identify the extension.\n     *\n     * @example 'myExtension'\n     */\n    name: string\n\n    /**\n     * The priority of your extension. The higher, the earlier it will be called\n     * and will take precedence over other extensions with a lower priority.\n     * @default 100\n     * @example 101\n     */\n    priority?: number\n\n    /**\n     * The default options for this extension.\n     * @example\n     * defaultOptions: {\n     *   myOption: 'foo',\n     *   myOtherOption: 10,\n     * }\n     */\n    defaultOptions?: Options\n\n    /**\n     * This method will add options to this extension\n     * @see https://tiptap.dev/guide/custom-extensions#settings\n     * @example\n     * addOptions() {\n     *  return {\n     *    myOption: 'foo',\n     *    myOtherOption: 10,\n     * }\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<MarkConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * The default storage this extension can save data to.\n     * @see https://tiptap.dev/guide/custom-extensions#storage\n     * @example\n     * defaultStorage: {\n     *   prefetchedUsers: [],\n     *   loading: false,\n     * }\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<MarkConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * This function adds globalAttributes to specific nodes.\n     * @see https://tiptap.dev/guide/custom-extensions#global-attributes\n     * @example\n     * addGlobalAttributes() {\n     *   return [\n     *     {\n             // Extend the following extensions\n     *       types: [\n     *         'heading',\n     *         'paragraph',\n     *       ],\n     *       // … with those attributes\n     *       attributes: {\n     *         textAlign: {\n     *           default: 'left',\n     *           renderHTML: attributes => ({\n     *             style: `text-align: ${attributes.textAlign}`,\n     *           }),\n     *           parseHTML: element => element.style.textAlign || 'left',\n     *         },\n     *       },\n     *     },\n     *   ]\n     * }\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      extensions: (Node | Mark)[]\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes\n\n    /**\n     * This function adds commands to the editor\n     * @see https://tiptap.dev/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addCommands() {\n     *   return {\n     *     myCommand: () => ({ chain }) => chain().setMark('type', 'foo').run(),\n     *   }\n     * }\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * This function registers keyboard shortcuts.\n     * @see https://tiptap.dev/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addKeyboardShortcuts() {\n     *   return {\n     *     'Mod-l': () => this.editor.commands.toggleBulletList(),\n     *   }\n     * },\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * This function adds input rules to the editor.\n     * @see https://tiptap.dev/guide/custom-extensions#input-rules\n     * @example\n     * addInputRules() {\n     *   return [\n     *     markInputRule({\n     *       find: inputRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * This function adds paste rules to the editor.\n     * @see https://tiptap.dev/guide/custom-extensions#paste-rules\n     * @example\n     * addPasteRules() {\n     *   return [\n     *     markPasteRule({\n     *       find: pasteRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * This function adds Prosemirror plugins to the editor\n     * @see https://tiptap.dev/guide/custom-extensions#prosemirror-plugins\n     * @example\n     * addProseMirrorPlugins() {\n     *   return [\n     *     customPlugin(),\n     *   ]\n     * }\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * This function adds additional extensions to the editor. This is useful for\n     * building extension kits.\n     * @example\n     * addExtensions() {\n     *   return [\n     *     BulletList,\n     *     OrderedList,\n     *     ListItem\n     *   ]\n     * }\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * This function extends the schema of the node.\n     * @example\n     * extendNodeSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * This function extends the schema of the mark.\n     * @example\n     * extendMarkSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['extendMarkSchema']\n          },\n          extension: Mark,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            editor: Editor\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn’t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n\n    /**\n     * Keep mark after split node\n     */\n    keepOnSplit?: boolean | (() => boolean)\n\n    /**\n     * Inclusive\n     */\n    inclusive?:\n      | MarkSpec['inclusive']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['inclusive']\n          editor?: Editor\n        }) => MarkSpec['inclusive'])\n\n    /**\n     * Excludes\n     */\n    excludes?:\n      | MarkSpec['excludes']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['excludes']\n          editor?: Editor\n        }) => MarkSpec['excludes'])\n\n    /**\n     * Marks this Mark as exitable\n     */\n    exitable?: boolean | (() => boolean)\n\n    /**\n     * Group\n     */\n    group?:\n      | MarkSpec['group']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['group']\n          editor?: Editor\n        }) => MarkSpec['group'])\n\n    /**\n     * Spanning\n     */\n    spanning?:\n      | MarkSpec['spanning']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['spanning']\n          editor?: Editor\n        }) => MarkSpec['spanning'])\n\n    /**\n     * Code\n     */\n    code?:\n      | boolean\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['code']\n          editor?: Editor\n        }) => boolean)\n\n    /**\n     * Parse HTML\n     */\n    parseHTML?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['parseHTML']\n      editor?: Editor\n    }) => MarkSpec['parseDOM']\n\n    /**\n     * Render HTML\n     */\n    renderHTML?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['renderHTML']\n            editor?: Editor\n          },\n          props: {\n            mark: ProseMirrorMark\n            HTMLAttributes: Record<string, any>\n          },\n        ) => DOMOutputSpec)\n      | null\n\n    /**\n     * Attributes\n     */\n    addAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addAttributes']\n      editor?: Editor\n    }) => Attributes | {}\n  }\n}\n\n/**\n * The Mark class is used to create custom mark extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nexport class Mark<Options = any, Storage = any> {\n  type = 'mark'\n\n  name = 'mark'\n\n  parent: Mark | null = null\n\n  child: Mark | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: MarkConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<MarkConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<MarkConfig<O, S>> = {}) {\n    return new Mark<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend<Options, Storage>({\n      ...this.config,\n      addOptions: () => {\n        return mergeDeep(this.options as Record<string, any>, options) as Options\n      },\n    })\n\n    // Always preserve the current name\n    extension.name = this.name\n    // Set the parent to be our parent\n    extension.parent = this.parent\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<MarkConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Mark<ExtendedOptions, ExtendedStorage>(extendedConfig)\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  static handleExit({ editor, mark }: { editor: Editor; mark: Mark }) {\n    const { tr } = editor.state\n    const currentPos = editor.state.selection.$from\n    const isAtEnd = currentPos.pos === currentPos.end()\n\n    if (isAtEnd) {\n      const currentMarks = currentPos.marks()\n      const isInMark = !!currentMarks.find(m => m?.type.name === mark.name)\n\n      if (!isInMark) {\n        return false\n      }\n\n      const removeMark = currentMarks.find(m => m?.type.name === mark.name)\n\n      if (removeMark) {\n        tr.removeStoredMark(removeMark)\n      }\n      tr.insertText(' ', currentPos.pos)\n\n      editor.view.dispatch(tr)\n\n      return true\n    }\n\n    return false\n  }\n}\n", "import {\n  DOMOutputSpec, Node as ProseMirrorNode, NodeSpec, NodeType,\n} from '@tiptap/pm/model'\nimport { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor.js'\nimport { getExtensionField } from './helpers/getExtensionField.js'\nimport { NodeConfig } from './index.js'\nimport { InputRule } from './InputRule.js'\nimport { Mark } from './Mark.js'\nimport { PasteRule } from './PasteRule.js'\nimport {\n  AnyConfig,\n  Attributes,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  NodeViewRenderer,\n  ParentConfig,\n  RawCommands,\n} from './types.js'\nimport { callOrReturn } from './utilities/callOrReturn.js'\nimport { mergeDeep } from './utilities/mergeDeep.js'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options = any, Storage = any> {\n    // @ts-ignore - this is a dynamic key\n    [key: string]: any\n\n    /**\n     * The extension name - this must be unique.\n     * It will be used to identify the extension.\n     *\n     * @example 'myExtension'\n     */\n    name: string\n\n    /**\n     * The priority of your extension. The higher, the earlier it will be called\n     * and will take precedence over other extensions with a lower priority.\n     * @default 100\n     * @example 101\n     */\n    priority?: number\n\n    /**\n     * The default options for this extension.\n     * @example\n     * defaultOptions: {\n     *   myOption: 'foo',\n     *   myOtherOption: 10,\n     * }\n     */\n    defaultOptions?: Options\n\n    /**\n     * This method will add options to this extension\n     * @see https://tiptap.dev/guide/custom-extensions#settings\n     * @example\n     * addOptions() {\n     *  return {\n     *    myOption: 'foo',\n     *    myOtherOption: 10,\n     * }\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<NodeConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * The default storage this extension can save data to.\n     * @see https://tiptap.dev/guide/custom-extensions#storage\n     * @example\n     * defaultStorage: {\n     *   prefetchedUsers: [],\n     *   loading: false,\n     * }\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<NodeConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * This function adds globalAttributes to specific nodes.\n     * @see https://tiptap.dev/guide/custom-extensions#global-attributes\n     * @example\n     * addGlobalAttributes() {\n     *   return [\n     *     {\n             // Extend the following extensions\n     *       types: [\n     *         'heading',\n     *         'paragraph',\n     *       ],\n     *       // … with those attributes\n     *       attributes: {\n     *         textAlign: {\n     *           default: 'left',\n     *           renderHTML: attributes => ({\n     *             style: `text-align: ${attributes.textAlign}`,\n     *           }),\n     *           parseHTML: element => element.style.textAlign || 'left',\n     *         },\n     *       },\n     *     },\n     *   ]\n     * }\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      extensions: (Node | Mark)[]\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes\n\n    /**\n     * This function adds commands to the editor\n     * @see https://tiptap.dev/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addCommands() {\n     *   return {\n     *     myCommand: () => ({ chain }) => chain().setMark('type', 'foo').run(),\n     *   }\n     * }\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * This function registers keyboard shortcuts.\n     * @see https://tiptap.dev/guide/custom-extensions#keyboard-shortcuts\n     * @example\n     * addKeyboardShortcuts() {\n     *   return {\n     *     'Mod-l': () => this.editor.commands.toggleBulletList(),\n     *   }\n     * },\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * This function adds input rules to the editor.\n     * @see https://tiptap.dev/guide/custom-extensions#input-rules\n     * @example\n     * addInputRules() {\n     *   return [\n     *     markInputRule({\n     *       find: inputRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * This function adds paste rules to the editor.\n     * @see https://tiptap.dev/guide/custom-extensions#paste-rules\n     * @example\n     * addPasteRules() {\n     *   return [\n     *     markPasteRule({\n     *       find: pasteRegex,\n     *       type: this.type,\n     *     }),\n     *   ]\n     * },\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * This function adds Prosemirror plugins to the editor\n     * @see https://tiptap.dev/guide/custom-extensions#prosemirror-plugins\n     * @example\n     * addProseMirrorPlugins() {\n     *   return [\n     *     customPlugin(),\n     *   ]\n     * }\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * This function adds additional extensions to the editor. This is useful for\n     * building extension kits.\n     * @example\n     * addExtensions() {\n     *   return [\n     *     BulletList,\n     *     OrderedList,\n     *     ListItem\n     *   ]\n     * }\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * This function extends the schema of the node.\n     * @example\n     * extendNodeSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * This function extends the schema of the mark.\n     * @example\n     * extendMarkSchema() {\n     *   return {\n     *     group: 'inline',\n     *     selectable: false,\n     *   }\n     * }\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['extendMarkSchema']\n            editor?: Editor\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            editor: Editor\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn’t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n\n    /**\n     * Node View\n     */\n    addNodeView?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['addNodeView']\n        }) => NodeViewRenderer)\n      | null\n\n    /**\n     * Defines if this node should be a top level node (doc)\n     * @default false\n     * @example true\n     */\n    topNode?: boolean\n\n    /**\n     * The content expression for this node, as described in the [schema\n     * guide](/docs/guide/#schema.content_expressions). When not given,\n     * the node does not allow any content.\n     *\n     * You can read more about it on the Prosemirror documentation here\n     * @see https://prosemirror.net/docs/guide/#schema.content_expressions\n     * @default undefined\n     * @example content: 'block+'\n     * @example content: 'headline paragraph block*'\n     */\n    content?:\n      | NodeSpec['content']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['content']\n          editor?: Editor\n        }) => NodeSpec['content'])\n\n    /**\n     * The marks that are allowed inside of this node. May be a\n     * space-separated string referring to mark names or groups, `\"_\"`\n     * to explicitly allow all marks, or `\"\"` to disallow marks. When\n     * not given, nodes with inline content default to allowing all\n     * marks, other nodes default to not allowing marks.\n     *\n     * @example marks: 'strong em'\n     */\n    marks?:\n      | NodeSpec['marks']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['marks']\n          editor?: Editor\n        }) => NodeSpec['marks'])\n\n    /**\n     * The group or space-separated groups to which this node belongs,\n     * which can be referred to in the content expressions for the\n     * schema.\n     *\n     * By default Tiptap uses the groups 'block' and 'inline' for nodes. You\n     * can also use custom groups if you want to group specific nodes together\n     * and handle them in your schema.\n     * @example group: 'block'\n     * @example group: 'inline'\n     * @example group: 'customBlock' // this uses a custom group\n     */\n    group?:\n      | NodeSpec['group']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['group']\n          editor?: Editor\n        }) => NodeSpec['group'])\n\n    /**\n     * Should be set to true for inline nodes. (Implied for text nodes.)\n     */\n    inline?:\n      | NodeSpec['inline']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['inline']\n          editor?: Editor\n        }) => NodeSpec['inline'])\n\n    /**\n     * Can be set to true to indicate that, though this isn't a [leaf\n     * node](https://prosemirror.net/docs/ref/#model.NodeType.isLeaf), it doesn't have directly editable\n     * content and should be treated as a single unit in the view.\n     *\n     * @example atom: true\n     */\n    atom?:\n      | NodeSpec['atom']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['atom']\n          editor?: Editor\n        }) => NodeSpec['atom'])\n\n    /**\n     * Controls whether nodes of this type can be selected as a [node\n     * selection](https://prosemirror.net/docs/ref/#state.NodeSelection). Defaults to true for non-text\n     * nodes.\n     *\n     * @default true\n     * @example selectable: false\n     */\n    selectable?:\n      | NodeSpec['selectable']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['selectable']\n          editor?: Editor\n        }) => NodeSpec['selectable'])\n\n    /**\n     * Determines whether nodes of this type can be dragged without\n     * being selected. Defaults to false.\n     *\n     * @default: false\n     * @example: draggable: true\n     */\n    draggable?:\n      | NodeSpec['draggable']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['draggable']\n          editor?: Editor\n        }) => NodeSpec['draggable'])\n\n    /**\n     * Can be used to indicate that this node contains code, which\n     * causes some commands to behave differently.\n     */\n    code?:\n      | NodeSpec['code']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['code']\n          editor?: Editor\n        }) => NodeSpec['code'])\n\n    /**\n     * Controls way whitespace in this a node is parsed. The default is\n     * `\"normal\"`, which causes the [DOM parser](https://prosemirror.net/docs/ref/#model.DOMParser) to\n     * collapse whitespace in normal mode, and normalize it (replacing\n     * newlines and such with spaces) otherwise. `\"pre\"` causes the\n     * parser to preserve spaces inside the node. When this option isn't\n     * given, but [`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) is true, `whitespace`\n     * will default to `\"pre\"`. Note that this option doesn't influence\n     * the way the node is rendered—that should be handled by `toDOM`\n     * and/or styling.\n     */\n    whitespace?:\n      | NodeSpec['whitespace']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['whitespace']\n          editor?: Editor\n        }) => NodeSpec['whitespace'])\n\n    /**\n     * When enabled, enables both\n     * [`definingAsContext`](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext) and\n     * [`definingForContent`](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n     *\n     * @default false\n     * @example isolating: true\n     */\n    defining?:\n      | NodeSpec['defining']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['defining']\n          editor?: Editor\n        }) => NodeSpec['defining'])\n\n    /**\n     * When enabled (default is false), the sides of nodes of this type\n     * count as boundaries that regular editing operations, like\n     * backspacing or lifting, won't cross. An example of a node that\n     * should probably have this enabled is a table cell.\n     */\n    isolating?:\n      | NodeSpec['isolating']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['isolating']\n          editor?: Editor\n        }) => NodeSpec['isolating'])\n\n    /**\n     * Associates DOM parser information with this node, which can be\n     * used by [`DOMParser.fromSchema`](https://prosemirror.net/docs/ref/#model.DOMParser^fromSchema) to\n     * automatically derive a parser. The `node` field in the rules is\n     * implied (the name of this node will be filled in automatically).\n     * If you supply your own parser, you do not need to also specify\n     * parsing rules in your schema.\n     *\n     * @example parseHTML: [{ tag: 'div', attrs: { 'data-id': 'my-block' } }]\n     */\n    parseHTML?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['parseHTML']\n      editor?: Editor\n    }) => NodeSpec['parseDOM']\n\n    /**\n     * A description of a DOM structure. Can be either a string, which is\n     * interpreted as a text node, a DOM node, which is interpreted as\n     * itself, a `{dom, contentDOM}` object, or an array.\n     *\n     * An array describes a DOM element. The first value in the array\n     * should be a string—the name of the DOM element, optionally prefixed\n     * by a namespace URL and a space. If the second element is plain\n     * object, it is interpreted as a set of attributes for the element.\n     * Any elements after that (including the 2nd if it's not an attribute\n     * object) are interpreted as children of the DOM elements, and must\n     * either be valid `DOMOutputSpec` values, or the number zero.\n     *\n     * The number zero (pronounced “hole”) is used to indicate the place\n     * where a node's child nodes should be inserted. If it occurs in an\n     * output spec, it should be the only child element in its parent\n     * node.\n     *\n     * @example toDOM: ['div[data-id=\"my-block\"]', { class: 'my-block' }, 0]\n     */\n    renderHTML?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['renderHTML']\n            editor?: Editor\n          },\n          props: {\n            node: ProseMirrorNode\n            HTMLAttributes: Record<string, any>\n          },\n        ) => DOMOutputSpec)\n      | null\n\n    /**\n     * renders the node as text\n     * @example renderText: () => 'foo\n     */\n    renderText?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['renderText']\n            editor?: Editor\n          },\n          props: {\n            node: ProseMirrorNode\n            pos: number\n            parent: ProseMirrorNode\n            index: number\n          },\n        ) => string)\n      | null\n\n    /**\n     * Add attributes to the node\n     * @example addAttributes: () => ({ class: 'foo' })\n     */\n    addAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addAttributes']\n      editor?: Editor\n    }) => Attributes | {}\n  }\n}\n\n/**\n * The Node class is used to create custom node extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nexport class Node<Options = any, Storage = any> {\n  type = 'node'\n\n  name = 'node'\n\n  parent: Node | null = null\n\n  child: Node | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: NodeConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<NodeConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<NodeConfig<O, S>> = {}) {\n    return new Node<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend<Options, Storage>({\n      ...this.config,\n      addOptions: () => {\n        return mergeDeep(this.options as Record<string, any>, options) as Options\n      },\n    })\n\n    // Always preserve the current name\n    extension.name = this.name\n    // Set the parent to be our parent\n    extension.parent = this.parent\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<NodeConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Node<ExtendedOptions, ExtendedStorage>(extendedConfig)\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n}\n", "export function isAndroid(): boolean {\n  return navigator.platform === 'Android' || /android/i.test(navigator.userAgent)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { NodeSelection } from '@tiptap/pm/state'\nimport { NodeView as ProseMirrorNodeView } from '@tiptap/pm/view'\n\nimport { Editor as CoreEditor } from './Editor.js'\nimport { Node } from './Node.js'\nimport { DecorationWithType, NodeViewRendererOptions, NodeViewRendererProps } from './types.js'\nimport { isAndroid } from './utilities/isAndroid.js'\nimport { isiOS } from './utilities/isiOS.js'\n\n/**\n * Node views are used to customize the rendered DOM structure of a node.\n * @see https://tiptap.dev/guide/node-views\n */\nexport class NodeView<\n  Component,\n  NodeEditor extends CoreEditor = CoreEditor,\n  Options extends NodeViewRendererOptions = NodeViewRendererOptions,\n> implements ProseMirrorNodeView {\n  component: Component\n\n  editor: NodeEditor\n\n  options: Options\n\n  extension: Node\n\n  node: ProseMirrorNode\n\n  decorations: DecorationWithType[]\n\n  getPos: any\n\n  isDragging = false\n\n  constructor(component: Component, props: NodeViewRendererProps, options?: Partial<Options>) {\n    this.component = component\n    this.editor = props.editor as NodeEditor\n    this.options = {\n      stopEvent: null,\n      ignoreMutation: null,\n      ...options,\n    } as Options\n    this.extension = props.extension\n    this.node = props.node\n    this.decorations = props.decorations as DecorationWithType[]\n    this.getPos = props.getPos\n    this.mount()\n  }\n\n  mount() {\n    // eslint-disable-next-line\n    return\n  }\n\n  get dom(): HTMLElement {\n    return this.editor.view.dom as HTMLElement\n  }\n\n  get contentDOM(): HTMLElement | null {\n    return null\n  }\n\n  onDragStart(event: DragEvent) {\n    const { view } = this.editor\n    const target = event.target as HTMLElement\n\n    // get the drag handle element\n    // `closest` is not available for text nodes so we may have to use its parent\n    const dragHandle = target.nodeType === 3\n      ? target.parentElement?.closest('[data-drag-handle]')\n      : target.closest('[data-drag-handle]')\n\n    if (!this.dom || this.contentDOM?.contains(target) || !dragHandle) {\n      return\n    }\n\n    let x = 0\n    let y = 0\n\n    // calculate offset for drag element if we use a different drag handle element\n    if (this.dom !== dragHandle) {\n      const domBox = this.dom.getBoundingClientRect()\n      const handleBox = dragHandle.getBoundingClientRect()\n\n      // In React, we have to go through nativeEvent to reach offsetX/offsetY.\n      const offsetX = event.offsetX ?? (event as any).nativeEvent?.offsetX\n      const offsetY = event.offsetY ?? (event as any).nativeEvent?.offsetY\n\n      x = handleBox.x - domBox.x + offsetX\n      y = handleBox.y - domBox.y + offsetY\n    }\n\n    event.dataTransfer?.setDragImage(this.dom, x, y)\n\n    // we need to tell ProseMirror that we want to move the whole node\n    // so we create a NodeSelection\n    const selection = NodeSelection.create(view.state.doc, this.getPos())\n    const transaction = view.state.tr.setSelection(selection)\n\n    view.dispatch(transaction)\n  }\n\n  stopEvent(event: Event) {\n    if (!this.dom) {\n      return false\n    }\n\n    if (typeof this.options.stopEvent === 'function') {\n      return this.options.stopEvent({ event })\n    }\n\n    const target = event.target as HTMLElement\n    const isInElement = this.dom.contains(target) && !this.contentDOM?.contains(target)\n\n    // any event from child nodes should be handled by ProseMirror\n    if (!isInElement) {\n      return false\n    }\n\n    const isDragEvent = event.type.startsWith('drag')\n    const isDropEvent = event.type === 'drop'\n    const isInput = ['INPUT', 'BUTTON', 'SELECT', 'TEXTAREA'].includes(target.tagName) || target.isContentEditable\n\n    // any input event within node views should be ignored by ProseMirror\n    if (isInput && !isDropEvent && !isDragEvent) {\n      return true\n    }\n\n    const { isEditable } = this.editor\n    const { isDragging } = this\n    const isDraggable = !!this.node.type.spec.draggable\n    const isSelectable = NodeSelection.isSelectable(this.node)\n    const isCopyEvent = event.type === 'copy'\n    const isPasteEvent = event.type === 'paste'\n    const isCutEvent = event.type === 'cut'\n    const isClickEvent = event.type === 'mousedown'\n\n    // ProseMirror tries to drag selectable nodes\n    // even if `draggable` is set to `false`\n    // this fix prevents that\n    if (!isDraggable && isSelectable && isDragEvent) {\n      event.preventDefault()\n    }\n\n    if (isDraggable && isDragEvent && !isDragging) {\n      event.preventDefault()\n      return false\n    }\n\n    // we have to store that dragging started\n    if (isDraggable && isEditable && !isDragging && isClickEvent) {\n      const dragHandle = target.closest('[data-drag-handle]')\n      const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle))\n\n      if (isValidDragHandle) {\n        this.isDragging = true\n\n        document.addEventListener(\n          'dragend',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n\n        document.addEventListener(\n          'drop',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n\n        document.addEventListener(\n          'mouseup',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n      }\n    }\n\n    // these events are handled by prosemirror\n    if (\n      isDragging\n      || isDropEvent\n      || isCopyEvent\n      || isPasteEvent\n      || isCutEvent\n      || (isClickEvent && isSelectable)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  ignoreMutation(mutation: MutationRecord | { type: 'selection'; target: Element }) {\n    if (!this.dom || !this.contentDOM) {\n      return true\n    }\n\n    if (typeof this.options.ignoreMutation === 'function') {\n      return this.options.ignoreMutation({ mutation })\n    }\n\n    // a leaf/atom node is like a black box for ProseMirror\n    // and should be fully handled by the node view\n    if (this.node.isLeaf || this.node.isAtom) {\n      return true\n    }\n\n    // ProseMirror should handle any selections\n    if (mutation.type === 'selection') {\n      return false\n    }\n\n    // try to prevent a bug on iOS and Android that will break node views on enter\n    // this is because ProseMirror can’t preventDispatch on enter\n    // this will lead to a re-render of the node view on enter\n    // see: https://github.com/ueberdosis/tiptap/issues/1214\n    // see: https://github.com/ueberdosis/tiptap/issues/2534\n    if (\n      this.dom.contains(mutation.target)\n      && mutation.type === 'childList'\n      && (isiOS() || isAndroid())\n      && this.editor.isFocused\n    ) {\n      const changedNodes = [\n        ...Array.from(mutation.addedNodes),\n        ...Array.from(mutation.removedNodes),\n      ] as HTMLElement[]\n\n      // we’ll check if every changed node is contentEditable\n      // to make sure it’s probably mutated by ProseMirror\n      if (changedNodes.every(node => node.isContentEditable)) {\n        return false\n      }\n    }\n\n    // we will allow mutation contentDOM with attributes\n    // so we can for example adding classes within our node view\n    if (this.contentDOM === mutation.target && mutation.type === 'attributes') {\n      return true\n    }\n\n    // ProseMirror should handle any changes within contentDOM\n    if (this.contentDOM.contains(mutation.target)) {\n      return false\n    }\n\n    return true\n  }\n\n  updateAttributes(attributes: {}) {\n    this.editor.commands.command(({ tr }) => {\n      const pos = this.getPos()\n\n      tr.setNodeMarkup(pos, undefined, {\n        ...this.node.attrs,\n        ...attributes,\n      })\n\n      return true\n    })\n  }\n\n  deleteNode(): void {\n    const from = this.getPos()\n    const to = from + this.node.nodeSize\n\n    this.editor.commands.deleteRange({ from, to })\n  }\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarksBetween } from '../helpers/getMarksBetween.js'\nimport { PasteRule, PasteRuleFinder } from '../PasteRule.js'\nimport { ExtendedRegExpMatchArray } from '../types.js'\nimport { callOrReturn } from '../utilities/callOrReturn.js'\n\n/**\n * Build an paste rule that adds a mark when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/guide/custom-extensions/#paste-rules\n */\nexport function markPasteRule(config: {\n  find: PasteRuleFinder\n  type: MarkType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray, event: ClipboardEvent) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler: ({\n      state, range, match, pasteEvent,\n    }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      const { tr } = state\n      const captureGroup = match[match.length - 1]\n      const fullMatch = match[0]\n      let markEnd = range.to\n\n      if (captureGroup) {\n        const startSpaces = fullMatch.search(/\\S/)\n        const textStart = range.from + fullMatch.indexOf(captureGroup)\n        const textEnd = textStart + captureGroup.length\n\n        const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n          .filter(item => {\n            // @ts-ignore\n            const excluded = item.mark.type.excluded as MarkType[]\n\n            return excluded.find(type => type === config.type && type !== item.mark.type)\n          })\n          .filter(item => item.to > textStart)\n\n        if (excludedMarks.length) {\n          return null\n        }\n\n        if (textEnd < range.to) {\n          tr.delete(textEnd, range.to)\n        }\n\n        if (textStart > range.from) {\n          tr.delete(range.from + startSpaces, textStart)\n        }\n\n        markEnd = range.from + startSpaces + captureGroup.length\n\n        tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}))\n\n        tr.removeStoredMark(config.type)\n      }\n    },\n  })\n}\n", "// source: https://stackoverflow.com/a/6969486\nexport function escapeForRegEx(string: string): string {\n  return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n}\n", "export function isString(value: any): value is string {\n  return typeof value === 'string'\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { PasteRule, PasteRuleFinder } from '../PasteRule.js'\nimport { ExtendedRegExpMatchArray, JSONContent } from '../types.js'\nimport { callOrReturn } from '../utilities/index.js'\n\n/**\n * Build an paste rule that adds a node when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/guide/custom-extensions/#paste-rules\n */\nexport function nodePasteRule(config: {\n  find: PasteRuleFinder\n  type: NodeType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray, event: ClipboardEvent) => Record<string, any>)\n    | false\n    | null\n  getContent?:\n    | JSONContent[]\n    | ((attrs: Record<string, any>) => JSONContent[])\n    | false\n    | null\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler({\n      match, chain, range, pasteEvent,\n    }) {\n      const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent)\n      const content = callOrReturn(config.getContent, undefined, attributes)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      const node = { type: config.type.name, attrs: attributes } as JSONContent\n\n      if (content) {\n        node.content = content\n      }\n\n      if (match.input) {\n        chain().deleteRange(range).insertContentAt(range.from, node)\n      }\n    },\n  })\n}\n", "import { PasteRule, PasteRuleFinder } from '../PasteRule.js'\n\n/**\n * Build an paste rule that replaces text when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/guide/custom-extensions/#paste-rules\n */\nexport function textPasteRule(config: {\n  find: PasteRuleFinder,\n  replace: string,\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      let insert = config.replace\n      let start = range.from\n      const end = range.to\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n\n        insert += match[0].slice(offset + match[1].length)\n        start += offset\n\n        const cutOff = start - end\n\n        if (cutOff > 0) {\n          insert = match[0].slice(offset - cutOff, offset) + insert\n          start = end\n        }\n      }\n\n      state.tr.insertText(insert, start, end)\n    },\n  })\n}\n", "import { Transaction } from '@tiptap/pm/state'\n\nexport interface TrackerResult {\n  position: number\n  deleted: boolean\n}\n\nexport class Tracker {\n  transaction: Transaction\n\n  currentStep: number\n\n  constructor(transaction: Transaction) {\n    this.transaction = transaction\n    this.currentStep = this.transaction.steps.length\n  }\n\n  map(position: number): TrackerResult {\n    let deleted = false\n\n    const mappedPosition = this.transaction.steps\n      .slice(this.currentStep)\n      .reduce((newPosition, step) => {\n        const mapResult = step.getMap().mapResult(newPosition)\n\n        if (mapResult.deleted) {\n          deleted = true\n        }\n\n        return mapResult.pos\n      }, position)\n\n    return {\n      position: mappedPosition,\n      deleted,\n    }\n  }\n}\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface BoldOptions {\n  /**\n   * HTML attributes to add to the bold element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bold: {\n      /**\n       * Set a bold mark\n       */\n      setBold: () => ReturnType,\n      /**\n       * Toggle a bold mark\n       */\n      toggleBold: () => ReturnType,\n      /**\n       * Unset a bold mark\n       */\n      unsetBold: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches bold text via `**` as input.\n */\nexport const starInputRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))$/\n\n/**\n * Matches bold text via `**` while pasting.\n */\nexport const starPasteRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))/g\n\n/**\n * Matches bold text via `__` as input.\n */\nexport const underscoreInputRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))$/\n\n/**\n * Matches bold text via `__` while pasting.\n */\nexport const underscorePasteRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))/g\n\n/**\n * This extension allows you to mark text as bold.\n * @see https://tiptap.dev/api/marks/bold\n */\nexport const Bold = Mark.create<BoldOptions>({\n  name: 'bold',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'strong',\n      },\n      {\n        tag: 'b',\n        getAttrs: node => (node as HTMLElement).style.fontWeight !== 'normal' && null,\n      },\n      {\n        style: 'font-weight',\n        getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value as string) && null,\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBold: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleBold: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetBold: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-b': () => this.editor.commands.toggleBold(),\n      'Mod-B': () => this.editor.commands.toggleBold(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface CodeOptions {\n  /**\n   * The HTML attributes applied to the code element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    code: {\n      /**\n       * Set a code mark\n       */\n      setCode: () => ReturnType,\n      /**\n       * Toggle inline code\n       */\n      toggleCode: () => ReturnType,\n      /**\n       * Unset a code mark\n       */\n      unsetCode: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches inline code.\n */\nexport const inputRegex = /(?:^|\\s)(`(?!\\s+`)((?:[^`]+))`(?!\\s+`))$/\n\n/**\n * Matches inline code while pasting.\n */\nexport const pasteRegex = /(?:^|\\s)(`(?!\\s+`)((?:[^`]+))`(?!\\s+`))/g\n\n/**\n * This extension allows you to mark text as inline code.\n * @see https://tiptap.dev/api/marks/code\n */\nexport const Code = Mark.create<CodeOptions>({\n  name: 'code',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  excludes: '_',\n\n  code: true,\n\n  exitable: true,\n\n  parseHTML() {\n    return [\n      { tag: 'code' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setCode: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleCode: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetCode: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-e': () => this.editor.commands.toggleCode(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface ItalicOptions {\n  /**\n   * HTML attributes to add to the italic element.\n   * @default {}\n   * @example { class: 'foo' }\n  */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    italic: {\n      /**\n       * Set an italic mark\n       * @example editor.commands.setItalic()\n       */\n      setItalic: () => ReturnType,\n      /**\n       * Toggle an italic mark\n       * @example editor.commands.toggleItalic()\n       */\n      toggleItalic: () => ReturnType,\n      /**\n       * Unset an italic mark\n       * @example editor.commands.unsetItalic()\n       */\n      unsetItalic: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches an italic to a *italic* on input.\n */\nexport const starInputRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))$/\n\n/**\n * Matches an italic to a *italic* on paste.\n */\nexport const starPasteRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))/g\n\n/**\n * Matches an italic to a _italic_ on input.\n */\nexport const underscoreInputRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))$/\n\n/**\n * Matches an italic to a _italic_ on paste.\n */\nexport const underscorePasteRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))/g\n\n/**\n * This extension allows you to create italic text.\n * @see https://www.tiptap.dev/api/marks/italic\n */\nexport const Italic = Mark.create<ItalicOptions>({\n  name: 'italic',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'em',\n      },\n      {\n        tag: 'i',\n        getAttrs: node => (node as HTMLElement).style.fontStyle !== 'normal' && null,\n      },\n      {\n        style: 'font-style=italic',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setItalic: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleItalic: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetItalic: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-i': () => this.editor.commands.toggleItalic(),\n      'Mod-I': () => this.editor.commands.toggleItalic(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface StrikeOptions {\n  /**\n   * HTML attributes to add to the strike element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    strike: {\n      /**\n       * Set a strike mark\n       * @example editor.commands.setStrike()\n       */\n      setStrike: () => ReturnType,\n      /**\n       * Toggle a strike mark\n       * @example editor.commands.toggleStrike()\n       */\n      toggleStrike: () => ReturnType,\n      /**\n       * Unset a strike mark\n       * @example editor.commands.unsetStrike()\n       */\n      unsetStrike: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches a strike to a ~~strike~~ on input.\n */\nexport const inputRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))$/\n\n/**\n * Matches a strike to a ~~strike~~ on paste.\n */\nexport const pasteRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))/g\n\n/**\n * This extension allows you to create strike text.\n * @see https://www.tiptap.dev/api/marks/strike\n */\nexport const Strike = Mark.create<StrikeOptions>({\n  name: 'strike',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 's',\n      },\n      {\n        tag: 'del',\n      },\n      {\n        tag: 'strike',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('line-through') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setStrike: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleStrike: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetStrike: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-s': () => this.editor.commands.toggleStrike(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { Mark, mergeAttributes } from '@tiptap/core'\n\nexport interface UnderlineOptions {\n  /**\n   * HTML attributes to add to the underline element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    underline: {\n      /**\n       * Set an underline mark\n       * @example editor.commands.setUnderline()\n       */\n      setUnderline: () => ReturnType,\n      /**\n       * Toggle an underline mark\n       * @example editor.commands.toggleUnderline()\n       */\n      toggleUnderline: () => ReturnType,\n      /**\n       * Unset an underline mark\n       * @example editor.commands.unsetUnderline()\n       */\n      unsetUnderline: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to create underline text.\n * @see https://www.tiptap.dev/api/marks/underline\n */\nexport const Underline = Mark.create<UnderlineOptions>({\n  name: 'underline',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'u',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('underline') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['u', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setUnderline: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleUnderline: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetUnderline: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-u': () => this.editor.commands.toggleUnderline(),\n      'Mod-U': () => this.editor.commands.toggleUnderline(),\n    }\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TableCellOptions {\n  /**\n   * The HTML attributes for a table cell node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\n/**\n * This extension allows you to create table cells.\n * @see https://www.tiptap.dev/api/nodes/table-cell\n */\nexport const TableCell = Node.create<TableCellOptions>({\n  name: 'tableCell',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  addAttributes() {\n    return {\n      colspan: {\n        default: 1,\n      },\n      rowspan: {\n        default: 1,\n      },\n      colwidth: {\n        default: null,\n        parseHTML: element => {\n          const colwidth = element.getAttribute('colwidth')\n          const value = colwidth\n            ? [parseInt(colwidth, 10)]\n            : null\n\n          return value\n        },\n      },\n    }\n  },\n\n  tableRole: 'cell',\n\n  isolating: true,\n\n  parseHTML() {\n    return [\n      { tag: 'td' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['td', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TableHeaderOptions {\n  /**\n   * The HTML attributes for a table header node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\n/**\n * This extension allows you to create table headers.\n * @see https://www.tiptap.dev/api/nodes/table-header\n */\nexport const TableHeader = Node.create<TableHeaderOptions>({\n  name: 'tableHeader',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  addAttributes() {\n    return {\n      colspan: {\n        default: 1,\n      },\n      rowspan: {\n        default: 1,\n      },\n      colwidth: {\n        default: null,\n        parseHTML: element => {\n          const colwidth = element.getAttribute('colwidth')\n          const value = colwidth\n            ? [parseInt(colwidth, 10)]\n            : null\n\n          return value\n        },\n      },\n    }\n  },\n\n  tableRole: 'header_cell',\n\n  isolating: true,\n\n  parseHTML() {\n    return [\n      { tag: 'th' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['th', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TableRowOptions {\n  /**\n   * The HTML attributes for a table row node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\n/**\n * This extension allows you to create table rows.\n * @see https://www.tiptap.dev/api/nodes/table-row\n */\nexport const TableRow = Node.create<TableRowOptions>({\n  name: 'tableRow',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: '(tableCell | tableHeader)*',\n\n  tableRole: 'row',\n\n  parseHTML() {\n    return [\n      { tag: 'tr' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['tr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n})\n", "// src/index.ts\nimport { Plugin as Plugin2 } from \"prosemirror-state\";\n\n// src/cellselection.ts\nimport { Fragment, Slice } from \"prosemirror-model\";\nimport {\n  NodeSelection as NodeSelection2,\n  Selection,\n  SelectionRange,\n  TextSelection\n} from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\n// src/tablemap.ts\nvar readFromCache;\nvar addToCache;\nif (typeof WeakMap != \"undefined\") {\n  let cache = /* @__PURE__ */ new WeakMap();\n  readFromCache = (key) => cache.get(key);\n  addToCache = (key, value) => {\n    cache.set(key, value);\n    return value;\n  };\n} else {\n  const cache = [];\n  const cacheSize = 10;\n  let cachePos = 0;\n  readFromCache = (key) => {\n    for (let i = 0; i < cache.length; i += 2)\n      if (cache[i] == key)\n        return cache[i + 1];\n  };\n  addToCache = (key, value) => {\n    if (cachePos == cacheSize)\n      cachePos = 0;\n    cache[cachePos++] = key;\n    return cache[cachePos++] = value;\n  };\n}\nvar TableMap = class {\n  constructor(width, height, map, problems) {\n    this.width = width;\n    this.height = height;\n    this.map = map;\n    this.problems = problems;\n  }\n  // Find the dimensions of the cell at the given position.\n  findCell(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      const curPos = this.map[i];\n      if (curPos != pos)\n        continue;\n      const left = i % this.width;\n      const top = i / this.width | 0;\n      let right = left + 1;\n      let bottom = top + 1;\n      for (let j = 1; right < this.width && this.map[i + j] == curPos; j++) {\n        right++;\n      }\n      for (let j = 1; bottom < this.height && this.map[i + this.width * j] == curPos; j++) {\n        bottom++;\n      }\n      return { left, top, right, bottom };\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the left side of the cell at the given position.\n  colCount(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      if (this.map[i] == pos) {\n        return i % this.width;\n      }\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the next cell in the given direction, starting from the cell\n  // at `pos`, if any.\n  nextCell(pos, axis, dir) {\n    const { left, right, top, bottom } = this.findCell(pos);\n    if (axis == \"horiz\") {\n      if (dir < 0 ? left == 0 : right == this.width)\n        return null;\n      return this.map[top * this.width + (dir < 0 ? left - 1 : right)];\n    } else {\n      if (dir < 0 ? top == 0 : bottom == this.height)\n        return null;\n      return this.map[left + this.width * (dir < 0 ? top - 1 : bottom)];\n    }\n  }\n  // Get the rectangle spanning the two given cells.\n  rectBetween(a, b) {\n    const {\n      left: leftA,\n      right: rightA,\n      top: topA,\n      bottom: bottomA\n    } = this.findCell(a);\n    const {\n      left: leftB,\n      right: rightB,\n      top: topB,\n      bottom: bottomB\n    } = this.findCell(b);\n    return {\n      left: Math.min(leftA, leftB),\n      top: Math.min(topA, topB),\n      right: Math.max(rightA, rightB),\n      bottom: Math.max(bottomA, bottomB)\n    };\n  }\n  // Return the position of all cells that have the top left corner in\n  // the given rectangle.\n  cellsInRect(rect) {\n    const result = [];\n    const seen = {};\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const index = row * this.width + col;\n        const pos = this.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        if (col == rect.left && col && this.map[index - 1] == pos || row == rect.top && row && this.map[index - this.width] == pos) {\n          continue;\n        }\n        result.push(pos);\n      }\n    }\n    return result;\n  }\n  // Return the position at which the cell at the given row and column\n  // starts, or would start, if a cell started there.\n  positionAt(row, col, table) {\n    for (let i = 0, rowStart = 0; ; i++) {\n      const rowEnd = rowStart + table.child(i).nodeSize;\n      if (i == row) {\n        let index = col + row * this.width;\n        const rowEndIndex = (row + 1) * this.width;\n        while (index < rowEndIndex && this.map[index] < rowStart)\n          index++;\n        return index == rowEndIndex ? rowEnd - 1 : this.map[index];\n      }\n      rowStart = rowEnd;\n    }\n  }\n  // Find the table map for the given table node.\n  static get(table) {\n    return readFromCache(table) || addToCache(table, computeMap(table));\n  }\n};\nfunction computeMap(table) {\n  if (table.type.spec.tableRole != \"table\")\n    throw new RangeError(\"Not a table node: \" + table.type.name);\n  const width = findWidth(table), height = table.childCount;\n  const map = [];\n  let mapPos = 0;\n  let problems = null;\n  const colWidths = [];\n  for (let i = 0, e = width * height; i < e; i++)\n    map[i] = 0;\n  for (let row = 0, pos = 0; row < height; row++) {\n    const rowNode = table.child(row);\n    pos++;\n    for (let i = 0; ; i++) {\n      while (mapPos < map.length && map[mapPos] != 0)\n        mapPos++;\n      if (i == rowNode.childCount)\n        break;\n      const cellNode = rowNode.child(i);\n      const { colspan, rowspan, colwidth } = cellNode.attrs;\n      for (let h = 0; h < rowspan; h++) {\n        if (h + row >= height) {\n          (problems || (problems = [])).push({\n            type: \"overlong_rowspan\",\n            pos,\n            n: rowspan - h\n          });\n          break;\n        }\n        const start = mapPos + h * width;\n        for (let w = 0; w < colspan; w++) {\n          if (map[start + w] == 0)\n            map[start + w] = pos;\n          else\n            (problems || (problems = [])).push({\n              type: \"collision\",\n              row,\n              pos,\n              n: colspan - w\n            });\n          const colW = colwidth && colwidth[w];\n          if (colW) {\n            const widthIndex = (start + w) % width * 2, prev = colWidths[widthIndex];\n            if (prev == null || prev != colW && colWidths[widthIndex + 1] == 1) {\n              colWidths[widthIndex] = colW;\n              colWidths[widthIndex + 1] = 1;\n            } else if (prev == colW) {\n              colWidths[widthIndex + 1]++;\n            }\n          }\n        }\n      }\n      mapPos += colspan;\n      pos += cellNode.nodeSize;\n    }\n    const expectedPos = (row + 1) * width;\n    let missing = 0;\n    while (mapPos < expectedPos)\n      if (map[mapPos++] == 0)\n        missing++;\n    if (missing)\n      (problems || (problems = [])).push({ type: \"missing\", row, n: missing });\n    pos++;\n  }\n  const tableMap = new TableMap(width, height, map, problems);\n  let badWidths = false;\n  for (let i = 0; !badWidths && i < colWidths.length; i += 2)\n    if (colWidths[i] != null && colWidths[i + 1] < height)\n      badWidths = true;\n  if (badWidths)\n    findBadColWidths(tableMap, colWidths, table);\n  return tableMap;\n}\nfunction findWidth(table) {\n  let width = -1;\n  let hasRowSpan = false;\n  for (let row = 0; row < table.childCount; row++) {\n    const rowNode = table.child(row);\n    let rowWidth = 0;\n    if (hasRowSpan)\n      for (let j = 0; j < row; j++) {\n        const prevRow = table.child(j);\n        for (let i = 0; i < prevRow.childCount; i++) {\n          const cell = prevRow.child(i);\n          if (j + cell.attrs.rowspan > row)\n            rowWidth += cell.attrs.colspan;\n        }\n      }\n    for (let i = 0; i < rowNode.childCount; i++) {\n      const cell = rowNode.child(i);\n      rowWidth += cell.attrs.colspan;\n      if (cell.attrs.rowspan > 1)\n        hasRowSpan = true;\n    }\n    if (width == -1)\n      width = rowWidth;\n    else if (width != rowWidth)\n      width = Math.max(width, rowWidth);\n  }\n  return width;\n}\nfunction findBadColWidths(map, colWidths, table) {\n  if (!map.problems)\n    map.problems = [];\n  const seen = {};\n  for (let i = 0; i < map.map.length; i++) {\n    const pos = map.map[i];\n    if (seen[pos])\n      continue;\n    seen[pos] = true;\n    const node = table.nodeAt(pos);\n    if (!node) {\n      throw new RangeError(`No cell with offset ${pos} found`);\n    }\n    let updated = null;\n    const attrs = node.attrs;\n    for (let j = 0; j < attrs.colspan; j++) {\n      const col = (i + j) % map.width;\n      const colWidth = colWidths[col * 2];\n      if (colWidth != null && (!attrs.colwidth || attrs.colwidth[j] != colWidth))\n        (updated || (updated = freshColWidth(attrs)))[j] = colWidth;\n    }\n    if (updated)\n      map.problems.unshift({\n        type: \"colwidth mismatch\",\n        pos,\n        colwidth: updated\n      });\n  }\n}\nfunction freshColWidth(attrs) {\n  if (attrs.colwidth)\n    return attrs.colwidth.slice();\n  const result = [];\n  for (let i = 0; i < attrs.colspan; i++)\n    result.push(0);\n  return result;\n}\n\n// src/util.ts\nimport { PluginKey } from \"prosemirror-state\";\n\n// src/schema.ts\nfunction getCellAttrs(dom, extraAttrs) {\n  if (typeof dom === \"string\") {\n    return {};\n  }\n  const widthAttr = dom.getAttribute(\"data-colwidth\");\n  const widths = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(\",\").map((s) => Number(s)) : null;\n  const colspan = Number(dom.getAttribute(\"colspan\") || 1);\n  const result = {\n    colspan,\n    rowspan: Number(dom.getAttribute(\"rowspan\") || 1),\n    colwidth: widths && widths.length == colspan ? widths : null\n  };\n  for (const prop in extraAttrs) {\n    const getter = extraAttrs[prop].getFromDOM;\n    const value = getter && getter(dom);\n    if (value != null) {\n      result[prop] = value;\n    }\n  }\n  return result;\n}\nfunction setCellAttrs(node, extraAttrs) {\n  const attrs = {};\n  if (node.attrs.colspan != 1)\n    attrs.colspan = node.attrs.colspan;\n  if (node.attrs.rowspan != 1)\n    attrs.rowspan = node.attrs.rowspan;\n  if (node.attrs.colwidth)\n    attrs[\"data-colwidth\"] = node.attrs.colwidth.join(\",\");\n  for (const prop in extraAttrs) {\n    const setter = extraAttrs[prop].setDOMAttr;\n    if (setter)\n      setter(node.attrs[prop], attrs);\n  }\n  return attrs;\n}\nfunction tableNodes(options) {\n  const extraAttrs = options.cellAttributes || {};\n  const cellAttrs = {\n    colspan: { default: 1 },\n    rowspan: { default: 1 },\n    colwidth: { default: null }\n  };\n  for (const prop in extraAttrs)\n    cellAttrs[prop] = { default: extraAttrs[prop].default };\n  return {\n    table: {\n      content: \"table_row+\",\n      tableRole: \"table\",\n      isolating: true,\n      group: options.tableGroup,\n      parseDOM: [{ tag: \"table\" }],\n      toDOM() {\n        return [\"table\", [\"tbody\", 0]];\n      }\n    },\n    table_row: {\n      content: \"(table_cell | table_header)*\",\n      tableRole: \"row\",\n      parseDOM: [{ tag: \"tr\" }],\n      toDOM() {\n        return [\"tr\", 0];\n      }\n    },\n    table_cell: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"td\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"td\", setCellAttrs(node, extraAttrs), 0];\n      }\n    },\n    table_header: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"header_cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"th\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"th\", setCellAttrs(node, extraAttrs), 0];\n      }\n    }\n  };\n}\nfunction tableNodeTypes(schema) {\n  let result = schema.cached.tableNodeTypes;\n  if (!result) {\n    result = schema.cached.tableNodeTypes = {};\n    for (const name in schema.nodes) {\n      const type = schema.nodes[name], role = type.spec.tableRole;\n      if (role)\n        result[role] = type;\n    }\n  }\n  return result;\n}\n\n// src/util.ts\nvar tableEditingKey = new PluginKey(\"selectingCells\");\nfunction cellAround($pos) {\n  for (let d = $pos.depth - 1; d > 0; d--)\n    if ($pos.node(d).type.spec.tableRole == \"row\")\n      return $pos.node(0).resolve($pos.before(d + 1));\n  return null;\n}\nfunction cellWrapping($pos) {\n  for (let d = $pos.depth; d > 0; d--) {\n    const role = $pos.node(d).type.spec.tableRole;\n    if (role === \"cell\" || role === \"header_cell\")\n      return $pos.node(d);\n  }\n  return null;\n}\nfunction isInTable(state) {\n  const $head = state.selection.$head;\n  for (let d = $head.depth; d > 0; d--)\n    if ($head.node(d).type.spec.tableRole == \"row\")\n      return true;\n  return false;\n}\nfunction selectionCell(state) {\n  const sel = state.selection;\n  if (\"$anchorCell\" in sel && sel.$anchorCell) {\n    return sel.$anchorCell.pos > sel.$headCell.pos ? sel.$anchorCell : sel.$headCell;\n  } else if (\"node\" in sel && sel.node && sel.node.type.spec.tableRole == \"cell\") {\n    return sel.$anchor;\n  }\n  const $cell = cellAround(sel.$head) || cellNear(sel.$head);\n  if ($cell) {\n    return $cell;\n  }\n  throw new RangeError(`No cell found around position ${sel.head}`);\n}\nfunction cellNear($pos) {\n  for (let after = $pos.nodeAfter, pos = $pos.pos; after; after = after.firstChild, pos++) {\n    const role = after.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos);\n  }\n  for (let before = $pos.nodeBefore, pos = $pos.pos; before; before = before.lastChild, pos--) {\n    const role = before.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos - before.nodeSize);\n  }\n}\nfunction pointsAtCell($pos) {\n  return $pos.parent.type.spec.tableRole == \"row\" && !!$pos.nodeAfter;\n}\nfunction moveCellForward($pos) {\n  return $pos.node(0).resolve($pos.pos + $pos.nodeAfter.nodeSize);\n}\nfunction inSameTable($cellA, $cellB) {\n  return $cellA.depth == $cellB.depth && $cellA.pos >= $cellB.start(-1) && $cellA.pos <= $cellB.end(-1);\n}\nfunction findCell($pos) {\n  return TableMap.get($pos.node(-1)).findCell($pos.pos - $pos.start(-1));\n}\nfunction colCount($pos) {\n  return TableMap.get($pos.node(-1)).colCount($pos.pos - $pos.start(-1));\n}\nfunction nextCell($pos, axis, dir) {\n  const table = $pos.node(-1);\n  const map = TableMap.get(table);\n  const tableStart = $pos.start(-1);\n  const moved = map.nextCell($pos.pos - tableStart, axis, dir);\n  return moved == null ? null : $pos.node(0).resolve(tableStart + moved);\n}\nfunction removeColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan - n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    result.colwidth.splice(pos, n);\n    if (!result.colwidth.some((w) => w > 0))\n      result.colwidth = null;\n  }\n  return result;\n}\nfunction addColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan + n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    for (let i = 0; i < n; i++)\n      result.colwidth.splice(pos, 0, 0);\n  }\n  return result;\n}\nfunction columnIsHeader(map, table, col) {\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let row = 0; row < map.height; row++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false;\n  return true;\n}\n\n// src/cellselection.ts\nvar CellSelection = class _CellSelection extends Selection {\n  // A table selection is identified by its anchor and head cells. The\n  // positions given to this constructor should point _before_ two\n  // cells in the same table. They may be the same, to select a single\n  // cell.\n  constructor($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const rect = map.rectBetween(\n      $anchorCell.pos - tableStart,\n      $headCell.pos - tableStart\n    );\n    const doc = $anchorCell.node(0);\n    const cells = map.cellsInRect(rect).filter((p) => p != $headCell.pos - tableStart);\n    cells.unshift($headCell.pos - tableStart);\n    const ranges = cells.map((pos) => {\n      const cell = table.nodeAt(pos);\n      if (!cell) {\n        throw RangeError(`No cell with offset ${pos} found`);\n      }\n      const from = tableStart + pos + 1;\n      return new SelectionRange(\n        doc.resolve(from),\n        doc.resolve(from + cell.content.size)\n      );\n    });\n    super(ranges[0].$from, ranges[0].$to, ranges);\n    this.$anchorCell = $anchorCell;\n    this.$headCell = $headCell;\n  }\n  map(doc, mapping) {\n    const $anchorCell = doc.resolve(mapping.map(this.$anchorCell.pos));\n    const $headCell = doc.resolve(mapping.map(this.$headCell.pos));\n    if (pointsAtCell($anchorCell) && pointsAtCell($headCell) && inSameTable($anchorCell, $headCell)) {\n      const tableChanged = this.$anchorCell.node(-1) != $anchorCell.node(-1);\n      if (tableChanged && this.isRowSelection())\n        return _CellSelection.rowSelection($anchorCell, $headCell);\n      else if (tableChanged && this.isColSelection())\n        return _CellSelection.colSelection($anchorCell, $headCell);\n      else\n        return new _CellSelection($anchorCell, $headCell);\n    }\n    return TextSelection.between($anchorCell, $headCell);\n  }\n  // Returns a rectangular slice of table rows containing the selected\n  // cells.\n  content() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const rect = map.rectBetween(\n      this.$anchorCell.pos - tableStart,\n      this.$headCell.pos - tableStart\n    );\n    const seen = {};\n    const rows = [];\n    for (let row = rect.top; row < rect.bottom; row++) {\n      const rowContent = [];\n      for (let index = row * map.width + rect.left, col = rect.left; col < rect.right; col++, index++) {\n        const pos = map.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        const cellRect = map.findCell(pos);\n        let cell = table.nodeAt(pos);\n        if (!cell) {\n          throw RangeError(`No cell with offset ${pos} found`);\n        }\n        const extraLeft = rect.left - cellRect.left;\n        const extraRight = cellRect.right - rect.right;\n        if (extraLeft > 0 || extraRight > 0) {\n          let attrs = cell.attrs;\n          if (extraLeft > 0) {\n            attrs = removeColSpan(attrs, 0, extraLeft);\n          }\n          if (extraRight > 0) {\n            attrs = removeColSpan(\n              attrs,\n              attrs.colspan - extraRight,\n              extraRight\n            );\n          }\n          if (cellRect.left < rect.left) {\n            cell = cell.type.createAndFill(attrs);\n            if (!cell) {\n              throw RangeError(\n                `Could not create cell with attrs ${JSON.stringify(attrs)}`\n              );\n            }\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        if (cellRect.top < rect.top || cellRect.bottom > rect.bottom) {\n          const attrs = {\n            ...cell.attrs,\n            rowspan: Math.min(cellRect.bottom, rect.bottom) - Math.max(cellRect.top, rect.top)\n          };\n          if (cellRect.top < rect.top) {\n            cell = cell.type.createAndFill(attrs);\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        rowContent.push(cell);\n      }\n      rows.push(table.child(row).copy(Fragment.from(rowContent)));\n    }\n    const fragment = this.isColSelection() && this.isRowSelection() ? table : rows;\n    return new Slice(Fragment.from(fragment), 1, 1);\n  }\n  replace(tr, content = Slice.empty) {\n    const mapFrom = tr.steps.length, ranges = this.ranges;\n    for (let i = 0; i < ranges.length; i++) {\n      const { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n      tr.replace(\n        mapping.map($from.pos),\n        mapping.map($to.pos),\n        i ? Slice.empty : content\n      );\n    }\n    const sel = Selection.findFrom(\n      tr.doc.resolve(tr.mapping.slice(mapFrom).map(this.to)),\n      -1\n    );\n    if (sel)\n      tr.setSelection(sel);\n  }\n  replaceWith(tr, node) {\n    this.replace(tr, new Slice(Fragment.from(node), 0, 0));\n  }\n  forEachCell(f) {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const cells = map.cellsInRect(\n      map.rectBetween(\n        this.$anchorCell.pos - tableStart,\n        this.$headCell.pos - tableStart\n      )\n    );\n    for (let i = 0; i < cells.length; i++) {\n      f(table.nodeAt(cells[i]), tableStart + cells[i]);\n    }\n  }\n  // True if this selection goes all the way from the top to the\n  // bottom of the table.\n  isColSelection() {\n    const anchorTop = this.$anchorCell.index(-1);\n    const headTop = this.$headCell.index(-1);\n    if (Math.min(anchorTop, headTop) > 0)\n      return false;\n    const anchorBottom = anchorTop + this.$anchorCell.nodeAfter.attrs.rowspan;\n    const headBottom = headTop + this.$headCell.nodeAfter.attrs.rowspan;\n    return Math.max(anchorBottom, headBottom) == this.$headCell.node(-1).childCount;\n  }\n  // Returns the smallest column selection that covers the given anchor\n  // and head cell.\n  static colSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.top <= headRect.top) {\n      if (anchorRect.top > 0)\n        $anchorCell = doc.resolve(tableStart + map.map[anchorRect.left]);\n      if (headRect.bottom < map.height)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + headRect.right - 1]\n        );\n    } else {\n      if (headRect.top > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.left]);\n      if (anchorRect.bottom < map.height)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + anchorRect.right - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  // True if this selection goes all the way from the left to the\n  // right of the table.\n  isRowSelection() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const anchorLeft = map.colCount(this.$anchorCell.pos - tableStart);\n    const headLeft = map.colCount(this.$headCell.pos - tableStart);\n    if (Math.min(anchorLeft, headLeft) > 0)\n      return false;\n    const anchorRight = anchorLeft + this.$anchorCell.nodeAfter.attrs.colspan;\n    const headRight = headLeft + this.$headCell.nodeAfter.attrs.colspan;\n    return Math.max(anchorRight, headRight) == map.width;\n  }\n  eq(other) {\n    return other instanceof _CellSelection && other.$anchorCell.pos == this.$anchorCell.pos && other.$headCell.pos == this.$headCell.pos;\n  }\n  // Returns the smallest row selection that covers the given anchor\n  // and head cell.\n  static rowSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.left <= headRect.left) {\n      if (anchorRect.left > 0)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[anchorRect.top * map.width]\n        );\n      if (headRect.right < map.width)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (headRect.top + 1) - 1]\n        );\n    } else {\n      if (headRect.left > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.top * map.width]);\n      if (anchorRect.right < map.width)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (anchorRect.top + 1) - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  toJSON() {\n    return {\n      type: \"cell\",\n      anchor: this.$anchorCell.pos,\n      head: this.$headCell.pos\n    };\n  }\n  static fromJSON(doc, json) {\n    return new _CellSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n  }\n  static create(doc, anchorCell, headCell = anchorCell) {\n    return new _CellSelection(doc.resolve(anchorCell), doc.resolve(headCell));\n  }\n  getBookmark() {\n    return new CellBookmark(this.$anchorCell.pos, this.$headCell.pos);\n  }\n};\nCellSelection.prototype.visible = false;\nSelection.jsonID(\"cell\", CellSelection);\nvar CellBookmark = class _CellBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor;\n    this.head = head;\n  }\n  map(mapping) {\n    return new _CellBookmark(mapping.map(this.anchor), mapping.map(this.head));\n  }\n  resolve(doc) {\n    const $anchorCell = doc.resolve(this.anchor), $headCell = doc.resolve(this.head);\n    if ($anchorCell.parent.type.spec.tableRole == \"row\" && $headCell.parent.type.spec.tableRole == \"row\" && $anchorCell.index() < $anchorCell.parent.childCount && $headCell.index() < $headCell.parent.childCount && inSameTable($anchorCell, $headCell))\n      return new CellSelection($anchorCell, $headCell);\n    else\n      return Selection.near($headCell, 1);\n  }\n};\nfunction drawCellSelection(state) {\n  if (!(state.selection instanceof CellSelection))\n    return null;\n  const cells = [];\n  state.selection.forEachCell((node, pos) => {\n    cells.push(\n      Decoration.node(pos, pos + node.nodeSize, { class: \"selectedCell\" })\n    );\n  });\n  return DecorationSet.create(state.doc, cells);\n}\nfunction isCellBoundarySelection({ $from, $to }) {\n  if ($from.pos == $to.pos || $from.pos < $from.pos - 6)\n    return false;\n  let afterFrom = $from.pos;\n  let beforeTo = $to.pos;\n  let depth = $from.depth;\n  for (; depth >= 0; depth--, afterFrom++)\n    if ($from.after(depth + 1) < $from.end(depth))\n      break;\n  for (let d = $to.depth; d >= 0; d--, beforeTo--)\n    if ($to.before(d + 1) > $to.start(d))\n      break;\n  return afterFrom == beforeTo && /row|table/.test($from.node(depth).type.spec.tableRole);\n}\nfunction isTextSelectionAcrossCells({ $from, $to }) {\n  let fromCellBoundaryNode;\n  let toCellBoundaryNode;\n  for (let i = $from.depth; i > 0; i--) {\n    const node = $from.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      fromCellBoundaryNode = node;\n      break;\n    }\n  }\n  for (let i = $to.depth; i > 0; i--) {\n    const node = $to.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      toCellBoundaryNode = node;\n      break;\n    }\n  }\n  return fromCellBoundaryNode !== toCellBoundaryNode && $to.parentOffset === 0;\n}\nfunction normalizeSelection(state, tr, allowTableNodeSelection) {\n  const sel = (tr || state).selection;\n  const doc = (tr || state).doc;\n  let normalize;\n  let role;\n  if (sel instanceof NodeSelection2 && (role = sel.node.type.spec.tableRole)) {\n    if (role == \"cell\" || role == \"header_cell\") {\n      normalize = CellSelection.create(doc, sel.from);\n    } else if (role == \"row\") {\n      const $cell = doc.resolve(sel.from + 1);\n      normalize = CellSelection.rowSelection($cell, $cell);\n    } else if (!allowTableNodeSelection) {\n      const map = TableMap.get(sel.node);\n      const start = sel.from + 1;\n      const lastCell = start + map.map[map.width * map.height - 1];\n      normalize = CellSelection.create(doc, start + 1, lastCell);\n    }\n  } else if (sel instanceof TextSelection && isCellBoundarySelection(sel)) {\n    normalize = TextSelection.create(doc, sel.from);\n  } else if (sel instanceof TextSelection && isTextSelectionAcrossCells(sel)) {\n    normalize = TextSelection.create(doc, sel.$from.start(), sel.$from.end());\n  }\n  if (normalize)\n    (tr || (tr = state.tr)).setSelection(normalize);\n  return tr;\n}\n\n// src/fixtables.ts\nimport { PluginKey as PluginKey2 } from \"prosemirror-state\";\nvar fixTablesKey = new PluginKey2(\"fix-tables\");\nfunction changedDescendants(old, cur, offset, f) {\n  const oldSize = old.childCount, curSize = cur.childCount;\n  outer:\n    for (let i = 0, j = 0; i < curSize; i++) {\n      const child = cur.child(i);\n      for (let scan = j, e = Math.min(oldSize, i + 3); scan < e; scan++) {\n        if (old.child(scan) == child) {\n          j = scan + 1;\n          offset += child.nodeSize;\n          continue outer;\n        }\n      }\n      f(child, offset);\n      if (j < oldSize && old.child(j).sameMarkup(child))\n        changedDescendants(old.child(j), child, offset + 1, f);\n      else\n        child.nodesBetween(0, child.content.size, f, offset + 1);\n      offset += child.nodeSize;\n    }\n}\nfunction fixTables(state, oldState) {\n  let tr;\n  const check = (node, pos) => {\n    if (node.type.spec.tableRole == \"table\")\n      tr = fixTable(state, node, pos, tr);\n  };\n  if (!oldState)\n    state.doc.descendants(check);\n  else if (oldState.doc != state.doc)\n    changedDescendants(oldState.doc, state.doc, 0, check);\n  return tr;\n}\nfunction fixTable(state, table, tablePos, tr) {\n  const map = TableMap.get(table);\n  if (!map.problems)\n    return tr;\n  if (!tr)\n    tr = state.tr;\n  const mustAdd = [];\n  for (let i = 0; i < map.height; i++)\n    mustAdd.push(0);\n  for (let i = 0; i < map.problems.length; i++) {\n    const prob = map.problems[i];\n    if (prob.type == \"collision\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      const attrs = cell.attrs;\n      for (let j = 0; j < attrs.rowspan; j++)\n        mustAdd[prob.row + j] += prob.n;\n      tr.setNodeMarkup(\n        tr.mapping.map(tablePos + 1 + prob.pos),\n        null,\n        removeColSpan(attrs, attrs.colspan - prob.n, prob.n)\n      );\n    } else if (prob.type == \"missing\") {\n      mustAdd[prob.row] += prob.n;\n    } else if (prob.type == \"overlong_rowspan\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        rowspan: cell.attrs.rowspan - prob.n\n      });\n    } else if (prob.type == \"colwidth mismatch\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        colwidth: prob.colwidth\n      });\n    }\n  }\n  let first, last;\n  for (let i = 0; i < mustAdd.length; i++)\n    if (mustAdd[i]) {\n      if (first == null)\n        first = i;\n      last = i;\n    }\n  for (let i = 0, pos = tablePos + 1; i < map.height; i++) {\n    const row = table.child(i);\n    const end = pos + row.nodeSize;\n    const add = mustAdd[i];\n    if (add > 0) {\n      let role = \"cell\";\n      if (row.firstChild) {\n        role = row.firstChild.type.spec.tableRole;\n      }\n      const nodes = [];\n      for (let j = 0; j < add; j++) {\n        const node = tableNodeTypes(state.schema)[role].createAndFill();\n        if (node)\n          nodes.push(node);\n      }\n      const side = (i == 0 || first == i - 1) && last == i ? pos + 1 : end - 1;\n      tr.insert(tr.mapping.map(side), nodes);\n    }\n    pos = end;\n  }\n  return tr.setMeta(fixTablesKey, { fixTables: true });\n}\n\n// src/input.ts\nimport { keydownHandler } from \"prosemirror-keymap\";\nimport { Fragment as Fragment4 } from \"prosemirror-model\";\nimport {\n  Selection as Selection2,\n  TextSelection as TextSelection3\n} from \"prosemirror-state\";\n\n// src/commands.ts\nimport {\n  Fragment as Fragment2,\n  Slice as Slice2\n} from \"prosemirror-model\";\nimport {\n  TextSelection as TextSelection2\n} from \"prosemirror-state\";\nfunction selectedRect(state) {\n  const sel = state.selection;\n  const $pos = selectionCell(state);\n  const table = $pos.node(-1);\n  const tableStart = $pos.start(-1);\n  const map = TableMap.get(table);\n  const rect = sel instanceof CellSelection ? map.rectBetween(\n    sel.$anchorCell.pos - tableStart,\n    sel.$headCell.pos - tableStart\n  ) : map.findCell($pos.pos - tableStart);\n  return { ...rect, tableStart, map, table };\n}\nfunction addColumn(tr, { map, tableStart, table }, col) {\n  let refColumn = col > 0 ? -1 : 0;\n  if (columnIsHeader(map, table, col + refColumn)) {\n    refColumn = col == 0 || col == map.width ? null : 0;\n  }\n  for (let row = 0; row < map.height; row++) {\n    const index = row * map.width + col;\n    if (col > 0 && col < map.width && map.map[index - 1] == map.map[index]) {\n      const pos = map.map[index];\n      const cell = table.nodeAt(pos);\n      tr.setNodeMarkup(\n        tr.mapping.map(tableStart + pos),\n        null,\n        addColSpan(cell.attrs, col - map.colCount(pos))\n      );\n      row += cell.attrs.rowspan - 1;\n    } else {\n      const type = refColumn == null ? tableNodeTypes(table.type.schema).cell : table.nodeAt(map.map[index + refColumn]).type;\n      const pos = map.positionAt(row, col, table);\n      tr.insert(tr.mapping.map(tableStart + pos), type.createAndFill());\n    }\n  }\n  return tr;\n}\nfunction addColumnBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.left));\n  }\n  return true;\n}\nfunction addColumnAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.right));\n  }\n  return true;\n}\nfunction removeColumn(tr, { map, table, tableStart }, col) {\n  const mapStart = tr.mapping.maps.length;\n  for (let row = 0; row < map.height; ) {\n    const index = row * map.width + col;\n    const pos = map.map[index];\n    const cell = table.nodeAt(pos);\n    const attrs = cell.attrs;\n    if (col > 0 && map.map[index - 1] == pos || col < map.width - 1 && map.map[index + 1] == pos) {\n      tr.setNodeMarkup(\n        tr.mapping.slice(mapStart).map(tableStart + pos),\n        null,\n        removeColSpan(attrs, col - map.colCount(pos))\n      );\n    } else {\n      const start = tr.mapping.slice(mapStart).map(tableStart + pos);\n      tr.delete(start, start + cell.nodeSize);\n    }\n    row += attrs.rowspan;\n  }\n}\nfunction deleteColumn(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    const tr = state.tr;\n    if (rect.left == 0 && rect.right == rect.map.width)\n      return false;\n    for (let i = rect.right - 1; ; i--) {\n      removeColumn(tr, rect, i);\n      if (i == rect.left)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction rowIsHeader(map, table, row) {\n  var _a;\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let col = 0; col < map.width; col++)\n    if (((_a = table.nodeAt(map.map[col + row * map.width])) == null ? void 0 : _a.type) != headerCell)\n      return false;\n  return true;\n}\nfunction addRow(tr, { map, tableStart, table }, row) {\n  var _a;\n  let rowPos = tableStart;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const cells = [];\n  let refRow = row > 0 ? -1 : 0;\n  if (rowIsHeader(map, table, row + refRow))\n    refRow = row == 0 || row == map.height ? null : 0;\n  for (let col = 0, index = map.width * row; col < map.width; col++, index++) {\n    if (row > 0 && row < map.height && map.map[index] == map.map[index - map.width]) {\n      const pos = map.map[index];\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tableStart + pos, null, {\n        ...attrs,\n        rowspan: attrs.rowspan + 1\n      });\n      col += attrs.colspan - 1;\n    } else {\n      const type = refRow == null ? tableNodeTypes(table.type.schema).cell : (_a = table.nodeAt(map.map[index + refRow * map.width])) == null ? void 0 : _a.type;\n      const node = type == null ? void 0 : type.createAndFill();\n      if (node)\n        cells.push(node);\n    }\n  }\n  tr.insert(rowPos, tableNodeTypes(table.type.schema).row.create(null, cells));\n  return tr;\n}\nfunction addRowBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.top));\n  }\n  return true;\n}\nfunction addRowAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.bottom));\n  }\n  return true;\n}\nfunction removeRow(tr, { map, table, tableStart }, row) {\n  let rowPos = 0;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const nextRow = rowPos + table.child(row).nodeSize;\n  const mapFrom = tr.mapping.maps.length;\n  tr.delete(rowPos + tableStart, nextRow + tableStart);\n  const seen = /* @__PURE__ */ new Set();\n  for (let col = 0, index = row * map.width; col < map.width; col++, index++) {\n    const pos = map.map[index];\n    if (seen.has(pos))\n      continue;\n    seen.add(pos);\n    if (row > 0 && pos == map.map[index - map.width]) {\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + tableStart), null, {\n        ...attrs,\n        rowspan: attrs.rowspan - 1\n      });\n      col += attrs.colspan - 1;\n    } else if (row < map.height && pos == map.map[index + map.width]) {\n      const cell = table.nodeAt(pos);\n      const attrs = cell.attrs;\n      const copy = cell.type.create(\n        { ...attrs, rowspan: cell.attrs.rowspan - 1 },\n        cell.content\n      );\n      const newPos = map.positionAt(row + 1, col, table);\n      tr.insert(tr.mapping.slice(mapFrom).map(tableStart + newPos), copy);\n      col += attrs.colspan - 1;\n    }\n  }\n}\nfunction deleteRow(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state), tr = state.tr;\n    if (rect.top == 0 && rect.bottom == rect.map.height)\n      return false;\n    for (let i = rect.bottom - 1; ; i--) {\n      removeRow(tr, rect, i);\n      if (i == rect.top)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(rect.table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction isEmpty(cell) {\n  const c = cell.content;\n  return c.childCount == 1 && c.child(0).isTextblock && c.child(0).childCount == 0;\n}\nfunction cellsOverlapRectangle({ width, height, map }, rect) {\n  let indexTop = rect.top * width + rect.left, indexLeft = indexTop;\n  let indexBottom = (rect.bottom - 1) * width + rect.left, indexRight = indexTop + (rect.right - rect.left - 1);\n  for (let i = rect.top; i < rect.bottom; i++) {\n    if (rect.left > 0 && map[indexLeft] == map[indexLeft - 1] || rect.right < width && map[indexRight] == map[indexRight + 1])\n      return true;\n    indexLeft += width;\n    indexRight += width;\n  }\n  for (let i = rect.left; i < rect.right; i++) {\n    if (rect.top > 0 && map[indexTop] == map[indexTop - width] || rect.bottom < height && map[indexBottom] == map[indexBottom + width])\n      return true;\n    indexTop++;\n    indexBottom++;\n  }\n  return false;\n}\nfunction mergeCells(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection) || sel.$anchorCell.pos == sel.$headCell.pos)\n    return false;\n  const rect = selectedRect(state), { map } = rect;\n  if (cellsOverlapRectangle(map, rect))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const seen = {};\n    let content = Fragment2.empty;\n    let mergedPos;\n    let mergedCell;\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const cellPos = map.map[row * map.width + col];\n        const cell = rect.table.nodeAt(cellPos);\n        if (seen[cellPos] || !cell)\n          continue;\n        seen[cellPos] = true;\n        if (mergedPos == null) {\n          mergedPos = cellPos;\n          mergedCell = cell;\n        } else {\n          if (!isEmpty(cell))\n            content = content.append(cell.content);\n          const mapped = tr.mapping.map(cellPos + rect.tableStart);\n          tr.delete(mapped, mapped + cell.nodeSize);\n        }\n      }\n    }\n    if (mergedPos == null || mergedCell == null) {\n      return true;\n    }\n    tr.setNodeMarkup(mergedPos + rect.tableStart, null, {\n      ...addColSpan(\n        mergedCell.attrs,\n        mergedCell.attrs.colspan,\n        rect.right - rect.left - mergedCell.attrs.colspan\n      ),\n      rowspan: rect.bottom - rect.top\n    });\n    if (content.size) {\n      const end = mergedPos + 1 + mergedCell.content.size;\n      const start = isEmpty(mergedCell) ? mergedPos + 1 : end;\n      tr.replaceWith(start + rect.tableStart, end + rect.tableStart, content);\n    }\n    tr.setSelection(\n      new CellSelection(tr.doc.resolve(mergedPos + rect.tableStart))\n    );\n    dispatch(tr);\n  }\n  return true;\n}\nfunction splitCell(state, dispatch) {\n  const nodeTypes = tableNodeTypes(state.schema);\n  return splitCellWithType(({ node }) => {\n    return nodeTypes[node.type.spec.tableRole];\n  })(state, dispatch);\n}\nfunction splitCellWithType(getCellType) {\n  return (state, dispatch) => {\n    var _a;\n    const sel = state.selection;\n    let cellNode;\n    let cellPos;\n    if (!(sel instanceof CellSelection)) {\n      cellNode = cellWrapping(sel.$from);\n      if (!cellNode)\n        return false;\n      cellPos = (_a = cellAround(sel.$from)) == null ? void 0 : _a.pos;\n    } else {\n      if (sel.$anchorCell.pos != sel.$headCell.pos)\n        return false;\n      cellNode = sel.$anchorCell.nodeAfter;\n      cellPos = sel.$anchorCell.pos;\n    }\n    if (cellNode == null || cellPos == null) {\n      return false;\n    }\n    if (cellNode.attrs.colspan == 1 && cellNode.attrs.rowspan == 1) {\n      return false;\n    }\n    if (dispatch) {\n      let baseAttrs = cellNode.attrs;\n      const attrs = [];\n      const colwidth = baseAttrs.colwidth;\n      if (baseAttrs.rowspan > 1)\n        baseAttrs = { ...baseAttrs, rowspan: 1 };\n      if (baseAttrs.colspan > 1)\n        baseAttrs = { ...baseAttrs, colspan: 1 };\n      const rect = selectedRect(state), tr = state.tr;\n      for (let i = 0; i < rect.right - rect.left; i++)\n        attrs.push(\n          colwidth ? {\n            ...baseAttrs,\n            colwidth: colwidth && colwidth[i] ? [colwidth[i]] : null\n          } : baseAttrs\n        );\n      let lastCell;\n      for (let row = rect.top; row < rect.bottom; row++) {\n        let pos = rect.map.positionAt(row, rect.left, rect.table);\n        if (row == rect.top)\n          pos += cellNode.nodeSize;\n        for (let col = rect.left, i = 0; col < rect.right; col++, i++) {\n          if (col == rect.left && row == rect.top)\n            continue;\n          tr.insert(\n            lastCell = tr.mapping.map(pos + rect.tableStart, 1),\n            getCellType({ node: cellNode, row, col }).createAndFill(attrs[i])\n          );\n        }\n      }\n      tr.setNodeMarkup(\n        cellPos,\n        getCellType({ node: cellNode, row: rect.top, col: rect.left }),\n        attrs[0]\n      );\n      if (sel instanceof CellSelection)\n        tr.setSelection(\n          new CellSelection(\n            tr.doc.resolve(sel.$anchorCell.pos),\n            lastCell ? tr.doc.resolve(lastCell) : void 0\n          )\n        );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction setCellAttr(name, value) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const $cell = selectionCell(state);\n    if ($cell.nodeAfter.attrs[name] === value)\n      return false;\n    if (dispatch) {\n      const tr = state.tr;\n      if (state.selection instanceof CellSelection)\n        state.selection.forEachCell((node, pos) => {\n          if (node.attrs[name] !== value)\n            tr.setNodeMarkup(pos, null, {\n              ...node.attrs,\n              [name]: value\n            });\n        });\n      else\n        tr.setNodeMarkup($cell.pos, null, {\n          ...$cell.nodeAfter.attrs,\n          [name]: value\n        });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction deprecated_toggleHeader(type) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const cells = rect.map.cellsInRect(\n        type == \"column\" ? {\n          left: rect.left,\n          top: 0,\n          right: rect.right,\n          bottom: rect.map.height\n        } : type == \"row\" ? {\n          left: 0,\n          top: rect.top,\n          right: rect.map.width,\n          bottom: rect.bottom\n        } : rect\n      );\n      const nodes = cells.map((pos) => rect.table.nodeAt(pos));\n      for (let i = 0; i < cells.length; i++)\n        if (nodes[i].type == types.header_cell)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.cell,\n            nodes[i].attrs\n          );\n      if (tr.steps.length == 0)\n        for (let i = 0; i < cells.length; i++)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.header_cell,\n            nodes[i].attrs\n          );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction isHeaderEnabledByType(type, rect, types) {\n  const cellPositions = rect.map.cellsInRect({\n    left: 0,\n    top: 0,\n    right: type == \"row\" ? rect.map.width : 1,\n    bottom: type == \"column\" ? rect.map.height : 1\n  });\n  for (let i = 0; i < cellPositions.length; i++) {\n    const cell = rect.table.nodeAt(cellPositions[i]);\n    if (cell && cell.type !== types.header_cell) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toggleHeader(type, options) {\n  options = options || { useDeprecatedLogic: false };\n  if (options.useDeprecatedLogic)\n    return deprecated_toggleHeader(type);\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const isHeaderRowEnabled = isHeaderEnabledByType(\"row\", rect, types);\n      const isHeaderColumnEnabled = isHeaderEnabledByType(\n        \"column\",\n        rect,\n        types\n      );\n      const isHeaderEnabled = type === \"column\" ? isHeaderRowEnabled : type === \"row\" ? isHeaderColumnEnabled : false;\n      const selectionStartsAt = isHeaderEnabled ? 1 : 0;\n      const cellsRect = type == \"column\" ? {\n        left: 0,\n        top: selectionStartsAt,\n        right: 1,\n        bottom: rect.map.height\n      } : type == \"row\" ? {\n        left: selectionStartsAt,\n        top: 0,\n        right: rect.map.width,\n        bottom: 1\n      } : rect;\n      const newType = type == \"column\" ? isHeaderColumnEnabled ? types.cell : types.header_cell : type == \"row\" ? isHeaderRowEnabled ? types.cell : types.header_cell : types.cell;\n      rect.map.cellsInRect(cellsRect).forEach((relativeCellPos) => {\n        const cellPos = relativeCellPos + rect.tableStart;\n        const cell = tr.doc.nodeAt(cellPos);\n        if (cell) {\n          tr.setNodeMarkup(cellPos, newType, cell.attrs);\n        }\n      });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nvar toggleHeaderRow = toggleHeader(\"row\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderColumn = toggleHeader(\"column\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderCell = toggleHeader(\"cell\", {\n  useDeprecatedLogic: true\n});\nfunction findNextCell($cell, dir) {\n  if (dir < 0) {\n    const before = $cell.nodeBefore;\n    if (before)\n      return $cell.pos - before.nodeSize;\n    for (let row = $cell.index(-1) - 1, rowEnd = $cell.before(); row >= 0; row--) {\n      const rowNode = $cell.node(-1).child(row);\n      const lastChild = rowNode.lastChild;\n      if (lastChild) {\n        return rowEnd - 1 - lastChild.nodeSize;\n      }\n      rowEnd -= rowNode.nodeSize;\n    }\n  } else {\n    if ($cell.index() < $cell.parent.childCount - 1) {\n      return $cell.pos + $cell.nodeAfter.nodeSize;\n    }\n    const table = $cell.node(-1);\n    for (let row = $cell.indexAfter(-1), rowStart = $cell.after(); row < table.childCount; row++) {\n      const rowNode = table.child(row);\n      if (rowNode.childCount)\n        return rowStart + 1;\n      rowStart += rowNode.nodeSize;\n    }\n  }\n  return null;\n}\nfunction goToNextCell(direction) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const cell = findNextCell(selectionCell(state), direction);\n    if (cell == null)\n      return false;\n    if (dispatch) {\n      const $cell = state.doc.resolve(cell);\n      dispatch(\n        state.tr.setSelection(TextSelection2.between($cell, moveCellForward($cell))).scrollIntoView()\n      );\n    }\n    return true;\n  };\n}\nfunction deleteTable(state, dispatch) {\n  const $pos = state.selection.$anchor;\n  for (let d = $pos.depth; d > 0; d--) {\n    const node = $pos.node(d);\n    if (node.type.spec.tableRole == \"table\") {\n      if (dispatch)\n        dispatch(\n          state.tr.delete($pos.before(d), $pos.after(d)).scrollIntoView()\n        );\n      return true;\n    }\n  }\n  return false;\n}\nfunction deleteCellSelection(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const baseContent = tableNodeTypes(state.schema).cell.createAndFill().content;\n    sel.forEachCell((cell, pos) => {\n      if (!cell.content.eq(baseContent))\n        tr.replace(\n          tr.mapping.map(pos + 1),\n          tr.mapping.map(pos + cell.nodeSize - 1),\n          new Slice2(baseContent, 0, 0)\n        );\n    });\n    if (tr.docChanged)\n      dispatch(tr);\n  }\n  return true;\n}\n\n// src/copypaste.ts\nimport { Fragment as Fragment3, Slice as Slice3 } from \"prosemirror-model\";\nimport { Transform } from \"prosemirror-transform\";\nfunction pastedCells(slice) {\n  if (!slice.size)\n    return null;\n  let { content, openStart, openEnd } = slice;\n  while (content.childCount == 1 && (openStart > 0 && openEnd > 0 || content.child(0).type.spec.tableRole == \"table\")) {\n    openStart--;\n    openEnd--;\n    content = content.child(0).content;\n  }\n  const first = content.child(0);\n  const role = first.type.spec.tableRole;\n  const schema = first.type.schema, rows = [];\n  if (role == \"row\") {\n    for (let i = 0; i < content.childCount; i++) {\n      let cells = content.child(i).content;\n      const left = i ? 0 : Math.max(0, openStart - 1);\n      const right = i < content.childCount - 1 ? 0 : Math.max(0, openEnd - 1);\n      if (left || right)\n        cells = fitSlice(\n          tableNodeTypes(schema).row,\n          new Slice3(cells, left, right)\n        ).content;\n      rows.push(cells);\n    }\n  } else if (role == \"cell\" || role == \"header_cell\") {\n    rows.push(\n      openStart || openEnd ? fitSlice(\n        tableNodeTypes(schema).row,\n        new Slice3(content, openStart, openEnd)\n      ).content : content\n    );\n  } else {\n    return null;\n  }\n  return ensureRectangular(schema, rows);\n}\nfunction ensureRectangular(schema, rows) {\n  const widths = [];\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    for (let j = row.childCount - 1; j >= 0; j--) {\n      const { rowspan, colspan } = row.child(j).attrs;\n      for (let r = i; r < i + rowspan; r++)\n        widths[r] = (widths[r] || 0) + colspan;\n    }\n  }\n  let width = 0;\n  for (let r = 0; r < widths.length; r++)\n    width = Math.max(width, widths[r]);\n  for (let r = 0; r < widths.length; r++) {\n    if (r >= rows.length)\n      rows.push(Fragment3.empty);\n    if (widths[r] < width) {\n      const empty = tableNodeTypes(schema).cell.createAndFill();\n      const cells = [];\n      for (let i = widths[r]; i < width; i++) {\n        cells.push(empty);\n      }\n      rows[r] = rows[r].append(Fragment3.from(cells));\n    }\n  }\n  return { height: rows.length, width, rows };\n}\nfunction fitSlice(nodeType, slice) {\n  const node = nodeType.createAndFill();\n  const tr = new Transform(node).replace(0, node.content.size, slice);\n  return tr.doc;\n}\nfunction clipCells({ width, height, rows }, newWidth, newHeight) {\n  if (width != newWidth) {\n    const added = [];\n    const newRows = [];\n    for (let row = 0; row < rows.length; row++) {\n      const frag = rows[row], cells = [];\n      for (let col = added[row] || 0, i = 0; col < newWidth; i++) {\n        let cell = frag.child(i % frag.childCount);\n        if (col + cell.attrs.colspan > newWidth)\n          cell = cell.type.createChecked(\n            removeColSpan(\n              cell.attrs,\n              cell.attrs.colspan,\n              col + cell.attrs.colspan - newWidth\n            ),\n            cell.content\n          );\n        cells.push(cell);\n        col += cell.attrs.colspan;\n        for (let j = 1; j < cell.attrs.rowspan; j++)\n          added[row + j] = (added[row + j] || 0) + cell.attrs.colspan;\n      }\n      newRows.push(Fragment3.from(cells));\n    }\n    rows = newRows;\n    width = newWidth;\n  }\n  if (height != newHeight) {\n    const newRows = [];\n    for (let row = 0, i = 0; row < newHeight; row++, i++) {\n      const cells = [], source = rows[i % height];\n      for (let j = 0; j < source.childCount; j++) {\n        let cell = source.child(j);\n        if (row + cell.attrs.rowspan > newHeight)\n          cell = cell.type.create(\n            {\n              ...cell.attrs,\n              rowspan: Math.max(1, newHeight - cell.attrs.rowspan)\n            },\n            cell.content\n          );\n        cells.push(cell);\n      }\n      newRows.push(Fragment3.from(cells));\n    }\n    rows = newRows;\n    height = newHeight;\n  }\n  return { width, height, rows };\n}\nfunction growTable(tr, map, table, start, width, height, mapFrom) {\n  const schema = tr.doc.type.schema;\n  const types = tableNodeTypes(schema);\n  let empty;\n  let emptyHead;\n  if (width > map.width) {\n    for (let row = 0, rowEnd = 0; row < map.height; row++) {\n      const rowNode = table.child(row);\n      rowEnd += rowNode.nodeSize;\n      const cells = [];\n      let add;\n      if (rowNode.lastChild == null || rowNode.lastChild.type == types.cell)\n        add = empty || (empty = types.cell.createAndFill());\n      else\n        add = emptyHead || (emptyHead = types.header_cell.createAndFill());\n      for (let i = map.width; i < width; i++)\n        cells.push(add);\n      tr.insert(tr.mapping.slice(mapFrom).map(rowEnd - 1 + start), cells);\n    }\n  }\n  if (height > map.height) {\n    const cells = [];\n    for (let i = 0, start2 = (map.height - 1) * map.width; i < Math.max(map.width, width); i++) {\n      const header = i >= map.width ? false : table.nodeAt(map.map[start2 + i]).type == types.header_cell;\n      cells.push(\n        header ? emptyHead || (emptyHead = types.header_cell.createAndFill()) : empty || (empty = types.cell.createAndFill())\n      );\n    }\n    const emptyRow = types.row.create(null, Fragment3.from(cells)), rows = [];\n    for (let i = map.height; i < height; i++)\n      rows.push(emptyRow);\n    tr.insert(tr.mapping.slice(mapFrom).map(start + table.nodeSize - 2), rows);\n  }\n  return !!(empty || emptyHead);\n}\nfunction isolateHorizontal(tr, map, table, start, left, right, top, mapFrom) {\n  if (top == 0 || top == map.height)\n    return false;\n  let found = false;\n  for (let col = left; col < right; col++) {\n    const index = top * map.width + col, pos = map.map[index];\n    if (map.map[index - map.width] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const { top: cellTop, left: cellLeft } = map.findCell(pos);\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + start), null, {\n        ...cell.attrs,\n        rowspan: top - cellTop\n      });\n      tr.insert(\n        tr.mapping.slice(mapFrom).map(map.positionAt(top, cellLeft, table)),\n        cell.type.createAndFill({\n          ...cell.attrs,\n          rowspan: cellTop + cell.attrs.rowspan - top\n        })\n      );\n      col += cell.attrs.colspan - 1;\n    }\n  }\n  return found;\n}\nfunction isolateVertical(tr, map, table, start, top, bottom, left, mapFrom) {\n  if (left == 0 || left == map.width)\n    return false;\n  let found = false;\n  for (let row = top; row < bottom; row++) {\n    const index = row * map.width + left, pos = map.map[index];\n    if (map.map[index - 1] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const cellLeft = map.colCount(pos);\n      const updatePos = tr.mapping.slice(mapFrom).map(pos + start);\n      tr.setNodeMarkup(\n        updatePos,\n        null,\n        removeColSpan(\n          cell.attrs,\n          left - cellLeft,\n          cell.attrs.colspan - (left - cellLeft)\n        )\n      );\n      tr.insert(\n        updatePos + cell.nodeSize,\n        cell.type.createAndFill(\n          removeColSpan(cell.attrs, 0, left - cellLeft)\n        )\n      );\n      row += cell.attrs.rowspan - 1;\n    }\n  }\n  return found;\n}\nfunction insertCells(state, dispatch, tableStart, rect, cells) {\n  let table = tableStart ? state.doc.nodeAt(tableStart - 1) : state.doc;\n  if (!table) {\n    throw new Error(\"No table found\");\n  }\n  let map = TableMap.get(table);\n  const { top, left } = rect;\n  const right = left + cells.width, bottom = top + cells.height;\n  const tr = state.tr;\n  let mapFrom = 0;\n  function recomp() {\n    table = tableStart ? tr.doc.nodeAt(tableStart - 1) : tr.doc;\n    if (!table) {\n      throw new Error(\"No table found\");\n    }\n    map = TableMap.get(table);\n    mapFrom = tr.mapping.maps.length;\n  }\n  if (growTable(tr, map, table, tableStart, right, bottom, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, top, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, bottom, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, left, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, right, mapFrom))\n    recomp();\n  for (let row = top; row < bottom; row++) {\n    const from = map.positionAt(row, left, table), to = map.positionAt(row, right, table);\n    tr.replace(\n      tr.mapping.slice(mapFrom).map(from + tableStart),\n      tr.mapping.slice(mapFrom).map(to + tableStart),\n      new Slice3(cells.rows[row - top], 0, 0)\n    );\n  }\n  recomp();\n  tr.setSelection(\n    new CellSelection(\n      tr.doc.resolve(tableStart + map.positionAt(top, left, table)),\n      tr.doc.resolve(tableStart + map.positionAt(bottom - 1, right - 1, table))\n    )\n  );\n  dispatch(tr);\n}\n\n// src/input.ts\nvar handleKeyDown = keydownHandler({\n  ArrowLeft: arrow(\"horiz\", -1),\n  ArrowRight: arrow(\"horiz\", 1),\n  ArrowUp: arrow(\"vert\", -1),\n  ArrowDown: arrow(\"vert\", 1),\n  \"Shift-ArrowLeft\": shiftArrow(\"horiz\", -1),\n  \"Shift-ArrowRight\": shiftArrow(\"horiz\", 1),\n  \"Shift-ArrowUp\": shiftArrow(\"vert\", -1),\n  \"Shift-ArrowDown\": shiftArrow(\"vert\", 1),\n  Backspace: deleteCellSelection,\n  \"Mod-Backspace\": deleteCellSelection,\n  Delete: deleteCellSelection,\n  \"Mod-Delete\": deleteCellSelection\n});\nfunction maybeSetSelection(state, dispatch, selection) {\n  if (selection.eq(state.selection))\n    return false;\n  if (dispatch)\n    dispatch(state.tr.setSelection(selection).scrollIntoView());\n  return true;\n}\nfunction arrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    if (sel instanceof CellSelection) {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(sel.$headCell, dir)\n      );\n    }\n    if (axis != \"horiz\" && !sel.empty)\n      return false;\n    const end = atEndOfCell(view, axis, dir);\n    if (end == null)\n      return false;\n    if (axis == \"horiz\") {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(state.doc.resolve(sel.head + dir), dir)\n      );\n    } else {\n      const $cell = state.doc.resolve(end);\n      const $next = nextCell($cell, axis, dir);\n      let newSel;\n      if ($next)\n        newSel = Selection2.near($next, 1);\n      else if (dir < 0)\n        newSel = Selection2.near(state.doc.resolve($cell.before(-1)), -1);\n      else\n        newSel = Selection2.near(state.doc.resolve($cell.after(-1)), 1);\n      return maybeSetSelection(state, dispatch, newSel);\n    }\n  };\n}\nfunction shiftArrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    let cellSel;\n    if (sel instanceof CellSelection) {\n      cellSel = sel;\n    } else {\n      const end = atEndOfCell(view, axis, dir);\n      if (end == null)\n        return false;\n      cellSel = new CellSelection(state.doc.resolve(end));\n    }\n    const $head = nextCell(cellSel.$headCell, axis, dir);\n    if (!$head)\n      return false;\n    return maybeSetSelection(\n      state,\n      dispatch,\n      new CellSelection(cellSel.$anchorCell, $head)\n    );\n  };\n}\nfunction handleTripleClick(view, pos) {\n  const doc = view.state.doc, $cell = cellAround(doc.resolve(pos));\n  if (!$cell)\n    return false;\n  view.dispatch(view.state.tr.setSelection(new CellSelection($cell)));\n  return true;\n}\nfunction handlePaste(view, _, slice) {\n  if (!isInTable(view.state))\n    return false;\n  let cells = pastedCells(slice);\n  const sel = view.state.selection;\n  if (sel instanceof CellSelection) {\n    if (!cells)\n      cells = {\n        width: 1,\n        height: 1,\n        rows: [\n          Fragment4.from(\n            fitSlice(tableNodeTypes(view.state.schema).cell, slice)\n          )\n        ]\n      };\n    const table = sel.$anchorCell.node(-1);\n    const start = sel.$anchorCell.start(-1);\n    const rect = TableMap.get(table).rectBetween(\n      sel.$anchorCell.pos - start,\n      sel.$headCell.pos - start\n    );\n    cells = clipCells(cells, rect.right - rect.left, rect.bottom - rect.top);\n    insertCells(view.state, view.dispatch, start, rect, cells);\n    return true;\n  } else if (cells) {\n    const $cell = selectionCell(view.state);\n    const start = $cell.start(-1);\n    insertCells(\n      view.state,\n      view.dispatch,\n      start,\n      TableMap.get($cell.node(-1)).findCell($cell.pos - start),\n      cells\n    );\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction handleMouseDown(view, startEvent) {\n  var _a;\n  if (startEvent.ctrlKey || startEvent.metaKey)\n    return;\n  const startDOMCell = domInCell(view, startEvent.target);\n  let $anchor;\n  if (startEvent.shiftKey && view.state.selection instanceof CellSelection) {\n    setCellSelection(view.state.selection.$anchorCell, startEvent);\n    startEvent.preventDefault();\n  } else if (startEvent.shiftKey && startDOMCell && ($anchor = cellAround(view.state.selection.$anchor)) != null && ((_a = cellUnderMouse(view, startEvent)) == null ? void 0 : _a.pos) != $anchor.pos) {\n    setCellSelection($anchor, startEvent);\n    startEvent.preventDefault();\n  } else if (!startDOMCell) {\n    return;\n  }\n  function setCellSelection($anchor2, event) {\n    let $head = cellUnderMouse(view, event);\n    const starting = tableEditingKey.getState(view.state) == null;\n    if (!$head || !inSameTable($anchor2, $head)) {\n      if (starting)\n        $head = $anchor2;\n      else\n        return;\n    }\n    const selection = new CellSelection($anchor2, $head);\n    if (starting || !view.state.selection.eq(selection)) {\n      const tr = view.state.tr.setSelection(selection);\n      if (starting)\n        tr.setMeta(tableEditingKey, $anchor2.pos);\n      view.dispatch(tr);\n    }\n  }\n  function stop() {\n    view.root.removeEventListener(\"mouseup\", stop);\n    view.root.removeEventListener(\"dragstart\", stop);\n    view.root.removeEventListener(\"mousemove\", move);\n    if (tableEditingKey.getState(view.state) != null)\n      view.dispatch(view.state.tr.setMeta(tableEditingKey, -1));\n  }\n  function move(_event) {\n    const event = _event;\n    const anchor = tableEditingKey.getState(view.state);\n    let $anchor2;\n    if (anchor != null) {\n      $anchor2 = view.state.doc.resolve(anchor);\n    } else if (domInCell(view, event.target) != startDOMCell) {\n      $anchor2 = cellUnderMouse(view, startEvent);\n      if (!$anchor2)\n        return stop();\n    }\n    if ($anchor2)\n      setCellSelection($anchor2, event);\n  }\n  view.root.addEventListener(\"mouseup\", stop);\n  view.root.addEventListener(\"dragstart\", stop);\n  view.root.addEventListener(\"mousemove\", move);\n}\nfunction atEndOfCell(view, axis, dir) {\n  if (!(view.state.selection instanceof TextSelection3))\n    return null;\n  const { $head } = view.state.selection;\n  for (let d = $head.depth - 1; d >= 0; d--) {\n    const parent = $head.node(d), index = dir < 0 ? $head.index(d) : $head.indexAfter(d);\n    if (index != (dir < 0 ? 0 : parent.childCount))\n      return null;\n    if (parent.type.spec.tableRole == \"cell\" || parent.type.spec.tableRole == \"header_cell\") {\n      const cellPos = $head.before(d);\n      const dirStr = axis == \"vert\" ? dir > 0 ? \"down\" : \"up\" : dir > 0 ? \"right\" : \"left\";\n      return view.endOfTextblock(dirStr) ? cellPos : null;\n    }\n  }\n  return null;\n}\nfunction domInCell(view, dom) {\n  for (; dom && dom != view.dom; dom = dom.parentNode) {\n    if (dom.nodeName == \"TD\" || dom.nodeName == \"TH\") {\n      return dom;\n    }\n  }\n  return null;\n}\nfunction cellUnderMouse(view, event) {\n  const mousePos = view.posAtCoords({\n    left: event.clientX,\n    top: event.clientY\n  });\n  if (!mousePos)\n    return null;\n  return mousePos ? cellAround(view.state.doc.resolve(mousePos.pos)) : null;\n}\n\n// src/columnresizing.ts\nimport { Plugin, PluginKey as PluginKey3 } from \"prosemirror-state\";\nimport {\n  Decoration as Decoration2,\n  DecorationSet as DecorationSet2\n} from \"prosemirror-view\";\n\n// src/tableview.ts\nvar TableView = class {\n  constructor(node, cellMinWidth) {\n    this.node = node;\n    this.cellMinWidth = cellMinWidth;\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"tableWrapper\";\n    this.table = this.dom.appendChild(document.createElement(\"table\"));\n    this.colgroup = this.table.appendChild(document.createElement(\"colgroup\"));\n    updateColumnsOnResize(node, this.colgroup, this.table, cellMinWidth);\n    this.contentDOM = this.table.appendChild(document.createElement(\"tbody\"));\n  }\n  update(node) {\n    if (node.type != this.node.type)\n      return false;\n    this.node = node;\n    updateColumnsOnResize(node, this.colgroup, this.table, this.cellMinWidth);\n    return true;\n  }\n  ignoreMutation(record) {\n    return record.type == \"attributes\" && (record.target == this.table || this.colgroup.contains(record.target));\n  }\n};\nfunction updateColumnsOnResize(node, colgroup, table, cellMinWidth, overrideCol, overrideValue) {\n  var _a;\n  let totalWidth = 0;\n  let fixedWidth = true;\n  let nextDOM = colgroup.firstChild;\n  const row = node.firstChild;\n  if (!row)\n    return;\n  for (let i = 0, col = 0; i < row.childCount; i++) {\n    const { colspan, colwidth } = row.child(i).attrs;\n    for (let j = 0; j < colspan; j++, col++) {\n      const hasWidth = overrideCol == col ? overrideValue : colwidth && colwidth[j];\n      const cssWidth = hasWidth ? hasWidth + \"px\" : \"\";\n      totalWidth += hasWidth || cellMinWidth;\n      if (!hasWidth)\n        fixedWidth = false;\n      if (!nextDOM) {\n        colgroup.appendChild(document.createElement(\"col\")).style.width = cssWidth;\n      } else {\n        if (nextDOM.style.width != cssWidth)\n          nextDOM.style.width = cssWidth;\n        nextDOM = nextDOM.nextSibling;\n      }\n    }\n  }\n  while (nextDOM) {\n    const after = nextDOM.nextSibling;\n    (_a = nextDOM.parentNode) == null ? void 0 : _a.removeChild(nextDOM);\n    nextDOM = after;\n  }\n  if (fixedWidth) {\n    table.style.width = totalWidth + \"px\";\n    table.style.minWidth = \"\";\n  } else {\n    table.style.width = \"\";\n    table.style.minWidth = totalWidth + \"px\";\n  }\n}\n\n// src/columnresizing.ts\nvar columnResizingPluginKey = new PluginKey3(\n  \"tableColumnResizing\"\n);\nfunction columnResizing({\n  handleWidth = 5,\n  cellMinWidth = 25,\n  View = TableView,\n  lastColumnResizable = true\n} = {}) {\n  const plugin = new Plugin({\n    key: columnResizingPluginKey,\n    state: {\n      init(_, state) {\n        var _a, _b;\n        const nodeViews = (_b = (_a = plugin.spec) == null ? void 0 : _a.props) == null ? void 0 : _b.nodeViews;\n        const tableName = tableNodeTypes(state.schema).table.name;\n        if (View && nodeViews) {\n          nodeViews[tableName] = (node, view) => {\n            return new View(node, cellMinWidth, view);\n          };\n        }\n        return new ResizeState(-1, false);\n      },\n      apply(tr, prev) {\n        return prev.apply(tr);\n      }\n    },\n    props: {\n      attributes: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        return pluginState && pluginState.activeHandle > -1 ? { class: \"resize-cursor\" } : {};\n      },\n      handleDOMEvents: {\n        mousemove: (view, event) => {\n          handleMouseMove(\n            view,\n            event,\n            handleWidth,\n            cellMinWidth,\n            lastColumnResizable\n          );\n        },\n        mouseleave: (view) => {\n          handleMouseLeave(view);\n        },\n        mousedown: (view, event) => {\n          handleMouseDown2(view, event, cellMinWidth);\n        }\n      },\n      decorations: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        if (pluginState && pluginState.activeHandle > -1) {\n          return handleDecorations(state, pluginState.activeHandle);\n        }\n      },\n      nodeViews: {}\n    }\n  });\n  return plugin;\n}\nvar ResizeState = class _ResizeState {\n  constructor(activeHandle, dragging) {\n    this.activeHandle = activeHandle;\n    this.dragging = dragging;\n  }\n  apply(tr) {\n    const state = this;\n    const action = tr.getMeta(columnResizingPluginKey);\n    if (action && action.setHandle != null)\n      return new _ResizeState(action.setHandle, false);\n    if (action && action.setDragging !== void 0)\n      return new _ResizeState(state.activeHandle, action.setDragging);\n    if (state.activeHandle > -1 && tr.docChanged) {\n      let handle = tr.mapping.map(state.activeHandle, -1);\n      if (!pointsAtCell(tr.doc.resolve(handle))) {\n        handle = -1;\n      }\n      return new _ResizeState(handle, state.dragging);\n    }\n    return state;\n  }\n};\nfunction handleMouseMove(view, event, handleWidth, cellMinWidth, lastColumnResizable) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState)\n    return;\n  if (!pluginState.dragging) {\n    const target = domCellAround(event.target);\n    let cell = -1;\n    if (target) {\n      const { left, right } = target.getBoundingClientRect();\n      if (event.clientX - left <= handleWidth)\n        cell = edgeCell(view, event, \"left\", handleWidth);\n      else if (right - event.clientX <= handleWidth)\n        cell = edgeCell(view, event, \"right\", handleWidth);\n    }\n    if (cell != pluginState.activeHandle) {\n      if (!lastColumnResizable && cell !== -1) {\n        const $cell = view.state.doc.resolve(cell);\n        const table = $cell.node(-1);\n        const map = TableMap.get(table);\n        const tableStart = $cell.start(-1);\n        const col = map.colCount($cell.pos - tableStart) + $cell.nodeAfter.attrs.colspan - 1;\n        if (col == map.width - 1) {\n          return;\n        }\n      }\n      updateHandle(view, cell);\n    }\n  }\n}\nfunction handleMouseLeave(view) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (pluginState && pluginState.activeHandle > -1 && !pluginState.dragging)\n    updateHandle(view, -1);\n}\nfunction handleMouseDown2(view, event, cellMinWidth) {\n  var _a;\n  const win = (_a = view.dom.ownerDocument.defaultView) != null ? _a : window;\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState || pluginState.activeHandle == -1 || pluginState.dragging)\n    return false;\n  const cell = view.state.doc.nodeAt(pluginState.activeHandle);\n  const width = currentColWidth(view, pluginState.activeHandle, cell.attrs);\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, {\n      setDragging: { startX: event.clientX, startWidth: width }\n    })\n  );\n  function finish(event2) {\n    win.removeEventListener(\"mouseup\", finish);\n    win.removeEventListener(\"mousemove\", move);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (pluginState2 == null ? void 0 : pluginState2.dragging) {\n      updateColumnWidth(\n        view,\n        pluginState2.activeHandle,\n        draggedWidth(pluginState2.dragging, event2, cellMinWidth)\n      );\n      view.dispatch(\n        view.state.tr.setMeta(columnResizingPluginKey, { setDragging: null })\n      );\n    }\n  }\n  function move(event2) {\n    if (!event2.which)\n      return finish(event2);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (!pluginState2)\n      return;\n    if (pluginState2.dragging) {\n      const dragged = draggedWidth(pluginState2.dragging, event2, cellMinWidth);\n      displayColumnWidth(view, pluginState2.activeHandle, dragged, cellMinWidth);\n    }\n  }\n  win.addEventListener(\"mouseup\", finish);\n  win.addEventListener(\"mousemove\", move);\n  event.preventDefault();\n  return true;\n}\nfunction currentColWidth(view, cellPos, { colspan, colwidth }) {\n  const width = colwidth && colwidth[colwidth.length - 1];\n  if (width)\n    return width;\n  const dom = view.domAtPos(cellPos);\n  const node = dom.node.childNodes[dom.offset];\n  let domWidth = node.offsetWidth, parts = colspan;\n  if (colwidth) {\n    for (let i = 0; i < colspan; i++)\n      if (colwidth[i]) {\n        domWidth -= colwidth[i];\n        parts--;\n      }\n  }\n  return domWidth / parts;\n}\nfunction domCellAround(target) {\n  while (target && target.nodeName != \"TD\" && target.nodeName != \"TH\")\n    target = target.classList && target.classList.contains(\"ProseMirror\") ? null : target.parentNode;\n  return target;\n}\nfunction edgeCell(view, event, side, handleWidth) {\n  const offset = side == \"right\" ? -handleWidth : handleWidth;\n  const found = view.posAtCoords({\n    left: event.clientX + offset,\n    top: event.clientY\n  });\n  if (!found)\n    return -1;\n  const { pos } = found;\n  const $cell = cellAround(view.state.doc.resolve(pos));\n  if (!$cell)\n    return -1;\n  if (side == \"right\")\n    return $cell.pos;\n  const map = TableMap.get($cell.node(-1)), start = $cell.start(-1);\n  const index = map.map.indexOf($cell.pos - start);\n  return index % map.width == 0 ? -1 : start + map.map[index - 1];\n}\nfunction draggedWidth(dragging, event, cellMinWidth) {\n  const offset = event.clientX - dragging.startX;\n  return Math.max(cellMinWidth, dragging.startWidth + offset);\n}\nfunction updateHandle(view, value) {\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, { setHandle: value })\n  );\n}\nfunction updateColumnWidth(view, cell, width) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  const tr = view.state.tr;\n  for (let row = 0; row < map.height; row++) {\n    const mapIndex = row * map.width + col;\n    if (row && map.map[mapIndex] == map.map[mapIndex - map.width])\n      continue;\n    const pos = map.map[mapIndex];\n    const attrs = table.nodeAt(pos).attrs;\n    const index = attrs.colspan == 1 ? 0 : col - map.colCount(pos);\n    if (attrs.colwidth && attrs.colwidth[index] == width)\n      continue;\n    const colwidth = attrs.colwidth ? attrs.colwidth.slice() : zeroes(attrs.colspan);\n    colwidth[index] = width;\n    tr.setNodeMarkup(start + pos, null, { ...attrs, colwidth });\n  }\n  if (tr.docChanged)\n    view.dispatch(tr);\n}\nfunction displayColumnWidth(view, cell, width, cellMinWidth) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), start = $cell.start(-1);\n  const col = TableMap.get(table).colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  let dom = view.domAtPos($cell.start(-1)).node;\n  while (dom && dom.nodeName != \"TABLE\") {\n    dom = dom.parentNode;\n  }\n  if (!dom)\n    return;\n  updateColumnsOnResize(\n    table,\n    dom.firstChild,\n    dom,\n    cellMinWidth,\n    col,\n    width\n  );\n}\nfunction zeroes(n) {\n  return Array(n).fill(0);\n}\nfunction handleDecorations(state, cell) {\n  const decorations = [];\n  const $cell = state.doc.resolve(cell);\n  const table = $cell.node(-1);\n  if (!table) {\n    return DecorationSet2.empty;\n  }\n  const map = TableMap.get(table);\n  const start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  for (let row = 0; row < map.height; row++) {\n    const index = col + row * map.width;\n    if ((col == map.width - 1 || map.map[index] != map.map[index + 1]) && (row == 0 || map.map[index] != map.map[index - map.width])) {\n      const cellPos = map.map[index];\n      const pos = start + cellPos + table.nodeAt(cellPos).nodeSize - 1;\n      const dom = document.createElement(\"div\");\n      dom.className = \"column-resize-handle\";\n      decorations.push(Decoration2.widget(pos, dom));\n    }\n  }\n  return DecorationSet2.create(state.doc, decorations);\n}\n\n// src/index.ts\nfunction tableEditing({\n  allowTableNodeSelection = false\n} = {}) {\n  return new Plugin2({\n    key: tableEditingKey,\n    // This piece of state is used to remember when a mouse-drag\n    // cell-selection is happening, so that it can continue even as\n    // transactions (which might move its anchor cell) come in.\n    state: {\n      init() {\n        return null;\n      },\n      apply(tr, cur) {\n        const set = tr.getMeta(tableEditingKey);\n        if (set != null)\n          return set == -1 ? null : set;\n        if (cur == null || !tr.docChanged)\n          return cur;\n        const { deleted, pos } = tr.mapping.mapResult(cur);\n        return deleted ? null : pos;\n      }\n    },\n    props: {\n      decorations: drawCellSelection,\n      handleDOMEvents: {\n        mousedown: handleMouseDown\n      },\n      createSelectionBetween(view) {\n        return tableEditingKey.getState(view.state) != null ? view.state.selection : null;\n      },\n      handleTripleClick,\n      handleKeyDown,\n      handlePaste\n    },\n    appendTransaction(_, oldState, state) {\n      return normalizeSelection(\n        state,\n        fixTables(state, oldState),\n        allowTableNodeSelection\n      );\n    }\n  });\n}\nexport {\n  CellBookmark,\n  CellSelection,\n  ResizeState,\n  TableMap,\n  TableView,\n  clipCells as __clipCells,\n  insertCells as __insertCells,\n  pastedCells as __pastedCells,\n  addColSpan,\n  addColumn,\n  addColumnAfter,\n  addColumnBefore,\n  addRow,\n  addRowAfter,\n  addRowBefore,\n  cellAround,\n  cellNear,\n  colCount,\n  columnIsHeader,\n  columnResizing,\n  columnResizingPluginKey,\n  deleteCellSelection,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  findCell,\n  fixTables,\n  fixTablesKey,\n  goToNextCell,\n  handlePaste,\n  inSameTable,\n  isInTable,\n  mergeCells,\n  moveCellForward,\n  nextCell,\n  pointsAtCell,\n  removeColSpan,\n  removeColumn,\n  removeRow,\n  rowIsHeader,\n  selectedRect,\n  selectionCell,\n  setCellAttr,\n  splitCell,\n  splitCellWithType,\n  tableEditing,\n  tableEditingKey,\n  tableNodeTypes,\n  tableNodes,\n  toggleHeader,\n  toggleHeaderCell,\n  toggleHeaderColumn,\n  toggleHeaderRow,\n  updateColumnsOnResize\n};\n", "/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n", "/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value ?? undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n", "/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n", "/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n", "/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n", "/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n", "/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n", "import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n", "/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n", "/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n", "/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n", "/* eslint-env browser */\n\nexport const subtle = crypto.subtle\nexport const getRandomValues = crypto.getRandomValues.bind(crypto)\n", "/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { getRandomValues } from 'lib0/webcrypto'\n\nexport const rand = Math.random\n\nexport const uint32 = () => getRandomValues(new Uint32Array(1))[0]\n\nexport const uint53 = () => {\n  const arr = getRandomValues(new Uint32Array(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\n\n/**\n * @return {string}\n */\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n", "/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n", "/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template {unknown[] | []} PS\n *\n * @param {PS} ps\n * @return {Promise<{ -readonly [P in keyof PS]: Awaited<PS[P]> }>}\n */\nexport const all = Promise.all.bind(Promise)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n * @deprecated use untilAsync instead\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* c8 ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {()=>Promise<boolean>|boolean} check\n * @param {number} timeout\n * @param {number} intervalResolution\n * @return {Promise<void>}\n */\nexport const untilAsync = async (check, timeout = 0, intervalResolution = 10) => {\n  const startTime = time.getUnixTime()\n  const noTimeout = timeout <= 0\n  // eslint-disable-next-line no-unmodified-loop-condition\n  while (noTimeout || time.getUnixTime() - startTime <= timeout) {\n    if (await check()) return\n    await wait(intervalResolution)\n  }\n  throw new Error('Timeout')\n}\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, _reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n", "/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n", "/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined' && localStorage) {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n", "/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @deprecated use object.size instead\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const size = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (size(a) === size(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n", "/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n", "/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase().replaceAll('-', '_')])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {string}\n */\n/* c8 ignore next 5 */\nexport const ensureConf = (name) => {\n  const c = getConf(name)\n  if (c == null) throw new Error(`Expected configuration \"${name.toUpperCase().replaceAll('-', '_')}\"`)\n  return c\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\n/**\n * Color is enabled by default if the terminal supports it.\n *\n * Explicitly enable color using `--color` parameter\n * Disable color using `--no-color` parameter or using `NO_COLOR=1` environment variable.\n * `FORCE_COLOR=1` enables color and takes precedence over all.\n */\nexport const supportsColor = forceColor || (\n  !hasParam('--no-colors') && // @todo deprecate --no-colors\n  !hasConf('no-color') &&\n  (!isNode || process.stdout.isTTY) && (\n    !isNode ||\n    hasParam('--color') ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n  )\n)\n/* c8 ignore stop */\n", "/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n", "/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* c8 ignore start */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\nexport const createTextNode = text => doc.createTextNode(text)\n\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n/* c8 ignore stop */\n", "/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = []\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]()\n  }\n  queue = []\n}\n\n/**\n * @param {function():void} f\n */\nexport const enqueue = f => {\n  queue.push(f)\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0)\n  }\n}\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId\n  }\n\n  destroy () {\n    clearFunction(this._)\n  }\n}\n\nconst Timeout = createTimeoutClass(clearTimeout)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\n\nconst Interval = createTimeoutClass(clearInterval)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\n\n/* c8 ignore next */\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\n\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next */\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\n\n/* c8 ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\n\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\n\n/**\n * @param {number} timeout Timeout of the debounce action\n * @return {function(function():void):void}\n */\nexport const createDebouncer = timeout => {\n  let timer = -1\n  return f => {\n    clearTimeout(timer)\n    if (f) {\n      timer = /** @type {any} */ (setTimeout(f, timeout))\n    }\n  }\n}\n", "/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n", "import * as symbol from './symbol.js'\nimport * as time from './time.js'\nimport * as env from './environment.js'\nimport * as func from './function.js'\nimport * as json from './json.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/* c8 ignore start */\n/**\n * @param {Array<undefined|string|Symbol|Object|number|function():any>} args\n * @return {Array<string|object|number|undefined>}\n */\nexport const computeNoColorLoggingArgs = args => {\n  if (args.length === 1 && args[0]?.constructor === Function) {\n    args = /** @type {Array<string|Symbol|Object|number>} */ (/** @type {[function]} */ (args)[0]())\n  }\n  const strBuilder = []\n  const logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (arg === undefined) {\n      break\n    } else if (arg.constructor === String || arg.constructor === Number) {\n      strBuilder.push(arg)\n    } else if (arg.constructor === Object) {\n      break\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/* c8 ignore start */\n/**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (_print, moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n  return !doLogging\n    ? func.nop\n    : (...args) => {\n        if (args.length === 1 && args[0]?.constructor === Function) {\n          args = args[0]()\n        }\n        const timeNow = time.getUnixTime()\n        const timeDiff = timeNow - lastLoggingTime\n        lastLoggingTime = timeNow\n        _print(\n          color,\n          moduleName,\n          UNCOLOR,\n          ...args.map((arg) => {\n            if (arg != null && arg.constructor === Uint8Array) {\n              arg = Array.from(arg)\n            }\n            const t = typeof arg\n            switch (t) {\n              case 'string':\n              case 'symbol':\n                return arg\n              default: {\n                return json.stringify(arg)\n              }\n            }\n          }),\n          color,\n          ' +' + timeDiff + 'ms'\n        )\n      }\n}\n/* c8 ignore stop */\n", "/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as set from './set.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as common from './logging.common.js'\n\nexport { BOLD, UNBOLD, BLUE, GREY, GREEN, RED, PURPLE, ORANGE, UNCOLOR } from './logging.common.js'\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [common.BOLD]: pair.create('font-weight', 'bold'),\n  [common.UNBOLD]: pair.create('font-weight', 'normal'),\n  [common.BLUE]: pair.create('color', 'blue'),\n  [common.GREEN]: pair.create('color', 'green'),\n  [common.GREY]: pair.create('color', 'grey'),\n  [common.RED]: pair.create('color', 'red'),\n  [common.PURPLE]: pair.create('color', 'purple'),\n  [common.ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [common.UNCOLOR]: pair.create('color', 'black')\n}\n\n/**\n * @param {Array<string|Symbol|Object|number|function():any>} args\n * @return {Array<string|object|number>}\n */\n/* c8 ignore start */\nconst computeBrowserLoggingArgs = (args) => {\n  if (args.length === 1 && args[0]?.constructor === Function) {\n    args = /** @type {Array<string|Symbol|Object|number>} */ (/** @type {[function]} */ (args)[0]())\n  }\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg === undefined) {\n        break\n      }\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\n/* c8 ignore start */\nconst computeLoggingArgs = env.supportsColor\n  ? computeBrowserLoggingArgs\n  : common.computeNoColorLoggingArgs\n/* c8 ignore stop */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(common.ORANGE)\n  vconsoles.forEach((vc) => vc.print(args))\n}\n/* c8 ignore stop */\n\n/**\n * @param {Error} err\n */\n/* c8 ignore start */\nexport const printError = (err) => {\n  console.error(err)\n  vconsoles.forEach((vc) => vc.printError(err))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\n/* c8 ignore start */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log(\n      '%c                      ',\n      `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`\n    )\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach((vc) => vc.printImg(url, height))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} base64\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printImgBase64 = (base64, height) =>\n  printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupEnd())\n}\n\n/**\n * @param {function():Node} createNode\n */\n/* c8 ignore next 2 */\nexport const printDom = (createNode) =>\n  vconsoles.forEach((vc) => vc.printDom(createNode()))\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printCanvas = (canvas, height) =>\n  printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = set.create()\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\n/* c8 ignore start */\nconst _computeLineSpans = (args) => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    let arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg === undefined) {\n        arg = 'undefined '\n      }\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [\n          pair.create('style', dom.mapToStyleString(currentStyle))\n        ], [dom.text(arg.toString())])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(\n        dom.element('span', [], [dom.text(/** @type {string} */ (content))])\n      )\n    }\n  }\n  return spans\n}\n/* c8 ignore stop */\n\nconst lineStyle =\n  'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* c8 ignore start */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [\n        pair.create('hidden', collapsed),\n        pair.create('style', 'color:grey;font-size:120%;')\n      ], [dom.text('▼')])\n      const triangleRight = dom.element('span', [\n        pair.create('hidden', !collapsed),\n        pair.create('style', 'color:grey;font-size:125%;')\n      ], [dom.text('▶')])\n      const content = dom.element(\n        'div',\n        [pair.create(\n          'style',\n          `${lineStyle};padding-left:${this.depth * 10}px`\n        )],\n        [triangleDown, triangleRight, dom.text(' ')].concat(\n          _computeLineSpans(args)\n        )\n      )\n      const nextContainer = dom.element('div', [\n        pair.create('hidden', collapsed)\n      ])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', (_event) => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('div', [\n          pair.create(\n            'style',\n            `${lineStyle};padding-left:${this.depth * 10}px`\n          )\n        ], _computeLineSpans(args))\n      ])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([common.RED, common.BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('img', [\n          pair.create('src', url),\n          pair.create('height', `${math.round(height * 1.5)}px`)\n        ])\n      ])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @param {Element} dom\n */\n/* c8 ignore next */\nexport const createVConsole = (dom) => new VConsole(dom)\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (moduleName) => common.createModuleLogger(print, moduleName)\n", "/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n", "import { ObservableV2 } from 'lib0/observable'\n\nimport {\n  Doc // eslint-disable-line\n} from '../internals.js'\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {ObservableV2<any>}\n */\nexport class AbstractConnector extends ObservableV2 {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super()\n    this.doc = ydoc\n    this.awareness = awareness\n  }\n}\n", "import {\n  findIndexSS,\n  getState,\n  splitItem,\n  iterateStructs,\n  UpdateEncoderV2,\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array'\nimport * as math from 'lib0/math'\nimport * as map from 'lib0/map'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([])).push(new DeleteItem(clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\n\n  // Ensure that the delete set is written in a deterministic order\n  array.from(ds.clients.entries())\n    .sort((a, b) => b[0] - a[0])\n    .forEach(([client, dsitems]) => {\n      encoder.resetDsCurVal()\n      encoding.writeVarUint(encoder.restEncoder, client)\n      const len = dsitems.length\n      encoding.writeVarUint(encoder.restEncoder, len)\n      for (let i = 0; i < len; i++) {\n        const item = dsitems[i]\n        encoder.writeDsClock(item.clock)\n        encoder.writeDsLen(item.len)\n      }\n    })\n}\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([]))\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\n      }\n    }\n  }\n  return ds\n}\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock()\n      const clockEnd = clock + decoder.readDsLen()\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2()\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\n    writeDeleteSet(ds, unappliedDS)\n    return ds.toUint8Array()\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n */\nexport const equalDeleteSets = (ds1, ds2) => {\n  if (ds1.clients.size !== ds2.clients.size) return false\n  for (const [client, deleteItems1] of ds1.clients.entries()) {\n    const deleteItems2 = /** @type {Array<import('../internals.js').DeleteItem>} */ (ds2.clients.get(client))\n    if (deleteItems2 === undefined || deleteItems1.length !== deleteItems2.length) return false\n    for (let i = 0; i < deleteItems1.length; i++) {\n      const di1 = deleteItems1[i]\n      const di2 = deleteItems2[i]\n      if (di1.clock !== di2.clock || di1.len !== di2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n", "/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlElement,\n  YXmlFragment,\n  transact,\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { ObservableV2 } from 'lib0/observable'\nimport * as random from 'lib0/random'\nimport * as map from 'lib0/map'\nimport * as array from 'lib0/array'\nimport * as promise from 'lib0/promise'\n\nexport const generateNewClientId = random.uint32\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * @typedef {Object} DocEvents\n * @property {function(Doc):void} DocEvents.destroy\n * @property {function(Doc):void} DocEvents.load\n * @property {function(boolean, Doc):void} DocEvents.sync\n * @property {function(Uint8Array, any, Doc, Transaction):void} DocEvents.update\n * @property {function(Uint8Array, any, Doc, Transaction):void} DocEvents.updateV2\n * @property {function(Doc):void} DocEvents.beforeAllTransactions\n * @property {function(Transaction, Doc):void} DocEvents.beforeTransaction\n * @property {function(Transaction, Doc):void} DocEvents.beforeObserverCalls\n * @property {function(Transaction, Doc):void} DocEvents.afterTransaction\n * @property {function(Transaction, Doc):void} DocEvents.afterTransactionCleanup\n * @property {function(Doc, Array<Transaction>):void} DocEvents.afterAllTransactions\n * @property {function({ loaded: Set<Doc>, added: Set<Doc>, removed: Set<Doc> }, Doc, Transaction):void} DocEvents.subdocs\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends ObservableV2<DocEvents>\n */\nexport class Doc extends ObservableV2 {\n  /**\n   * @param {DocOpts} opts configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = generateNewClientId()\n    this.guid = guid\n    this.collectionid = collectionid\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set()\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null\n    this.shouldLoad = shouldLoad\n    this.autoLoad = autoLoad\n    this.meta = meta\n    /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */\n    this.isLoaded = false\n    /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */\n    this.isSynced = false\n    /**\n     * Promise that resolves once the document has been loaded from a presistence provider.\n     */\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true\n        resolve(this)\n      })\n    })\n    const provideSyncedPromise = () => promise.create(resolve => {\n      /**\n       * @param {boolean} isSynced\n       */\n      const eventHandler = (isSynced) => {\n        if (isSynced === undefined || isSynced === true) {\n          this.off('sync', eventHandler)\n          resolve()\n        }\n      }\n      this.on('sync', eventHandler)\n    })\n    this.on('sync', isSynced => {\n      if (isSynced === false && this.isSynced) {\n        this.whenSynced = provideSyncedPromise()\n      }\n      this.isSynced = isSynced === undefined || isSynced === true\n      if (this.isSynced && !this.isLoaded) {\n        this.emit('load', [this])\n      }\n    })\n    /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */\n    this.whenSynced = provideSyncedPromise()\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this)\n      }, null, true)\n    }\n    this.shouldLoad = true\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    return transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `ydoc.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `ydoc.get(name, Y.Array) === ydoc.get(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `ydoc.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Y.Doc instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @template {typeof AbstractType<any>} Type\n   * @example\n   *   const ydoc = new Y.Doc(..)\n   *   const appState = {\n   *     document: ydoc.getText('document')\n   *     comments: ydoc.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Type} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {InstanceType<Type>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = /** @type {any} */ (AbstractType)) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return /** @type {InstanceType<Type>} */ (t)\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return /** @type {InstanceType<Type>} */ (type)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    return /** @type {YArray<T>} */ (this.get(name, YArray))\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    return /** @type {YMap<T>} */ (this.get(name, YMap))\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlElement}\n   *\n   * @public\n   */\n  getXmlElement (name = '') {\n    return /** @type {YXmlElement<{[key:string]:string}>} */ (this.get(name, YXmlElement))\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {}\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON()\n    })\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\n    const item = this._item\n    if (item !== null) {\n      this._item = null\n      const content = /** @type {ContentDoc} */ (item.content)\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false })\n      content.doc._item = item\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc)\n        }\n        transaction.subdocsRemoved.add(this)\n      }, null, true)\n    }\n    // @ts-ignore\n    this.emit('destroyed', [true]) // DEPRECATED!\n    this.emit('destroy', [this])\n    super.destroy()\n  }\n}\n", "import * as buffer from 'lib0/buffer'\nimport * as decoding from 'lib0/decoding'\nimport {\n  ID, createID\n} from '../internals.js'\n\nexport class DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nexport class UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nexport class DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder)\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1\n    this.dsCurrVal += diff\n    return diff\n  }\n}\n\nexport class UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder)\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = []\n    decoding.readVarUint(decoder) // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder))\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read()\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read()\n      this.keys.push(key)\n      return key\n    }\n  }\n}\n", "import * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nimport {\n  ID // eslint-disable-line\n} from '../internals.js'\n\nexport class DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder()\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n}\n\nexport class UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key)\n  }\n}\n\nexport class DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\n    this.dsCurrVal = 0\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal\n    this.dsCurrVal = clock\n    encoding.writeVarUint(this.restEncoder, diff)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase()\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1)\n    this.dsCurrVal += len\n  }\n}\n\nexport class UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map()\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.clientEncoder = new encoding.UintOptRleEncoder()\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.stringEncoder = new encoding.StringEncoder()\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\n    this.lenEncoder = new encoding.UintOptRleEncoder()\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client)\n    this.leftClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client)\n    this.rightClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed)\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key)\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++)\n      this.stringEncoder.write(key)\n    } else {\n      this.keyClockEncoder.write(clock)\n    }\n  }\n}\n", "/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  getState,\n  createID,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  readItemContent,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  DSEncoderV2,\n  DSDecoderV1,\n  DSEncoderV1,\n  mergeUpdates,\n  mergeUpdatesV2,\n  Skip,\n  diffUpdateV2,\n  convertUpdateFormatV2ToV1,\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as binary from 'lib0/binary'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as array from 'lib0/array'\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\n  encoder.writeClient(client)\n  encoding.writeVarUint(encoder.restEncoder, clock)\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0)\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((_clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    writeStructs(encoder, /** @type {Array<GC|Item>} */ (store.clients.get(client)), client, clock)\n  })\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create()\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs })\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen()\n          refs[i] = new GC(createID(client, clock), len)\n          clock += len\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder)\n          refs[i] = new Skip(createID(client, clock), len)\n          clock += len\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // left\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // left\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct\n          clock += struct.length\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = []\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop()\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  }\n  let curStructsTarget = getNextStructTarget()\n  if (curStructsTarget === null) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore()\n  const missingSV = new Map()\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client)\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock)\n    }\n  }\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\n  // caching the state because it is used very often\n  const state = new Map()\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client\n      const unapplicableItems = clientsStructRefs.get(client)\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i))\n        clientsStructRefs.delete(client)\n        unapplicableItems.i = 0\n        unapplicableItems.refs = []\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item])\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\n    }\n    stack.length = 0\n  }\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\n      const offset = localClock - stackHead.id.clock\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead)\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS()\n      } else {\n        const missing = stackHead.getMissing(transaction, store)\n        if (missing !== null) {\n          stack.push(stackHead)\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\n            addStackToRestSS()\n          } else {\n            stackHead = structRefs.refs[structRefs.i++]\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset)\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop())\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n    } else {\n      curStructsTarget = getNextStructTarget()\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2()\n    writeClientsStructs(encoder, restStructs, new Map())\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts a decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false\n    let retry = false\n    const doc = transaction.doc\n    const store = doc.store\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc)\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss)\n    const pending = store.pendingStructs\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client)\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock)\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\n      }\n    } else {\n      store.pendingStructs = restStructs\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\n      store.pendingStructs = null\n      applyUpdateV2(transaction.doc, update)\n    }\n  }, transactionOrigin, false)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts a decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update)\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\n}\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  const updates = [encoder.toUint8Array()]\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs)\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const clock = decoding.readVarUint(decoder.restDecoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\n  array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock)\n  })\n  return encoder\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc)\n  } else {\n    writeDocumentStateVector(encoder, doc)\n  }\n  return encoder.toUint8Array()\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\n", "import * as f from 'lib0/function'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l\n  const len = l.length\n  eventHandler.l = l.filter(g => f !== g)\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.')\n  }\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n", "import { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n", "import { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\n  }\n  return false\n}\n", "import {\n  AbstractType // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nexport const logType = type => {\n  const res = []\n  let n = type._start\n  while (n) {\n    res.push(n)\n    n = n.right\n  }\n  console.log('Children: ', res)\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content))\n}\n", "import {\n  YArray,\n  YMap,\n  readDeleteSet,\n  writeDeleteSet,\n  createDeleteSet,\n  DSEncoderV1, DSDecoderV1, ID, DeleteSet, YArrayEvent, Transaction, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding'\n\nimport { mergeDeleteSets, isDeleted } from './DeleteSet.js'\n\nexport class PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map()\n    this.yusers = storeType\n    this.doc = doc\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map()\n    this.dss = dss\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds')\n      const ids = user.get('ids')\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription)\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]))\n            }\n          })\n        })\n      })\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))))\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      )\n      ids.forEach(addClientId)\n    }\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      )\n    })\n    // add intial data\n    storeType.forEach(initUser)\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers\n    let user = users.get(userDescription)\n    if (!user) {\n      user = new YMap()\n      user.set('ids', new YArray())\n      user.set('ds', new YArray())\n      users.set(userDescription, user)\n    }\n    user.get('ids').push([clientid])\n    users.observe(_event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription)\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid])\n            }\n          })\n          const encoder = new DSEncoderV1()\n          const ds = this.dss.get(userDescription)\n          if (ds) {\n            writeDeleteSet(encoder, ds)\n            user.get('ds').push([encoder.toUint8Array()])\n          }\n        }\n      }, 0)\n    })\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds')\n        const ds = transaction.deleteSet\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1()\n          writeDeleteSet(encoder, ds)\n          yds.push([encoder.toUint8Array()])\n        }\n      })\n    })\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n", "import {\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  createID,\n  ContentType,\n  followRedone,\n  getItem,\n  ID, Doc, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as error from 'lib0/error'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nexport const relativePositionToJSON = rpos => {\n  const json = {}\n  if (rpos.type) {\n    json.type = rpos.type\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname\n  }\n  if (rpos.item) {\n    json.item = rpos.item\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc\n  }\n  return json\n}\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname ?? null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc)\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createRelativePosition = (type, item, assoc) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock)\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null, assoc)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc)\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0\n  return new RelativePosition(type, tname, itemID, assoc)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * Transform a relative position to an absolute position.\n *\n * If you want to share the relative position with other users, you should set\n * `followUndoneDeletions` to false to get consistent results across all clients.\n *\n * When calculating the absolute position, we try to follow the \"undone deletions\". This yields\n * better results for the user who performed undo. However, only the user who performed the undo\n * will get the better results, the other users don't know which operations recreated a deleted\n * range of content. There is more information in this ticket: https://github.com/yjs/yjs/issues/638\n *\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @param {boolean} followUndoneDeletions - whether to follow undone deletions - see https://github.com/yjs/yjs/issues/638\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc, followUndoneDeletions = true) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  const assoc = rpos.assoc\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followUndoneDeletions ? followRedone(store, rightID) : { item: getItem(store, rightID), diff: 0 }\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent)\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)) // adjust position based on left association if necessary\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followUndoneDeletions ? followRedone(store, typeID) : { item: getItem(store, typeID) }\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length\n    } else {\n      index = 0\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n)\n", "import {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  createID,\n  getState,\n  findIndexSS,\n  UpdateEncoderV2,\n  applyUpdateV2,\n  LazyStructReader,\n  equalDeleteSets,\n  UpdateDecoderV1, UpdateDecoderV2, DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item, // eslint-disable-line\n  mergeDeleteSets\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as set from 'lib0/set'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, _item => {})\n    meta.add(snapshot)\n  }\n}\n\n/**\n * @example\n *  const ydoc = new Y.Doc({ gc: false })\n *  ydoc.getText().insert(0, 'world!')\n *  const snapshot = Y.snapshot(ydoc)\n *  ydoc.getText().insert(0, 'hello ')\n *  const restored = Y.createDocFromSnapshot(ydoc, snapshot)\n *  assert(restored.getText().toString() === 'world!')\n *\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('Garbage-collection must be disabled in `originDoc`!')\n  }\n  const { sv, ds } = snapshot\n\n  const encoder = new UpdateEncoderV2()\n  originDoc.transact(transaction => {\n    let size = 0\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++\n      }\n    })\n    encoding.writeVarUint(encoder.restEncoder, size)\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n      const structs = originDoc.store.clients.get(client) || []\n      const lastStructIndex = findIndexSS(structs, clock - 1)\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\n      encoder.writeClient(client)\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0)\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0)\n      }\n    }\n    writeDeleteSet(encoder, ds)\n  })\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\n  return newDoc\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n */\nexport const snapshotContainsUpdateV2 = (snapshot, update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n    if ((snapshot.sv.get(curr.id.client) || 0) < curr.id.clock + curr.length) {\n      return false\n    }\n  }\n  const mergedDS = mergeDeleteSets([snapshot.ds, readDeleteSet(updateDecoder)])\n  return equalDeleteSets(snapshot.ds, mergedDS)\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n */\nexport const snapshotContainsUpdate = (snapshot, update) => snapshotContainsUpdateV2(snapshot, update, UpdateDecoderV1)\n", "import {\n  GC,\n  splitItem,\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math'\nimport * as error from 'lib0/error'\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  let mid = structs[right]\n  let midclock = mid.id.clock\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex]\n    midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n    midindex = math.floor((left + right) / 2)\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n", "import {\n  getState,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  generateNewClientId,\n  createID,\n  cleanupYTextAfterTransaction,\n  UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as set from 'lib0/set'\nimport * as logging from 'lib0/logging'\nimport { callAll } from 'lib0/function'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const ydoc = new Y.Doc()\n * const map = ydoc.getMap('map')\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * ydoc.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = []\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set()\n    /**\n     * @type {boolean}\n     */\n    this._needFormattingCleanup = false\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return true\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n * @return {number} # of merged structs\n */\nconst tryToMergeWithLefts = (structs, pos) => {\n  let right = structs[pos]\n  let left = structs[pos - 1]\n  let i = pos\n  for (; i > 0; right = left, left = structs[--i - 1]) {\n    if (left.deleted === right.deleted && left.constructor === right.constructor) {\n      if (left.mergeWith(right)) {\n        if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n          /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\n        }\n        continue\n      }\n    }\n    break\n  }\n  const merged = pos - i\n  if (merged) {\n    // remove all merged structs from the array\n    structs.splice(pos + 1 - merged, merged)\n  }\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiency and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[si]\n      ) {\n        si -= 1 + tryToMergeWithLefts(structs, si)\n      }\n    }\n  })\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    const mergeStructs = transaction._mergeStructs\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) => {\n          // We need to think about the possibility that the user transforms the\n          // Y.Doc in the event.\n          if (type._dEH.l.length > 0 && (type._item === null || !type._item.deleted)) {\n            events = events\n              .filter(event =>\n                event.target._item === null || !event.target._item.deleted\n              )\n            events\n              .forEach(event => {\n                event.currentTarget = type\n                // path is relative to the current target\n                event._path = null\n              })\n            // sort events by path length so that top-level events are fired first.\n            events\n              .sort((event1, event2) => event1.path.length - event2.path.length)\n            // We don't need to check for events.length\n            // because we know it has at least one element\n            callEventHandlerListeners(type._dEH, events, transaction)\n          }\n        })\n      })\n      fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      callAll(fs, [])\n      if (transaction._needFormattingCleanup) {\n        cleanupYTextAfterTransaction(transaction)\n      }\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos;) {\n            i -= 1 + tryToMergeWithLefts(structs, i)\n          }\n        }\n      })\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = mergeStructs.length - 1; i >= 0; i--) {\n        const { client, clock } = mergeStructs[i].id\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          if (tryToMergeWithLefts(structs, replacedStructPos + 1) > 1) {\n            continue // no need to perform next check, both are already merged\n          }\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLefts(structs, replacedStructPos)\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\n        doc.clientID = generateNewClientId()\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid\n          }\n          doc.subdocs.add(subdoc)\n        })\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction])\n        subdocsRemoved.forEach(subdoc => subdoc.destroy())\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  /**\n   * @type {any}\n   */\n  let result = null\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc])\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    result = f(doc._transaction)\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0]\n      doc._transaction = null\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0)\n      }\n    }\n  }\n  return result\n}\n", "import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  createID,\n  redoItem,\n  isParentOf,\n  followRedone,\n  getItemCleanStart,\n  isDeleted,\n  addToDeleteSet,\n  YEvent, Transaction, Doc, Item, GC, DeleteSet, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time'\nimport * as array from 'lib0/array'\nimport * as logging from 'lib0/logging'\nimport { ObservableV2 } from 'lib0/observable'\n\nexport class StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions\n    this.deletions = deletions\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false)\n    }\n  })\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {'undo'|'redo'} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && undoManager.currStackItem === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set()\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges, undoManager) !== null || performedChange\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      undoManager.currStackItem = performedChange ? stackItem : null\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0\n      }\n    })\n    _tr = transaction\n  }, undoManager)\n  const res = undoManager.currStackItem\n  if (res != null) {\n    const changedParentTypes = _tr.changedParentTypes\n    undoManager.emit('stack-item-popped', [{ stackItem: res, type: eventType, changedParentTypes, origin: undoManager }, undoManager])\n    undoManager.currStackItem = null\n  }\n  return res\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * @typedef {Object} StackItemEvent\n * @property {StackItem} StackItemEvent.stackItem\n * @property {any} StackItemEvent.origin\n * @property {'undo'|'redo'} StackItemEvent.type\n * @property {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>} StackItemEvent.changedParentTypes\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {ObservableV2<{'stack-item-added':function(StackItemEvent, UndoManager):void, 'stack-item-popped': function(StackItemEvent, UndoManager):void, 'stack-cleared': function({ undoStackCleared: boolean, redoStackCleared: boolean }):void, 'stack-item-updated': function(StackItemEvent, UndoManager):void }>}\n */\nexport class UndoManager extends ObservableV2 {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = _tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super()\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = []\n    this.doc = doc\n    this.addToScope(typeScope)\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    this.captureTransaction = captureTransaction\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    /**\n     * The currently popped stack item if UndoManager.undoing or UndoManager.redoing\n     *\n     * @type {StackItem|null}\n     */\n    this.currStackItem = null\n    this.lastChange = 0\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges\n    this.captureTimeout = captureTimeout\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true)\n      }\n      const insertions = new DeleteSet()\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0\n        const len = endClock - startClock\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len)\n        }\n      })\n      const now = time.getUnixTime()\n      let didAdd = false\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions))\n        didAdd = true\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true)\n        }\n      })\n      /**\n       * @type {[StackItemEvent, UndoManager]}\n       */\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent)\n      } else {\n        this.emit('stack-item-updated', changeEvent)\n      }\n    }\n    this.doc.on('afterTransaction', this.afterTransactionHandler)\n    this.doc.on('destroy', () => {\n      this.destroy()\n    })\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes]\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        if (ytype.doc !== this.doc) logging.warn('[yjs#509] Not same Y.Doc') // use MultiDocUndoManager instead. also see https://github.com/yjs/yjs/issues/509\n        this.scope.push(ytype)\n      }\n    })\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin)\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin)\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.undoStack = []\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.redoStack = []\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }])\n      })\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this)\n    this.doc.off('afterTransaction', this.afterTransactionHandler)\n    super.destroy()\n  }\n}\n", "import * as binary from 'lib0/binary'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\nimport * as f from 'lib0/function'\nimport * as logging from 'lib0/logging'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as string from 'lib0/string'\n\nimport {\n  ContentAny,\n  ContentBinary,\n  ContentDeleted,\n  ContentDoc,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentString,\n  ContentType,\n  createID,\n  decodeStateVector,\n  DSEncoderV1,\n  DSEncoderV2,\n  GC,\n  Item,\n  mergeDeleteSets,\n  readDeleteSet,\n  readItemContent,\n  Skip,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  writeDeleteSet,\n  YXmlElement,\n  YXmlHook\n} from '../internals.js'\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder)\n        yield new Skip(createID(client, clock), len)\n        clock += len\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        )\n        yield struct\n        clock += struct.length\n      } else {\n        const len = decoder.readLen()\n        yield new GC(createID(client, clock), len)\n        clock += len\n      }\n    }\n  }\n}\n\nexport class LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder)\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null\n    this.done = false\n    this.filterSkips = filterSkips\n    this.next()\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  logging.print('Structs: ', structs)\n  const ds = readDeleteSet(updateDecoder)\n  logging.print('DeleteSet: ', ds)\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n}\n\nexport class LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0\n    this.startClock = 0\n    this.written = 0\n    this.encoder = encoder\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = []\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let size = 0\n    let currClient = curr.id.client\n    let stopCounting = curr.id.clock !== 0 // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient)\n          encoding.writeVarUint(encoder.restEncoder, currClock)\n        }\n        currClient = curr.id.client\n        currClock = 0\n        stopCounting = curr.id.clock !== 0\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++\n      encoding.writeVarUint(encoder.restEncoder, currClient)\n      encoding.writeVarUint(encoder.restEncoder, currClock)\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder()\n    encoding.writeVarUint(enc, size)\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\n    encoder.restEncoder = enc\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0)\n    return encoder.toUint8Array()\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map()\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    // write the beginning to `from`\n    from.set(currClient, currClock)\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock)\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock)\n        // update currClient\n        currClient = curr.id.client\n      }\n      currClock = curr.id.clock + curr.length\n    }\n    // write the end to `to`\n    to.set(currClient, currClock)\n  }\n  return { from, to }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left)\n    const { client, clock } = leftItem.id\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n}\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null\n\n  const updateEncoder = new YEncoder()\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    )\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0]\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\n      let iterated = false\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next()\n        iterated = true\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n        currWrite = { struct: curr, offset: 0 }\n        currDecoder.next()\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\n            currWrite = { struct, offset: 0 }\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff\n            } else {\n              curr = sliceStruct(curr, diff)\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            currWrite = { struct: curr, offset: 0 }\n            currDecoder.next()\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\n      currDecoder.next()\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n      currWrite = { struct: next, offset: 0 }\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n    currWrite = null\n  }\n  finishLazyStructWriting(lazyStructEncoder)\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\n  const ds = mergeDeleteSets(dss)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv)\n  const encoder = new YEncoder()\n  const lazyStructWriter = new LazyStructWriter(encoder)\n  const decoder = new YDecoder(decoding.createDecoder(update))\n  const reader = new LazyStructReader(decoder, false)\n  while (reader.curr) {\n    const curr = reader.curr\n    const currClient = curr.id.client\n    const svClock = state.get(currClient) || 0\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next()\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\n      reader.next()\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\n        reader.next()\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next()\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter)\n  // write ds\n  const ds = readDeleteSet(decoder)\n  writeDeleteSet(encoder, ds)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\n    lazyWriter.written = 0\n  }\n}\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter)\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client)\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\n  }\n  struct.write(lazyWriter.encoder, offset)\n  lazyWriter.written++\n}\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter)\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i]\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written)\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @param {function(Item|GC|Skip):Item|GC|Skip} blockTransformer\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nexport const convertUpdateFormat = (update, blockTransformer, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  const updateEncoder = new YEncoder()\n  const lazyWriter = new LazyStructWriter(updateEncoder)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, blockTransformer(curr), 0)\n  }\n  finishLazyStructWriting(lazyWriter)\n  const ds = readDeleteSet(updateDecoder)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @typedef {Object} ObfuscatorOptions\n * @property {boolean} [ObfuscatorOptions.formatting=true]\n * @property {boolean} [ObfuscatorOptions.subdocs=true]\n * @property {boolean} [ObfuscatorOptions.yxml=true] Whether to obfuscate nodeName / hookName\n */\n\n/**\n * @param {ObfuscatorOptions} obfuscator\n */\nconst createObfuscator = ({ formatting = true, subdocs = true, yxml = true } = {}) => {\n  let i = 0\n  const mapKeyCache = map.create()\n  const nodeNameCache = map.create()\n  const formattingKeyCache = map.create()\n  const formattingValueCache = map.create()\n  formattingValueCache.set(null, null) // end of a formatting range should always be the end of a formatting range\n  /**\n   * @param {Item|GC|Skip} block\n   * @return {Item|GC|Skip}\n   */\n  return block => {\n    switch (block.constructor) {\n      case GC:\n      case Skip:\n        return block\n      case Item: {\n        const item = /** @type {Item} */ (block)\n        const content = item.content\n        switch (content.constructor) {\n          case ContentDeleted:\n            break\n          case ContentType: {\n            if (yxml) {\n              const type = /** @type {ContentType} */ (content).type\n              if (type instanceof YXmlElement) {\n                type.nodeName = map.setIfUndefined(nodeNameCache, type.nodeName, () => 'node-' + i)\n              }\n              if (type instanceof YXmlHook) {\n                type.hookName = map.setIfUndefined(nodeNameCache, type.hookName, () => 'hook-' + i)\n              }\n            }\n            break\n          }\n          case ContentAny: {\n            const c = /** @type {ContentAny} */ (content)\n            c.arr = c.arr.map(() => i)\n            break\n          }\n          case ContentBinary: {\n            const c = /** @type {ContentBinary} */ (content)\n            c.content = new Uint8Array([i])\n            break\n          }\n          case ContentDoc: {\n            const c = /** @type {ContentDoc} */ (content)\n            if (subdocs) {\n              c.opts = {}\n              c.doc.guid = i + ''\n            }\n            break\n          }\n          case ContentEmbed: {\n            const c = /** @type {ContentEmbed} */ (content)\n            c.embed = {}\n            break\n          }\n          case ContentFormat: {\n            const c = /** @type {ContentFormat} */ (content)\n            if (formatting) {\n              c.key = map.setIfUndefined(formattingKeyCache, c.key, () => i + '')\n              c.value = map.setIfUndefined(formattingValueCache, c.value, () => ({ i }))\n            }\n            break\n          }\n          case ContentJSON: {\n            const c = /** @type {ContentJSON} */ (content)\n            c.arr = c.arr.map(() => i)\n            break\n          }\n          case ContentString: {\n            const c = /** @type {ContentString} */ (content)\n            c.str = string.repeat((i % 10) + '', c.str.length)\n            break\n          }\n          default:\n            // unknown content type\n            error.unexpectedCase()\n        }\n        if (item.parentSub) {\n          item.parentSub = map.setIfUndefined(mapKeyCache, item.parentSub, () => i + '')\n        }\n        i++\n        return block\n      }\n      default:\n        // unknown block-type\n        error.unexpectedCase()\n    }\n  }\n}\n\n/**\n * This function obfuscates the content of a Yjs update. This is useful to share\n * buggy Yjs documents while significantly limiting the possibility that a\n * developer can on the user. Note that it might still be possible to deduce\n * some information by analyzing the \"structure\" of the document or by analyzing\n * the typing behavior using the CRDT-related metadata that is still kept fully\n * intact.\n *\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nexport const obfuscateUpdate = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nexport const obfuscateUpdateV2 = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV2, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, f.id, UpdateDecoderV1, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, f.id, UpdateDecoderV2, UpdateEncoderV1)\n", "import {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set'\nimport * as array from 'lib0/array'\nimport * as error from 'lib0/error'\n\nconst errorComputeChanges = 'You must not compute changes after the event-handler fired.'\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null\n    /**\n     * @type {Array<string|number>|null}\n     */\n    this._path = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    return this._path || (this._path = getPathTo(this.currentTarget, this.target))\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const keys = new Map()\n      const target = this.target\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._keys = keys\n    }\n    return this._keys\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted && c.countable) {\n          i += c.length\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\n  }\n  return path\n}\n", "import {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  getState,\n  isVisible,\n  ContentType,\n  createID,\n  ContentAny,\n  ContentBinary,\n  getItemCleanStart,\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as iterator from 'lib0/iterator'\nimport * as error from 'lib0/error'\nimport * as math from 'lib0/math'\n\nconst maxSearchMarker = 80\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0\n\nexport class ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true\n    this.p = p\n    this.index = index\n    this.timestamp = globalSearchMarkerTimestamp++\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false\n  marker.p = p\n  p.marker = true\n  marker.index = index\n  marker.timestamp = globalSearchMarkerTimestamp++\n}\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\n    overwriteMarker(marker, p, index)\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index)\n    searchMarker.push(pm)\n    return pm\n  }\n}\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nexport const findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\n  let p = yarray._start\n  let pindex = 0\n  if (marker !== null) {\n    p = marker.p\n    pindex = marker.index\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length\n    }\n    p = p.right\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex)\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n}\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nexport const updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i]\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p\n      p.marker = false\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1)\n        continue\n      }\n      m.p = p\n      p.marker = true\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len)\n    }\n  }\n}\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nexport const getTypeChildren = t => {\n  let s = t._start\n  const arr = []\n  while (s) {\n    arr.push(s)\n    s = s.right\n  }\n  return arr\n}\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */\n  _write (_encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, _parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start\n  }\n  if (end < 0) {\n    end = type._length + end\n  }\n  let len = end - start\n  const cs = []\n  let n = type._start\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      if (c.length <= start) {\n        start -= c.length\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i])\n          len--\n        }\n        start = 0\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on every element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on every element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  const marker = findMarker(type, index)\n  let n = type._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const store = doc.store\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction, 0)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c)\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c)\n          break\n        default:\n          packJsonContent()\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n              left.integrate(transaction, 0)\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\n              left.integrate(transaction, 0)\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\n                left.integrate(transaction, 0)\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  })\n  packJsonContent()\n}\n\nconst lengthExceeded = () => error.create('Length exceeded!')\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded()\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length)\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start })\n  let n = marker.p\n  if (n) {\n    while (n.right) {\n      n = n.right\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index\n  const startLength = length\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw lengthExceeded()\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {Snapshot} snapshot\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAllSnapshot = (parent, snapshot) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    /**\n     * @type {Item|null}\n     */\n    let v = value\n    while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n      v = v.left\n    }\n    if (v !== null && isVisible(v, snapshot)) {\n      res[key] = v.content.getContent()[v.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n", "/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListPushGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\nimport { typeListSlice } from './AbstractType.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nexport class YArrayEvent extends YEvent {}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    /**\n     * @type {YArray<T>}\n     */\n    const a = new YArray()\n    a.push(items)\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YArray<T>}\n   */\n  clone () {\n    /**\n     * @type {YArray<T>}\n     */\n    const arr = new YArray()\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? /** @type {typeof el} */ (el.clone()) : el\n    ))\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content)\n    }\n  }\n\n  /**\n   * Prepends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to prepend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Returns a portion of this YArray into a JavaScript Array selected\n   * from start to end (end not included).\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function once on every element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYArray = _decoder => new YArray()\n", "/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as iterator from 'lib0/iterator'\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<[string, MapType]>}\n */\nexport class YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null\n\n    if (entries === undefined) {\n      this._prelimContent = new Map()\n    } else {\n      this._prelimContent = new Map(entries)\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value)\n    })\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    /**\n     * @type {YMap<MapType>}\n     */\n    const map = new YMap()\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ (value.clone()) : value)\n    })\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<MapType>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => /** @type {any} */ ([v[0], v[1].content.getContent()[v[1].length - 1]]))\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    })\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   * @template {MapType} VAL\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {VAL} value The value of the element to add\n   * @return {VAL}\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, /** @type {any} */ (value))\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (_value, key, map) {\n          typeMapDelete(transaction, map, key)\n        })\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear()\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYMap = _decoder => new YMap()\n", "/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  getItemCleanStart,\n  getState,\n  isVisible,\n  createID,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  GC,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  iterateDeletedStructs,\n  iterateStructs,\n  findMarker,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  updateMarkerChanges,\n  ContentType,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as object from 'lib0/object'\nimport * as map from 'lib0/map'\nimport * as error from 'lib0/error'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left\n    this.right = right\n    this.index = index\n    this.currentAttributes = currentAttributes\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase()\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length\n        }\n        break\n    }\n    this.left = this.right\n    this.right = this.right.right\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\n          }\n          pos.index += pos.right.length\n          count -= pos.right.length\n        }\n        break\n    }\n    pos.left = pos.right\n    pos.right = pos.right.right\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {boolean} useSearchMarker\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index, useSearchMarker) => {\n  const currentAttributes = new Map()\n  const marker = useSearchMarker ? findMarker(parent, index) : null\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\n    return findNextPosition(transaction, pos, index)\n  }\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\n    }\n    currPos.forward()\n  }\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left\n    const right = currPos.right\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n    nextFormat.integrate(transaction, 0)\n    currPos.right = nextFormat\n    currPos.forward()\n  })\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] ?? null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\n      //\n    } else {\n      break\n    }\n    currPos.forward()\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currPos.currentAttributes.get(key) ?? null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      const { left, right } = currPos\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n      currPos.right.integrate(transaction, 0)\n      currPos.forward()\n    }\n  }\n  return negatedAttributes\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((_val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  })\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text))\n  let { left, right, index } = currPos\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\n  right.integrate(transaction, 0)\n  currPos.right = right\n  currPos.index = index\n  currPos.forward()\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value)\n            }\n            currPos.right.delete(transaction)\n          } else {\n            currPos.currentAttributes.set(key, value)\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          break\n      }\n    }\n    currPos.forward()\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\n    currPos.right.integrate(transaction, 0)\n    currPos.forward()\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  /**\n   * @type {Item|null}\n   */\n  let end = start\n  /**\n   * @type {Map<string,ContentFormat>}\n   */\n  const endFormats = map.create()\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      const cf = /** @type {ContentFormat} */ (end.content)\n      endFormats.set(cf.key, cf)\n    }\n    end = end.right\n  }\n  let cleanups = 0\n  let reachedCurr = false\n  while (start !== end) {\n    if (curr === start) {\n      reachedCurr = true\n    }\n    if (!start.deleted) {\n      const content = start.content\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content)\n          const startAttrValue = startAttributes.get(key) ?? null\n          if (endFormats.get(key) !== content || startAttrValue === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction)\n            cleanups++\n            if (!reachedCurr && (currAttributes.get(key) ?? null) === value && startAttrValue !== value) {\n              if (startAttrValue === null) {\n                currAttributes.delete(key)\n              } else {\n                currAttributes.set(key, startAttrValue)\n              }\n            }\n          }\n          if (!reachedCurr && !start.deleted) {\n            updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ (content))\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right)\n  }\n  return cleanups\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right\n  }\n  const attrs = new Set()\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key\n      if (attrs.has(key)) {\n        item.delete(transaction)\n      } else {\n        attrs.add(key)\n      }\n    }\n    item = item.left\n  }\n}\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nexport const cleanupYTextFormatting = type => {\n  let res = 0\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start)\n    let end = type._start\n    let startAttributes = map.create()\n    const currentAttributes = map.copy(startAttributes)\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\n            startAttributes = map.copy(currentAttributes)\n            start = end\n            break\n        }\n      }\n      end = end.right\n    }\n  })\n  return res\n}\n\n/**\n * This will be called by the transction once the event handlers are called to potentially cleanup\n * formatting attributes.\n *\n * @param {Transaction} transaction\n */\nexport const cleanupYTextAfterTransaction = transaction => {\n  /**\n   * @type {Set<YText>}\n   */\n  const needFullCleanup = new Set()\n  // check if another formatting item was inserted\n  const doc = transaction.doc\n  for (const [client, afterClock] of transaction.afterState.entries()) {\n    const clock = transaction.beforeState.get(client) || 0\n    if (afterClock === clock) {\n      continue\n    }\n    iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n      if (\n        !item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat && item.constructor !== GC\n      ) {\n        needFullCleanup.add(/** @type {any} */ (item).parent)\n      }\n    })\n  }\n  // cleanup in a new transaction\n  transact(doc, (t) => {\n    iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n      if (item instanceof GC || !(/** @type {YText} */ (item.parent)._hasFormatting) || needFullCleanup.has(/** @type {YText} */ (item.parent))) {\n        return\n      }\n      const parent = /** @type {YText} */ (item.parent)\n      if (item.content.constructor === ContentFormat) {\n        needFullCleanup.add(parent)\n      } else {\n        // If no formatting attribute was inserted or deleted, we can make due with contextless\n        // formatting cleanups.\n        // Contextless: it is not necessary to compute currentAttributes for the affected position.\n        cleanupContextlessFormattingGap(t, item)\n      }\n    })\n    // If a formatting item was inserted, we simply clean the whole type.\n    // We need to compute currentAttributes for the current position anyway.\n    for (const yText of needFullCleanup) {\n      cleanupYTextFormatting(yText)\n    }\n  })\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length\n  const startAttrs = map.copy(currPos.currentAttributes)\n  const start = currPos.right\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          currPos.right.delete(transaction)\n          break\n      }\n    }\n    currPos.forward()\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes)\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\n  }\n  return currPos\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.keysChanged.add(sub)\n      }\n    })\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = []\n      transact(y, transaction => {\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op = null\n            switch (action) {\n              case 'delete':\n                if (deleteLen > 0) {\n                  op = { delete: deleteLen }\n                }\n                deleteLen = 0\n                break\n              case 'insert':\n                if (typeof insert === 'object' || insert.length > 0) {\n                  op = { insert }\n                  if (currentAttributes.size > 0) {\n                    op.attributes = {}\n                    currentAttributes.forEach((value, key) => {\n                      if (value !== null) {\n                        op.attributes[key] = value\n                      }\n                    })\n                  }\n                }\n                insert = ''\n                break\n              case 'retain':\n                if (retain > 0) {\n                  op = { retain }\n                  if (!object.isEmpty(attributes)) {\n                    op.attributes = object.assign({}, attributes)\n                  }\n                }\n                retain = 0\n                break\n            }\n            if (op) delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = item.content.getContent()[0]\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) ?? null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) ?? null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) ?? null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n      this._delta = delta\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n    /**\n     * @type {Array<ArraySearchMarker>|null}\n     */\n    this._searchMarker = []\n    /**\n     * Whether this YText contains formatting attributes.\n     * This flag is updated when a formatting item is integrated (see ContentFormat.integrate)\n     */\n    this._hasFormatting = false\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    const event = new YTextEvent(this, transaction, parentSubs)\n    callTypeObservers(this, transaction, event)\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local && this._hasFormatting) {\n      transaction._needFormattingCleanup = true\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true\n          attributes[key] = value\n        })\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    const computeDelta = () => {\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value\n                })\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }\n    if (snapshot || prevSnapshot) {\n      // snapshots are merged again after the transaction, so we need to keep the\n      // transaction alive until we are done\n      transact(doc, transaction => {\n        if (snapshot) {\n          splitSnapshotAffectedStructs(transaction, snapshot)\n        }\n        if (prevSnapshot) {\n          splitSnapshotAffectedStructs(transaction, prevSnapshot)\n        }\n        computeDelta()\n      }, 'cleanup')\n    } else {\n      computeDelta()\n    }\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, !attributes)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, pos, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} [attributes] Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes) {\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, !attributes)\n        insertText(transaction, this, pos, embed, attributes || {})\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes || {}))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index, true), length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index, false)\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = _decoder => new YText()\n", "/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListInsertGenericsAfter,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  typeListGet,\n  typeListSlice,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as array from 'lib0/array'\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = n && n.content && /** @type {any} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment()\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\n      })\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Prepends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to prepend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Returns a portion of this YXmlFragment into a JavaScript Array selected\n   * from start to end (end not included).\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on every child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = _decoder => new YXmlFragment()\n", "import * as object from 'lib0/object'\n\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapHas,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeMapGetAllSnapshot,\n  typeListForEach,\n  YXmlElementRefID,\n  Snapshot, YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @typedef {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} ValueTypes\n */\n\n/**\n * An YXmlElement imitates the behavior of a\n * https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n *\n * @template {{ [key: string]: ValueTypes }} [KV={ [key: string]: string }]\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YXmlElement<KV>}\n   */\n  clone () {\n    /**\n     * @type {YXmlElement<KV>}\n     */\n    const el = new YXmlElement(this.nodeName)\n    const attrs = this.getAttributes()\n    object.forEach(attrs, (value, key) => {\n      if (typeof value === 'string') {\n        el.setAttribute(key, value)\n      }\n    })\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {string} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that is to be set.\n   * @param {KV[KEY]} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {KV[KEY]|undefined} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {string} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return /** @type {any} */ (snapshot ? typeMapGetAllSnapshot(this, snapshot) : typeMapGetAll(this))\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      const value = attrs[key]\n      if (typeof value === 'string') {\n        dom.setAttribute(key, value)\n      }\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID)\n    encoder.writeKey(this.nodeName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\n", "import {\n  YEvent,\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n", "import {\n  YMap,\n  YXmlHookRefID,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName)\n    this.forEach((value, key) => {\n      el.set(key, value)\n    })\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID)\n    encoder.writeKey(this.hookName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey())\n", "import {\n  YText,\n  YXmlTextRefID,\n  ContentType, YXmlElement, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * Makes a copy of this data type that can be included somewhere else.\n   *\n   * Note that the content is only readable _after_ it has been included somewhere in the Ydoc.\n   *\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (const nodeName in delta.attributes) {\n        const attrs = []\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n", "import {\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id\n    this.length = length\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n", "import {\n  AbstractStruct,\n  addStruct,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.length -= offset\n    }\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber)\n    encoder.writeLen(this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\n", "import {\n  addToDeleteSet,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\n    item.markDeleted()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\n", "import {\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false })\n\n/**\n * @private\n */\nexport class ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * @type {any}\n     */\n    const opts = {}\n    this.opts = opts\n    if (!doc.gc) {\n      opts.gc = false\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item\n    transaction.subdocsAdded.add(this.doc)\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc)\n    } else {\n      transaction.subdocsRemoved.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid)\n    encoder.writeAny(this.opts)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nexport const readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()))\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\n", "import {\n  YText, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {ContentFormat}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} item\n   */\n  integrate (_transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    const p = /** @type {YText} */ (item.parent)\n    p._searchMarker = null\n    p._hasFormatting = true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key)\n    encoder.writeJSON(this.value)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON())\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString()\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n", "import {\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeAny(c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny())\n  }\n  return new ContentAny(cs)\n}\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1)\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�'\n      // replace right as well\n      right.str = '�' + right.str.slice(1)\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoder.readString())\n", "import {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // same as above\n        transaction._mergeStructs.push(item)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\n", "import {\n  GC,\n  getState,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentDoc,\n  createID,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  isDeleted,\n  StackItem, DeleteSet, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as binary from 'lib0/binary'\nimport * as array from 'lib0/array'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.markDeleted()\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * @param {Array<StackItem>} stack\n * @param {ID} id\n */\nconst isDeletedByUndoStack = (stack, id) => array.some(stack, /** @param {StackItem} s */ s => isDeleted(s.deletions, id))\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n * @param {import('../utils/UndoManager.js').UndoManager} um\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) => {\n  const doc = transaction.doc\n  const store = doc.store\n  const ownClientID = doc.clientID\n  const redone = item.redone\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\n  /**\n   * @type {Item|null}\n   */\n  let left = null\n  /**\n   * @type {Item|null}\n   */\n  let right\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  } else {\n    right = null\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && (left.right.redone || isDeleted(itemsToDelete, left.right.id) || isDeletedByUndoStack(um.undoStack, left.right.id) || isDeletedByUndoStack(um.redoStack, left.right.id))) {\n        left = left.right\n        // follow redone\n        while (left.redone) left = getItemCleanStart(transaction, left.redone)\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null\n    }\n  }\n  const nextClock = getState(store, ownClientID)\n  const nextId = createID(ownClientID, nextClock)\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = nextId\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction, 0)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin)\n      this.origin = this.left.lastId\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\n      this.rightOrigin = this.right.id\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null\n    } else if (!this.parent) {\n      // only set parent if this shouldn't be garbage collected\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent\n        this.parentSub = this.left.parentSub\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent\n        this.parentSub = this.right.parentSub\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent)\n      if (parentItem.constructor === GC) {\n        this.parent = null\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\n      this.origin = this.left.lastId\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left\n\n        /**\n         * @type {Item|null}\n         */\n        let o\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (o !== null && o.left !== null) {\n            o = o.left\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set()\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set()\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o)\n          conflictingItems.add(o)\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o\n              conflictingItems.clear()\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o\n              conflictingItems.clear()\n            }\n          } else {\n            break\n          }\n          o = o.right\n        }\n        this.left = left\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right\n        this.right = right\n        this.left.right = this\n      } else {\n        let r\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (r !== null && r.left !== null) {\n            r = r.left\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\n        }\n        this.right = r\n      }\n      if (this.right !== null) {\n        this.right.left = this\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction)\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\n      }\n      addStruct(transaction.doc.store, this)\n      this.content.integrate(transaction, this)\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction)\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length\n            }\n          }\n        })\n      }\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.markDeleted()\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoder.writeInfo(info)\n    if (origin !== null) {\n      encoder.writeLeftID(origin)\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      if (parent._item !== undefined) {\n        const parentItem = parent._item\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent)\n          encoder.writeParentInfo(true) // write parentYKey\n          encoder.writeString(ykey)\n        } else {\n          encoder.writeParentInfo(false) // write parent id\n          encoder.writeLeftID(parentItem.id)\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true) // write parentYKey\n        encoder.writeString(parent)\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false) // write parent id\n        encoder.writeLeftID(parent)\n      } else {\n        error.unexpectedCase()\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {AbstractContent}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} _item\n   */\n  integrate (_transaction, _item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   */\n  delete (_transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} _store\n   */\n  gc (_store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   * @param {number} _offset\n   */\n  write (_encoder, _offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n", "import {\n  AbstractStruct,\n  UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nexport const structSkipRefNumber = 10\n\n/**\n * @private\n */\nexport class Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber)\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n", "/** eslint-env browser */\n\nexport {\n  Doc,\n  Transaction,\n  YArray as Array,\n  YMap as Map,\n  YText as Text,\n  YXmlText as XmlText,\n  YXmlHook as XmlHook,\n  YXmlElement as XmlElement,\n  YXmlFragment as XmlFragment,\n  YXmlEvent,\n  YMapEvent,\n  YArrayEvent,\n  YTextEvent,\n  YEvent,\n  Item,\n  AbstractStruct,\n  GC,\n  Skip,\n  ContentBinary,\n  ContentDeleted,\n  ContentDoc,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentAny,\n  ContentString,\n  ContentType,\n  AbstractType,\n  getTypeChildren,\n  createRelativePositionFromTypeIndex,\n  createRelativePositionFromJSON,\n  createAbsolutePositionFromRelativePosition,\n  compareRelativePositions,\n  AbsolutePosition,\n  RelativePosition,\n  ID,\n  createID,\n  compareIDs,\n  getState,\n  Snapshot,\n  createSnapshot,\n  createDeleteSet,\n  createDeleteSetFromStructStore,\n  cleanupYTextFormatting,\n  snapshot,\n  emptySnapshot,\n  findRootTypeKey,\n  findIndexSS,\n  getItem,\n  typeListToArraySnapshot,\n  typeMapGetSnapshot,\n  typeMapGetAllSnapshot,\n  createDocFromSnapshot,\n  iterateDeletedStructs,\n  applyUpdate,\n  applyUpdateV2,\n  readUpdate,\n  readUpdateV2,\n  encodeStateAsUpdate,\n  encodeStateAsUpdateV2,\n  encodeStateVector,\n  UndoManager,\n  decodeSnapshot,\n  encodeSnapshot,\n  decodeSnapshotV2,\n  encodeSnapshotV2,\n  decodeStateVector,\n  logUpdate,\n  logUpdateV2,\n  decodeUpdate,\n  decodeUpdateV2,\n  relativePositionToJSON,\n  isDeleted,\n  isParentOf,\n  equalSnapshots,\n  PermanentUserData, // @TODO experimental\n  tryGc,\n  transact,\n  AbstractConnector,\n  logType,\n  mergeUpdates,\n  mergeUpdatesV2,\n  parseUpdateMeta,\n  parseUpdateMetaV2,\n  encodeStateVectorFromUpdate,\n  encodeStateVectorFromUpdateV2,\n  encodeRelativePosition,\n  decodeRelativePosition,\n  diffUpdate,\n  diffUpdateV2,\n  convertUpdateFormatV1ToV2,\n  convertUpdateFormatV2ToV1,\n  obfuscateUpdate,\n  obfuscateUpdateV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  equalDeleteSets,\n  mergeDeleteSets,\n  snapshotContainsUpdate\n} from './internals.js'\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {})\n\nconst importIdentifier = '__ $YJS$ __'\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438')\n}\nglo[importIdentifier] = true\n", "/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n", "/**\n * Efficient diffs.\n *\n * @module diff\n */\n\nimport { equalityStrict } from './function.js'\n\n/**\n * A SimpleDiff describes a change on a String.\n *\n * ```js\n * console.log(a) // the old value\n * console.log(b) // the updated value\n * // Apply changes of diff (pseudocode)\n * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\n * a.insert(diff.index, diff.insert) // Insert `diff.insert`\n * a === b // values match\n * ```\n *\n * @typedef {Object} SimpleDiff\n * @property {Number} index The index where changes were applied\n * @property {Number} remove The number of characters to delete starting\n *                                  at `index`.\n * @property {T} insert The new text to insert at `index` after applying\n *                           `delete`\n *\n * @template T\n */\n\nconst highSurrogateRegex = /[\\uD800-\\uDBFF]/\nconst lowSurrogateRegex = /[\\uDC00-\\uDFFF]/\n\n/**\n * Create a diff between two strings. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * @function\n *\n * @param {string} a The old version of the string\n * @param {string} b The updated version of the string\n * @return {SimpleDiff<string>} The diff description.\n */\nexport const simpleDiffString = (a, b) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  while (left < a.length && left < b.length && a[left] === b[left]) {\n    left++\n  }\n  // If the last same character is a high surrogate, we need to rollback to the previous character\n  if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--\n  while (right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]) {\n    right++\n  }\n  // If the last same character is a low surrogate, we need to rollback to the previous character\n  if (right > 0 && lowSurrogateRegex.test(a[a.length - right])) right--\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n\n/**\n * @todo Remove in favor of simpleDiffString\n * @deprecated\n */\nexport const simpleDiff = simpleDiffString\n\n/**\n * Create a diff between two arrays. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * Note: This is basically the same function as above. Another function was created so that the runtime\n * can better optimize these function calls.\n *\n * @function\n * @template T\n *\n * @param {Array<T>} a The old version of the array\n * @param {Array<T>} b The updated version of the array\n * @param {function(T, T):boolean} [compare]\n * @return {SimpleDiff<Array<T>>} The diff description.\n */\nexport const simpleDiffArray = (a, b, compare = equalityStrict) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  while (left < a.length && left < b.length && compare(a[left], b[left])) {\n    left++\n  }\n  while (right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])) {\n    right++\n  }\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n\n/**\n * Diff text and try to diff at the current cursor position.\n *\n * @param {string} a\n * @param {string} b\n * @param {number} cursor This should refer to the current left cursor-range position\n */\nexport const simpleDiffStringWithCursor = (a, b, cursor) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  // Iterate left to the right until we find a changed character\n  // First iteration considers the current cursor position\n  while (\n    left < a.length &&\n    left < b.length &&\n    a[left] === b[left] &&\n    left < cursor\n  ) {\n    left++\n  }\n  // If the last same character is a high surrogate, we need to rollback to the previous character\n  if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--\n  // Iterate right to the left until we find a changed character\n  while (\n    right + left < a.length &&\n    right + left < b.length &&\n    a[a.length - right - 1] === b[b.length - right - 1]\n  ) {\n    right++\n  }\n  // If the last same character is a low surrogate, we need to rollback to the previous character\n  if (right > 0 && lowSurrogateRegex.test(a[a.length - right])) right--\n  // Try to iterate left further to the right without caring about the current cursor position\n  while (\n    right + left < a.length &&\n    right + left < b.length &&\n    a[left] === b[left]\n  ) {\n    left++\n  }\n  if (left > 0 && highSurrogateRegex.test(a[left - 1])) left--\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n", "import { PluginKey } from 'prosemirror-state' // eslint-disable-line\n\n/**\n * The unique prosemirror plugin key for syncPlugin\n *\n * @public\n */\nexport const ySyncPluginKey = new PluginKey('y-sync')\n\n/**\n * The unique prosemirror plugin key for undoPlugin\n *\n * @public\n */\nexport const yUndoPluginKey = new PluginKey('y-undo')\n\n/**\n * The unique prosemirror plugin key for cursorPlugin\n *\n * @public\n */\nexport const yCursorPluginKey = new PluginKey('yjs-cursor')\n", "/**\n * @module bindings/prosemirror\n */\n\nimport { createMutex } from 'lib0/mutex'\nimport * as PModel from 'prosemirror-model'\nimport { Plugin, TextSelection } from \"prosemirror-state\"; // eslint-disable-line\nimport * as math from 'lib0/math'\nimport * as object from 'lib0/object'\nimport * as set from 'lib0/set'\nimport { simpleDiff } from 'lib0/diff'\nimport * as error from 'lib0/error'\nimport { ySyncPluginKey, yUndoPluginKey } from './keys.js'\nimport * as Y from 'yjs'\nimport {\n  absolutePositionToRelativePosition,\n  relativePositionToAbsolutePosition\n} from '../lib.js'\nimport * as random from 'lib0/random'\nimport * as environment from 'lib0/environment'\nimport * as dom from 'lib0/dom'\nimport * as eventloop from 'lib0/eventloop'\n\n/**\n * @param {Y.Item} item\n * @param {Y.Snapshot} [snapshot]\n */\nexport const isVisible = (item, snapshot) =>\n  snapshot === undefined\n    ? !item.deleted\n    : (snapshot.sv.has(item.id.client) && /** @type {number} */\n      (snapshot.sv.get(item.id.client)) > item.id.clock &&\n      !Y.isDeleted(snapshot.ds, item.id))\n\n/**\n * Either a node if type is YXmlElement or an Array of text nodes if YXmlText\n * @typedef {Map<Y.AbstractType<any>, PModel.Node | Array<PModel.Node>>} ProsemirrorMapping\n */\n\n/**\n * @typedef {Object} ColorDef\n * @property {string} ColorDef.light\n * @property {string} ColorDef.dark\n */\n\n/**\n * @typedef {Object} YSyncOpts\n * @property {Array<ColorDef>} [YSyncOpts.colors]\n * @property {Map<string,ColorDef>} [YSyncOpts.colorMapping]\n * @property {Y.PermanentUserData|null} [YSyncOpts.permanentUserData]\n * @property {ProsemirrorMapping} [YSyncOpts.mapping]\n * @property {function} [YSyncOpts.onFirstRender] Fired when the content from Yjs is initially rendered to ProseMirror\n */\n\n/**\n * @type {Array<ColorDef>}\n */\nconst defaultColors = [{ light: '#ecd44433', dark: '#ecd444' }]\n\n/**\n * @param {Map<string,ColorDef>} colorMapping\n * @param {Array<ColorDef>} colors\n * @param {string} user\n * @return {ColorDef}\n */\nconst getUserColor = (colorMapping, colors, user) => {\n  // @todo do not hit the same color twice if possible\n  if (!colorMapping.has(user)) {\n    if (colorMapping.size < colors.length) {\n      const usedColors = set.create()\n      colorMapping.forEach((color) => usedColors.add(color))\n      colors = colors.filter((color) => !usedColors.has(color))\n    }\n    colorMapping.set(user, random.oneOf(colors))\n  }\n  return /** @type {ColorDef} */ (colorMapping.get(user))\n}\n\n/**\n * This plugin listens to changes in prosemirror view and keeps yXmlState and view in sync.\n *\n * This plugin also keeps references to the type and the shared document so other plugins can access it.\n * @param {Y.XmlFragment} yXmlFragment\n * @param {YSyncOpts} opts\n * @return {any} Returns a prosemirror plugin that binds to this type\n */\nexport const ySyncPlugin = (yXmlFragment, {\n  colors = defaultColors,\n  colorMapping = new Map(),\n  permanentUserData = null,\n  onFirstRender = () => {},\n  mapping\n} = {}) => {\n  let initialContentChanged = false\n  const binding = new ProsemirrorBinding(yXmlFragment, mapping)\n  const plugin = new Plugin({\n    props: {\n      editable: (state) => {\n        const syncState = ySyncPluginKey.getState(state)\n        return syncState.snapshot == null && syncState.prevSnapshot == null\n      }\n    },\n    key: ySyncPluginKey,\n    state: {\n      /**\n       * @returns {any}\n       */\n      init: (_initargs, _state) => {\n        return {\n          type: yXmlFragment,\n          doc: yXmlFragment.doc,\n          binding,\n          snapshot: null,\n          prevSnapshot: null,\n          isChangeOrigin: false,\n          isUndoRedoOperation: false,\n          addToHistory: true,\n          colors,\n          colorMapping,\n          permanentUserData\n        }\n      },\n      apply: (tr, pluginState) => {\n        const change = tr.getMeta(ySyncPluginKey)\n        if (change !== undefined) {\n          pluginState = Object.assign({}, pluginState)\n          for (const key in change) {\n            pluginState[key] = change[key]\n          }\n        }\n        pluginState.addToHistory = tr.getMeta('addToHistory') !== false\n        // always set isChangeOrigin. If undefined, this is not change origin.\n        pluginState.isChangeOrigin = change !== undefined &&\n          !!change.isChangeOrigin\n        pluginState.isUndoRedoOperation = change !== undefined && !!change.isChangeOrigin && !!change.isUndoRedoOperation\n        if (binding.prosemirrorView !== null) {\n          if (\n            change !== undefined &&\n            (change.snapshot != null || change.prevSnapshot != null)\n          ) {\n            // snapshot changed, rerender next\n            eventloop.timeout(0, () => {\n              if (binding.prosemirrorView == null) {\n                return\n              }\n              if (change.restore == null) {\n                binding._renderSnapshot(\n                  change.snapshot,\n                  change.prevSnapshot,\n                  pluginState\n                )\n              } else {\n                binding._renderSnapshot(\n                  change.snapshot,\n                  change.snapshot,\n                  pluginState\n                )\n                // reset to current prosemirror state\n                delete pluginState.restore\n                delete pluginState.snapshot\n                delete pluginState.prevSnapshot\n                binding.mux(() => {\n                  binding._prosemirrorChanged(\n                    binding.prosemirrorView.state.doc\n                  )\n                })\n              }\n            })\n          }\n        }\n        return pluginState\n      }\n    },\n    view: (view) => {\n      binding.initView(view)\n      if (mapping == null) {\n        // force rerender to update the bindings mapping\n        binding._forceRerender()\n      }\n      onFirstRender()\n      return {\n        update: () => {\n          const pluginState = plugin.getState(view.state)\n          if (\n            pluginState.snapshot == null && pluginState.prevSnapshot == null\n          ) {\n            if (\n              // If the content doesn't change initially, we don't render anything to Yjs\n              // If the content was cleared by a user action, we want to catch the change and\n              // represent it in Yjs\n              initialContentChanged ||\n              view.state.doc.content.findDiffStart(\n                view.state.doc.type.createAndFill().content\n              ) !== null\n            ) {\n              initialContentChanged = true\n              if (\n                pluginState.addToHistory === false &&\n                !pluginState.isChangeOrigin\n              ) {\n                const yUndoPluginState = yUndoPluginKey.getState(view.state)\n                /**\n                 * @type {Y.UndoManager}\n                 */\n                const um = yUndoPluginState && yUndoPluginState.undoManager\n                if (um) {\n                  um.stopCapturing()\n                }\n              }\n              binding.mux(() => {\n                /** @type {Y.Doc} */ (pluginState.doc).transact((tr) => {\n                  tr.meta.set('addToHistory', pluginState.addToHistory)\n                  binding._prosemirrorChanged(view.state.doc)\n                }, ySyncPluginKey)\n              })\n            }\n          }\n        },\n        destroy: () => {\n          binding.destroy()\n        }\n      }\n    }\n  })\n  return plugin\n}\n\n/**\n * @param {any} tr\n * @param {any} relSel\n * @param {ProsemirrorBinding} binding\n */\nconst restoreRelativeSelection = (tr, relSel, binding) => {\n  if (relSel !== null && relSel.anchor !== null && relSel.head !== null) {\n    const anchor = relativePositionToAbsolutePosition(\n      binding.doc,\n      binding.type,\n      relSel.anchor,\n      binding.mapping\n    )\n    const head = relativePositionToAbsolutePosition(\n      binding.doc,\n      binding.type,\n      relSel.head,\n      binding.mapping\n    )\n    if (anchor !== null && head !== null) {\n      tr = tr.setSelection(TextSelection.create(tr.doc, anchor, head))\n    }\n  }\n}\n\nexport const getRelativeSelection = (pmbinding, state) => ({\n  anchor: absolutePositionToRelativePosition(\n    state.selection.anchor,\n    pmbinding.type,\n    pmbinding.mapping\n  ),\n  head: absolutePositionToRelativePosition(\n    state.selection.head,\n    pmbinding.type,\n    pmbinding.mapping\n  )\n})\n\n/**\n * Binding for prosemirror.\n *\n * @protected\n */\nexport class ProsemirrorBinding {\n  /**\n   * @param {Y.XmlFragment} yXmlFragment The bind source\n   * @param {ProsemirrorMapping} mapping\n   */\n  constructor (yXmlFragment, mapping = new Map()) {\n    this.type = yXmlFragment\n    /**\n     * this will be set once the view is created\n     * @type {any}\n     */\n    this.prosemirrorView = null\n    this.mux = createMutex()\n    this.mapping = mapping\n    this._observeFunction = this._typeChanged.bind(this)\n    /**\n     * @type {Y.Doc}\n     */\n    // @ts-ignore\n    this.doc = yXmlFragment.doc\n    /**\n     * current selection as relative positions in the Yjs model\n     */\n    this.beforeTransactionSelection = null\n    this.beforeAllTransactions = () => {\n      if (this.beforeTransactionSelection === null && this.prosemirrorView != null) {\n        this.beforeTransactionSelection = getRelativeSelection(\n          this,\n          this.prosemirrorView.state\n        )\n      }\n    }\n    this.afterAllTransactions = () => {\n      this.beforeTransactionSelection = null\n    }\n    this._domSelectionInView = null\n  }\n\n  /**\n   * Create a transaction for changing the prosemirror state.\n   *\n   * @returns\n   */\n  get _tr () {\n    return this.prosemirrorView.state.tr.setMeta('addToHistory', false)\n  }\n\n  _isLocalCursorInView () {\n    if (!this.prosemirrorView.hasFocus()) return false\n    if (environment.isBrowser && this._domSelectionInView === null) {\n      // Calculate the domSelectionInView and clear by next tick after all events are finished\n      eventloop.timeout(0, () => {\n        this._domSelectionInView = null\n      })\n      this._domSelectionInView = this._isDomSelectionInView()\n    }\n    return this._domSelectionInView\n  }\n\n  _isDomSelectionInView () {\n    const selection = this.prosemirrorView._root.getSelection()\n\n    const range = this.prosemirrorView._root.createRange()\n    range.setStart(selection.anchorNode, selection.anchorOffset)\n    range.setEnd(selection.focusNode, selection.focusOffset)\n\n    // This is a workaround for an edgecase where getBoundingClientRect will\n    // return zero values if the selection is collapsed at the start of a newline\n    // see reference here: https://stackoverflow.com/a/59780954\n    const rects = range.getClientRects()\n    if (rects.length === 0) {\n      // probably buggy newline behavior, explicitly select the node contents\n      if (range.startContainer && range.collapsed) {\n        range.selectNodeContents(range.startContainer)\n      }\n    }\n\n    const bounding = range.getBoundingClientRect()\n    const documentElement = dom.doc.documentElement\n\n    return bounding.bottom >= 0 && bounding.right >= 0 &&\n      bounding.left <=\n        (window.innerWidth || documentElement.clientWidth || 0) &&\n      bounding.top <= (window.innerHeight || documentElement.clientHeight || 0)\n  }\n\n  /**\n   * @param {Y.Snapshot} snapshot\n   * @param {Y.Snapshot} prevSnapshot\n   */\n  renderSnapshot (snapshot, prevSnapshot) {\n    if (!prevSnapshot) {\n      prevSnapshot = Y.createSnapshot(Y.createDeleteSet(), new Map())\n    }\n    this.prosemirrorView.dispatch(\n      this._tr.setMeta(ySyncPluginKey, { snapshot, prevSnapshot })\n    )\n  }\n\n  unrenderSnapshot () {\n    this.mapping.clear()\n    this.mux(() => {\n      const fragmentContent = this.type.toArray().map((t) =>\n        createNodeFromYElement(\n          /** @type {Y.XmlElement} */ (t),\n          this.prosemirrorView.state.schema,\n          this.mapping\n        )\n      ).filter((n) => n !== null)\n      // @ts-ignore\n      const tr = this._tr.replace(\n        0,\n        this.prosemirrorView.state.doc.content.size,\n        new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n      )\n      tr.setMeta(ySyncPluginKey, { snapshot: null, prevSnapshot: null })\n      this.prosemirrorView.dispatch(tr)\n    })\n  }\n\n  _forceRerender () {\n    this.mapping.clear()\n    this.mux(() => {\n      // If this is a forced rerender, this might neither happen as a pm change nor within a Yjs\n      // transaction. Then the \"before selection\" doesn't exist. In this case, we need to create a\n      // relative position before replacing content. Fixes #126\n      const sel = this.beforeTransactionSelection !== null ? null : this.prosemirrorView.state.selection\n      const fragmentContent = this.type.toArray().map((t) =>\n        createNodeFromYElement(\n          /** @type {Y.XmlElement} */ (t),\n          this.prosemirrorView.state.schema,\n          this.mapping\n        )\n      ).filter((n) => n !== null)\n      // @ts-ignore\n      const tr = this._tr.replace(\n        0,\n        this.prosemirrorView.state.doc.content.size,\n        new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n      )\n      if (sel) {\n        tr.setSelection(TextSelection.create(tr.doc, sel.anchor, sel.head))\n      }\n      this.prosemirrorView.dispatch(\n        tr.setMeta(ySyncPluginKey, { isChangeOrigin: true, binding: this })\n      )\n    })\n  }\n\n  /**\n   * @param {Y.Snapshot|Uint8Array} snapshot\n   * @param {Y.Snapshot|Uint8Array} prevSnapshot\n   * @param {Object} pluginState\n   */\n  _renderSnapshot (snapshot, prevSnapshot, pluginState) {\n    /**\n     * The document that contains the full history of this document.\n     * @type {Y.Doc}\n     */\n    let historyDoc = this.doc\n    if (!snapshot) {\n      snapshot = Y.snapshot(this.doc)\n    }\n    if (snapshot instanceof Uint8Array || prevSnapshot instanceof Uint8Array) {\n      if (!(snapshot instanceof Uint8Array) || !(prevSnapshot instanceof Uint8Array)) {\n        // expected both snapshots to be v2 updates\n        error.unexpectedCase()\n      }\n      historyDoc = new Y.Doc({ gc: false })\n      Y.applyUpdateV2(historyDoc, prevSnapshot)\n      prevSnapshot = Y.snapshot(historyDoc)\n      Y.applyUpdateV2(historyDoc, snapshot)\n      snapshot = Y.snapshot(historyDoc)\n    }\n    // clear mapping because we are going to rerender\n    this.mapping.clear()\n    this.mux(() => {\n      historyDoc.transact((transaction) => {\n        // before rendering, we are going to sanitize ops and split deleted ops\n        // if they were deleted by seperate users.\n        const pud = pluginState.permanentUserData\n        if (pud) {\n          pud.dss.forEach((ds) => {\n            Y.iterateDeletedStructs(transaction, ds, (_item) => {})\n          })\n        }\n        /**\n         * @param {'removed'|'added'} type\n         * @param {Y.ID} id\n         */\n        const computeYChange = (type, id) => {\n          const user = type === 'added'\n            ? pud.getUserByClientId(id.client)\n            : pud.getUserByDeletedId(id)\n          return {\n            user,\n            type,\n            color: getUserColor(\n              pluginState.colorMapping,\n              pluginState.colors,\n              user\n            )\n          }\n        }\n        // Create document fragment and render\n        const fragmentContent = Y.typeListToArraySnapshot(\n          this.type,\n          new Y.Snapshot(prevSnapshot.ds, snapshot.sv)\n        ).map((t) => {\n          if (\n            !t._item.deleted || isVisible(t._item, snapshot) ||\n            isVisible(t._item, prevSnapshot)\n          ) {\n            return createNodeFromYElement(\n              t,\n              this.prosemirrorView.state.schema,\n              new Map(),\n              snapshot,\n              prevSnapshot,\n              computeYChange\n            )\n          } else {\n            // No need to render elements that are not visible by either snapshot.\n            // If a client adds and deletes content in the same snapshot the element is not visible by either snapshot.\n            return null\n          }\n        }).filter((n) => n !== null)\n        // @ts-ignore\n        const tr = this._tr.replace(\n          0,\n          this.prosemirrorView.state.doc.content.size,\n          new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n        )\n        this.prosemirrorView.dispatch(\n          tr.setMeta(ySyncPluginKey, { isChangeOrigin: true })\n        )\n      }, ySyncPluginKey)\n    })\n  }\n\n  /**\n   * @param {Array<Y.YEvent<any>>} events\n   * @param {Y.Transaction} transaction\n   */\n  _typeChanged (events, transaction) {\n    if (this.prosemirrorView == null) return\n    const syncState = ySyncPluginKey.getState(this.prosemirrorView.state)\n    if (\n      events.length === 0 || syncState.snapshot != null ||\n      syncState.prevSnapshot != null\n    ) {\n      // drop out if snapshot is active\n      this.renderSnapshot(syncState.snapshot, syncState.prevSnapshot)\n      return\n    }\n    this.mux(() => {\n      /**\n       * @param {any} _\n       * @param {Y.AbstractType<any>} type\n       */\n      const delType = (_, type) => this.mapping.delete(type)\n      Y.iterateDeletedStructs(\n        transaction,\n        transaction.deleteSet,\n        (struct) => {\n          if (struct.constructor === Y.Item) {\n            const type = /** @type {Y.ContentType} */ (/** @type {Y.Item} */ (struct).content).type\n            type && this.mapping.delete(type)\n          }\n        }\n      )\n      transaction.changed.forEach(delType)\n      transaction.changedParentTypes.forEach(delType)\n      const fragmentContent = this.type.toArray().map((t) =>\n        createNodeIfNotExists(\n          /** @type {Y.XmlElement | Y.XmlHook} */ (t),\n          this.prosemirrorView.state.schema,\n          this.mapping\n        )\n      ).filter((n) => n !== null)\n      // @ts-ignore\n      let tr = this._tr.replace(\n        0,\n        this.prosemirrorView.state.doc.content.size,\n        new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n      )\n      restoreRelativeSelection(tr, this.beforeTransactionSelection, this)\n      tr = tr.setMeta(ySyncPluginKey, { isChangeOrigin: true, isUndoRedoOperation: transaction.origin instanceof Y.UndoManager })\n      if (\n        this.beforeTransactionSelection !== null && this._isLocalCursorInView()\n      ) {\n        tr.scrollIntoView()\n      }\n      this.prosemirrorView.dispatch(tr)\n    })\n  }\n\n  _prosemirrorChanged (doc) {\n    this.doc.transact(() => {\n      updateYFragment(this.doc, this.type, doc, this.mapping)\n      this.beforeTransactionSelection = getRelativeSelection(\n        this,\n        this.prosemirrorView.state\n      )\n    }, ySyncPluginKey)\n  }\n\n  /**\n   * View is ready to listen to changes. Register observers.\n   * @param {any} prosemirrorView\n   */\n  initView (prosemirrorView) {\n    if (this.prosemirrorView != null) this.destroy()\n    this.prosemirrorView = prosemirrorView\n    this.doc.on('beforeAllTransactions', this.beforeAllTransactions)\n    this.doc.on('afterAllTransactions', this.afterAllTransactions)\n    this.type.observeDeep(this._observeFunction)\n  }\n\n  destroy () {\n    if (this.prosemirrorView == null) return\n    this.prosemirrorView = null\n    this.type.unobserveDeep(this._observeFunction)\n    this.doc.off('beforeAllTransactions', this.beforeAllTransactions)\n    this.doc.off('afterAllTransactions', this.afterAllTransactions)\n  }\n}\n\n/**\n * @private\n * @param {Y.XmlElement | Y.XmlHook} el\n * @param {PModel.Schema} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {PModel.Node | null}\n */\nconst createNodeIfNotExists = (\n  el,\n  schema,\n  mapping,\n  snapshot,\n  prevSnapshot,\n  computeYChange\n) => {\n  const node = /** @type {PModel.Node} */ (mapping.get(el))\n  if (node === undefined) {\n    if (el instanceof Y.XmlElement) {\n      return createNodeFromYElement(\n        el,\n        schema,\n        mapping,\n        snapshot,\n        prevSnapshot,\n        computeYChange\n      )\n    } else {\n      throw error.methodUnimplemented() // we are currently not handling hooks\n    }\n  }\n  return node\n}\n\n/**\n * @private\n * @param {Y.XmlElement} el\n * @param {any} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {PModel.Node | null} Returns node if node could be created. Otherwise it deletes the yjs type and returns null\n */\nexport const createNodeFromYElement = (\n  el,\n  schema,\n  mapping,\n  snapshot,\n  prevSnapshot,\n  computeYChange\n) => {\n  const children = []\n  const createChildren = (type) => {\n    if (type.constructor === Y.XmlElement) {\n      const n = createNodeIfNotExists(\n        type,\n        schema,\n        mapping,\n        snapshot,\n        prevSnapshot,\n        computeYChange\n      )\n      if (n !== null) {\n        children.push(n)\n      }\n    } else {\n      // If the next ytext exists and was created by us, move the content to the current ytext.\n      // This is a fix for #160 -- duplication of characters when two Y.Text exist next to each\n      // other.\n      const nextytext = type._item.right?.content.type\n      if (nextytext instanceof Y.Text && !nextytext._item.deleted && nextytext._item.id.client === nextytext.doc.clientID) {\n        type.applyDelta([\n          { retain: type.length },\n          ...nextytext.toDelta()\n        ])\n        nextytext.doc.transact(tr => {\n          nextytext._item.delete(tr)\n        })\n      }\n      // now create the prosemirror text nodes\n      const ns = createTextNodesFromYText(\n        type,\n        schema,\n        mapping,\n        snapshot,\n        prevSnapshot,\n        computeYChange\n      )\n      if (ns !== null) {\n        ns.forEach((textchild) => {\n          if (textchild !== null) {\n            children.push(textchild)\n          }\n        })\n      }\n    }\n  }\n  if (snapshot === undefined || prevSnapshot === undefined) {\n    el.toArray().forEach(createChildren)\n  } else {\n    Y.typeListToArraySnapshot(el, new Y.Snapshot(prevSnapshot.ds, snapshot.sv))\n      .forEach(createChildren)\n  }\n  try {\n    const attrs = el.getAttributes(snapshot)\n    if (snapshot !== undefined) {\n      if (!isVisible(/** @type {Y.Item} */ (el._item), snapshot)) {\n        attrs.ychange = computeYChange\n          ? computeYChange('removed', /** @type {Y.Item} */ (el._item).id)\n          : { type: 'removed' }\n      } else if (!isVisible(/** @type {Y.Item} */ (el._item), prevSnapshot)) {\n        attrs.ychange = computeYChange\n          ? computeYChange('added', /** @type {Y.Item} */ (el._item).id)\n          : { type: 'added' }\n      }\n    }\n    const node = schema.node(el.nodeName, attrs, children)\n    mapping.set(el, node)\n    return node\n  } catch (e) {\n    // an error occured while creating the node. This is probably a result of a concurrent action.\n    /** @type {Y.Doc} */ (el.doc).transact((transaction) => {\n      /** @type {Y.Item} */ (el._item).delete(transaction)\n    }, ySyncPluginKey)\n    mapping.delete(el)\n    return null\n  }\n}\n\n/**\n * @private\n * @param {Y.XmlText} text\n * @param {any} schema\n * @param {ProsemirrorMapping} _mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {Array<PModel.Node>|null}\n */\nconst createTextNodesFromYText = (\n  text,\n  schema,\n  _mapping,\n  snapshot,\n  prevSnapshot,\n  computeYChange\n) => {\n  const nodes = []\n  const deltas = text.toDelta(snapshot, prevSnapshot, computeYChange)\n  try {\n    for (let i = 0; i < deltas.length; i++) {\n      const delta = deltas[i]\n      const marks = []\n      for (const markName in delta.attributes) {\n        marks.push(schema.mark(markName, delta.attributes[markName]))\n      }\n      nodes.push(schema.text(delta.insert, marks))\n    }\n  } catch (e) {\n    // an error occured while creating the node. This is probably a result of a concurrent action.\n    /** @type {Y.Doc} */ (text.doc).transact((transaction) => {\n      /** @type {Y.Item} */ (text._item).delete(transaction)\n    }, ySyncPluginKey)\n    return null\n  }\n  // @ts-ignore\n  return nodes\n}\n\n/**\n * @private\n * @param {Array<any>} nodes prosemirror node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlText}\n */\nconst createTypeFromTextNodes = (nodes, mapping) => {\n  const type = new Y.XmlText()\n  const delta = nodes.map((node) => ({\n    // @ts-ignore\n    insert: node.text,\n    attributes: marksToAttributes(node.marks)\n  }))\n  type.applyDelta(delta)\n  mapping.set(type, nodes)\n  return type\n}\n\n/**\n * @private\n * @param {any} node prosemirror node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlElement}\n */\nconst createTypeFromElementNode = (node, mapping) => {\n  const type = new Y.XmlElement(node.type.name)\n  for (const key in node.attrs) {\n    const val = node.attrs[key]\n    if (val !== null && key !== 'ychange') {\n      type.setAttribute(key, val)\n    }\n  }\n  type.insert(\n    0,\n    normalizePNodeContent(node).map((n) =>\n      createTypeFromTextOrElementNode(n, mapping)\n    )\n  )\n  mapping.set(type, node)\n  return type\n}\n\n/**\n * @private\n * @param {PModel.Node|Array<PModel.Node>} node prosemirror text node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlElement|Y.XmlText}\n */\nconst createTypeFromTextOrElementNode = (node, mapping) =>\n  node instanceof Array\n    ? createTypeFromTextNodes(node, mapping)\n    : createTypeFromElementNode(node, mapping)\n\nconst isObject = (val) => typeof val === 'object' && val !== null\n\nconst equalAttrs = (pattrs, yattrs) => {\n  const keys = Object.keys(pattrs).filter((key) => pattrs[key] !== null)\n  let eq =\n    keys.length ===\n      Object.keys(yattrs).filter((key) => yattrs[key] !== null).length\n  for (let i = 0; i < keys.length && eq; i++) {\n    const key = keys[i]\n    const l = pattrs[key]\n    const r = yattrs[key]\n    eq = key === 'ychange' || l === r ||\n      (isObject(l) && isObject(r) && equalAttrs(l, r))\n  }\n  return eq\n}\n\n/**\n * @typedef {Array<Array<PModel.Node>|PModel.Node>} NormalizedPNodeContent\n */\n\n/**\n * @param {any} pnode\n * @return {NormalizedPNodeContent}\n */\nconst normalizePNodeContent = (pnode) => {\n  const c = pnode.content.content\n  const res = []\n  for (let i = 0; i < c.length; i++) {\n    const n = c[i]\n    if (n.isText) {\n      const textNodes = []\n      for (let tnode = c[i]; i < c.length && tnode.isText; tnode = c[++i]) {\n        textNodes.push(tnode)\n      }\n      i--\n      res.push(textNodes)\n    } else {\n      res.push(n)\n    }\n  }\n  return res\n}\n\n/**\n * @param {Y.XmlText} ytext\n * @param {Array<any>} ptexts\n */\nconst equalYTextPText = (ytext, ptexts) => {\n  const delta = ytext.toDelta()\n  return delta.length === ptexts.length &&\n    delta.every((d, i) =>\n      d.insert === /** @type {any} */ (ptexts[i]).text &&\n      object.keys(d.attributes || {}).length === ptexts[i].marks.length &&\n      ptexts[i].marks.every((mark) =>\n        equalAttrs(d.attributes[mark.type.name] || {}, mark.attrs)\n      )\n    )\n}\n\n/**\n * @param {Y.XmlElement|Y.XmlText|Y.XmlHook} ytype\n * @param {any|Array<any>} pnode\n */\nconst equalYTypePNode = (ytype, pnode) => {\n  if (\n    ytype instanceof Y.XmlElement && !(pnode instanceof Array) &&\n    matchNodeName(ytype, pnode)\n  ) {\n    const normalizedContent = normalizePNodeContent(pnode)\n    return ytype._length === normalizedContent.length &&\n      equalAttrs(ytype.getAttributes(), pnode.attrs) &&\n      ytype.toArray().every((ychild, i) =>\n        equalYTypePNode(ychild, normalizedContent[i])\n      )\n  }\n  return ytype instanceof Y.XmlText && pnode instanceof Array &&\n    equalYTextPText(ytype, pnode)\n}\n\n/**\n * @param {PModel.Node | Array<PModel.Node> | undefined} mapped\n * @param {PModel.Node | Array<PModel.Node>} pcontent\n */\nconst mappedIdentity = (mapped, pcontent) =>\n  mapped === pcontent ||\n  (mapped instanceof Array && pcontent instanceof Array &&\n    mapped.length === pcontent.length && mapped.every((a, i) =>\n    pcontent[i] === a\n  ))\n\n/**\n * @param {Y.XmlElement} ytype\n * @param {PModel.Node} pnode\n * @param {ProsemirrorMapping} mapping\n * @return {{ foundMappedChild: boolean, equalityFactor: number }}\n */\nconst computeChildEqualityFactor = (ytype, pnode, mapping) => {\n  const yChildren = ytype.toArray()\n  const pChildren = normalizePNodeContent(pnode)\n  const pChildCnt = pChildren.length\n  const yChildCnt = yChildren.length\n  const minCnt = math.min(yChildCnt, pChildCnt)\n  let left = 0\n  let right = 0\n  let foundMappedChild = false\n  for (; left < minCnt; left++) {\n    const leftY = yChildren[left]\n    const leftP = pChildren[left]\n    if (mappedIdentity(mapping.get(leftY), leftP)) {\n      foundMappedChild = true // definite (good) match!\n    } else if (!equalYTypePNode(leftY, leftP)) {\n      break\n    }\n  }\n  for (; left + right < minCnt; right++) {\n    const rightY = yChildren[yChildCnt - right - 1]\n    const rightP = pChildren[pChildCnt - right - 1]\n    if (mappedIdentity(mapping.get(rightY), rightP)) {\n      foundMappedChild = true\n    } else if (!equalYTypePNode(rightY, rightP)) {\n      break\n    }\n  }\n  return {\n    equalityFactor: left + right,\n    foundMappedChild\n  }\n}\n\nconst ytextTrans = (ytext) => {\n  let str = ''\n  /**\n   * @type {Y.Item|null}\n   */\n  let n = ytext._start\n  const nAttrs = {}\n  while (n !== null) {\n    if (!n.deleted) {\n      if (n.countable && n.content instanceof Y.ContentString) {\n        str += n.content.str\n      } else if (n.content instanceof Y.ContentFormat) {\n        nAttrs[n.content.key] = null\n      }\n    }\n    n = n.right\n  }\n  return {\n    str,\n    nAttrs\n  }\n}\n\n/**\n * @todo test this more\n *\n * @param {Y.Text} ytext\n * @param {Array<any>} ptexts\n * @param {ProsemirrorMapping} mapping\n */\nconst updateYText = (ytext, ptexts, mapping) => {\n  mapping.set(ytext, ptexts)\n  const { nAttrs, str } = ytextTrans(ytext)\n  const content = ptexts.map((p) => ({\n    insert: /** @type {any} */ (p).text,\n    attributes: Object.assign({}, nAttrs, marksToAttributes(p.marks))\n  }))\n  const { insert, remove, index } = simpleDiff(\n    str,\n    content.map((c) => c.insert).join('')\n  )\n  ytext.delete(index, remove)\n  ytext.insert(index, insert)\n  ytext.applyDelta(\n    content.map((c) => ({ retain: c.insert.length, attributes: c.attributes }))\n  )\n}\n\nconst marksToAttributes = (marks) => {\n  const pattrs = {}\n  marks.forEach((mark) => {\n    if (mark.type.name !== 'ychange') {\n      pattrs[mark.type.name] = mark.attrs\n    }\n  })\n  return pattrs\n}\n\n/**\n * Update a yDom node by syncing the current content of the prosemirror node.\n *\n * This is a y-prosemirror internal feature that you can use at your own risk.\n *\n * @private\n * @unstable\n *\n * @param {{transact: Function}} y\n * @param {Y.XmlFragment} yDomFragment\n * @param {any} pNode\n * @param {ProsemirrorMapping} mapping\n */\nexport const updateYFragment = (y, yDomFragment, pNode, mapping) => {\n  if (\n    yDomFragment instanceof Y.XmlElement &&\n    yDomFragment.nodeName !== pNode.type.name\n  ) {\n    throw new Error('node name mismatch!')\n  }\n  mapping.set(yDomFragment, pNode)\n  // update attributes\n  if (yDomFragment instanceof Y.XmlElement) {\n    const yDomAttrs = yDomFragment.getAttributes()\n    const pAttrs = pNode.attrs\n    for (const key in pAttrs) {\n      if (pAttrs[key] !== null) {\n        if (yDomAttrs[key] !== pAttrs[key] && key !== 'ychange') {\n          yDomFragment.setAttribute(key, pAttrs[key])\n        }\n      } else {\n        yDomFragment.removeAttribute(key)\n      }\n    }\n    // remove all keys that are no longer in pAttrs\n    for (const key in yDomAttrs) {\n      if (pAttrs[key] === undefined) {\n        yDomFragment.removeAttribute(key)\n      }\n    }\n  }\n  // update children\n  const pChildren = normalizePNodeContent(pNode)\n  const pChildCnt = pChildren.length\n  const yChildren = yDomFragment.toArray()\n  const yChildCnt = yChildren.length\n  const minCnt = math.min(pChildCnt, yChildCnt)\n  let left = 0\n  let right = 0\n  // find number of matching elements from left\n  for (; left < minCnt; left++) {\n    const leftY = yChildren[left]\n    const leftP = pChildren[left]\n    if (!mappedIdentity(mapping.get(leftY), leftP)) {\n      if (equalYTypePNode(leftY, leftP)) {\n        // update mapping\n        mapping.set(leftY, leftP)\n      } else {\n        break\n      }\n    }\n  }\n  // find number of matching elements from right\n  for (; right + left + 1 < minCnt; right++) {\n    const rightY = yChildren[yChildCnt - right - 1]\n    const rightP = pChildren[pChildCnt - right - 1]\n    if (!mappedIdentity(mapping.get(rightY), rightP)) {\n      if (equalYTypePNode(rightY, rightP)) {\n        // update mapping\n        mapping.set(rightY, rightP)\n      } else {\n        break\n      }\n    }\n  }\n  y.transact(() => {\n    // try to compare and update\n    while (yChildCnt - left - right > 0 && pChildCnt - left - right > 0) {\n      const leftY = yChildren[left]\n      const leftP = pChildren[left]\n      const rightY = yChildren[yChildCnt - right - 1]\n      const rightP = pChildren[pChildCnt - right - 1]\n      if (leftY instanceof Y.XmlText && leftP instanceof Array) {\n        if (!equalYTextPText(leftY, leftP)) {\n          updateYText(leftY, leftP, mapping)\n        }\n        left += 1\n      } else {\n        let updateLeft = leftY instanceof Y.XmlElement &&\n          matchNodeName(leftY, leftP)\n        let updateRight = rightY instanceof Y.XmlElement &&\n          matchNodeName(rightY, rightP)\n        if (updateLeft && updateRight) {\n          // decide which which element to update\n          const equalityLeft = computeChildEqualityFactor(\n            /** @type {Y.XmlElement} */ (leftY),\n            /** @type {PModel.Node} */ (leftP),\n            mapping\n          )\n          const equalityRight = computeChildEqualityFactor(\n            /** @type {Y.XmlElement} */ (rightY),\n            /** @type {PModel.Node} */ (rightP),\n            mapping\n          )\n          if (\n            equalityLeft.foundMappedChild && !equalityRight.foundMappedChild\n          ) {\n            updateRight = false\n          } else if (\n            !equalityLeft.foundMappedChild && equalityRight.foundMappedChild\n          ) {\n            updateLeft = false\n          } else if (\n            equalityLeft.equalityFactor < equalityRight.equalityFactor\n          ) {\n            updateLeft = false\n          } else {\n            updateRight = false\n          }\n        }\n        if (updateLeft) {\n          updateYFragment(\n            y,\n            /** @type {Y.XmlFragment} */ (leftY),\n            /** @type {PModel.Node} */ (leftP),\n            mapping\n          )\n          left += 1\n        } else if (updateRight) {\n          updateYFragment(\n            y,\n            /** @type {Y.XmlFragment} */ (rightY),\n            /** @type {PModel.Node} */ (rightP),\n            mapping\n          )\n          right += 1\n        } else {\n          mapping.delete(yDomFragment.get(left))\n          yDomFragment.delete(left, 1)\n          yDomFragment.insert(left, [\n            createTypeFromTextOrElementNode(leftP, mapping)\n          ])\n          left += 1\n        }\n      }\n    }\n    const yDelLen = yChildCnt - left - right\n    if (\n      yChildCnt === 1 && pChildCnt === 0 && yChildren[0] instanceof Y.XmlText\n    ) {\n      mapping.delete(yChildren[0])\n      // Edge case handling https://github.com/yjs/y-prosemirror/issues/108\n      // Only delete the content of the Y.Text to retain remote changes on the same Y.Text object\n      yChildren[0].delete(0, yChildren[0].length)\n    } else if (yDelLen > 0) {\n      yDomFragment.slice(left, left + yDelLen).forEach(type => mapping.delete(type))\n      yDomFragment.delete(left, yDelLen)\n    }\n    if (left + right < pChildCnt) {\n      const ins = []\n      for (let i = left; i < pChildCnt - right; i++) {\n        ins.push(createTypeFromTextOrElementNode(pChildren[i], mapping))\n      }\n      yDomFragment.insert(left, ins)\n    }\n  }, ySyncPluginKey)\n}\n\n/**\n * @function\n * @param {Y.XmlElement} yElement\n * @param {any} pNode Prosemirror Node\n */\nconst matchNodeName = (yElement, pNode) =>\n  !(pNode instanceof Array) && yElement.nodeName === pNode.type.name\n", "import { updateYFragment, createNodeFromYElement } from './plugins/sync-plugin.js' // eslint-disable-line\nimport { ySyncPluginKey } from './plugins/keys.js'\nimport * as Y from 'yjs'\nimport { EditorView } from 'prosemirror-view' // eslint-disable-line\nimport { Node, Schema, Fragment } from 'prosemirror-model' // eslint-disable-line\nimport * as error from 'lib0/error'\nimport * as map from 'lib0/map'\nimport * as eventloop from 'lib0/eventloop'\n\n/**\n * Either a node if type is YXmlElement or an Array of text nodes if YXmlText\n * @typedef {Map<Y.AbstractType, Node | Array<Node>>} ProsemirrorMapping\n */\n\n/**\n * Is null if no timeout is in progress.\n * Is defined if a timeout is in progress.\n * Maps from view\n * @type {Map<EditorView, Map<any, any>>|null}\n */\nlet viewsToUpdate = null\n\nconst updateMetas = () => {\n  const ups = /** @type {Map<EditorView, Map<any, any>>} */ (viewsToUpdate)\n  viewsToUpdate = null\n  ups.forEach((metas, view) => {\n    const tr = view.state.tr\n    const syncState = ySyncPluginKey.getState(view.state)\n    if (syncState && syncState.binding && !syncState.binding.isDestroyed) {\n      metas.forEach((val, key) => {\n        tr.setMeta(key, val)\n      })\n      view.dispatch(tr)\n    }\n  })\n}\n\nexport const setMeta = (view, key, value) => {\n  if (!viewsToUpdate) {\n    viewsToUpdate = new Map()\n    eventloop.timeout(0, updateMetas)\n  }\n  map.setIfUndefined(viewsToUpdate, view, map.create).set(key, value)\n}\n\n/**\n * Transforms a Prosemirror based absolute position to a Yjs Cursor (relative position in the Yjs model).\n *\n * @param {number} pos\n * @param {Y.XmlFragment} type\n * @param {ProsemirrorMapping} mapping\n * @return {any} relative position\n */\nexport const absolutePositionToRelativePosition = (pos, type, mapping) => {\n  if (pos === 0) {\n    return Y.createRelativePositionFromTypeIndex(type, 0, -1)\n  }\n  /**\n   * @type {any}\n   */\n  let n = type._first === null ? null : /** @type {Y.ContentType} */ (type._first.content).type\n  while (n !== null && type !== n) {\n    if (n instanceof Y.XmlText) {\n      if (n._length >= pos) {\n        return Y.createRelativePositionFromTypeIndex(n, pos, -1)\n      } else {\n        pos -= n._length\n      }\n      if (n._item !== null && n._item.next !== null) {\n        n = /** @type {Y.ContentType} */ (n._item.next.content).type\n      } else {\n        do {\n          n = n._item === null ? null : n._item.parent\n          pos--\n        } while (n !== type && n !== null && n._item !== null && n._item.next === null)\n        if (n !== null && n !== type) {\n          // @ts-gnore we know that n.next !== null because of above loop conditition\n          n = n._item === null ? null : /** @type {Y.ContentType} */ (/** @type Y.Item */ (n._item.next).content).type\n        }\n      }\n    } else {\n      const pNodeSize = /** @type {any} */ (mapping.get(n) || { nodeSize: 0 }).nodeSize\n      if (n._first !== null && pos < pNodeSize) {\n        n = /** @type {Y.ContentType} */ (n._first.content).type\n        pos--\n      } else {\n        if (pos === 1 && n._length === 0 && pNodeSize > 1) {\n          // edge case, should end in this paragraph\n          return new Y.RelativePosition(n._item === null ? null : n._item.id, n._item === null ? Y.findRootTypeKey(n) : null, null)\n        }\n        pos -= pNodeSize\n        if (n._item !== null && n._item.next !== null) {\n          n = /** @type {Y.ContentType} */ (n._item.next.content).type\n        } else {\n          if (pos === 0) {\n            // set to end of n.parent\n            n = n._item === null ? n : n._item.parent\n            return new Y.RelativePosition(n._item === null ? null : n._item.id, n._item === null ? Y.findRootTypeKey(n) : null, null)\n          }\n          do {\n            n = /** @type {Y.Item} */ (n._item).parent\n            pos--\n          } while (n !== type && /** @type {Y.Item} */ (n._item).next === null)\n          // if n is null at this point, we have an unexpected case\n          if (n !== type) {\n            // We know that n._item.next is defined because of above loop condition\n            n = /** @type {Y.ContentType} */ (/** @type {Y.Item} */ (/** @type {Y.Item} */ (n._item).next).content).type\n          }\n        }\n      }\n    }\n    if (n === null) {\n      throw error.unexpectedCase()\n    }\n    if (pos === 0 && n.constructor !== Y.XmlText && n !== type) { // TODO: set to <= 0\n      return createRelativePosition(n._item.parent, n._item)\n    }\n  }\n  return Y.createRelativePositionFromTypeIndex(type, type._length, -1)\n}\n\nconst createRelativePosition = (type, item) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = Y.findRootTypeKey(type)\n  } else {\n    typeid = Y.createID(type._item.id.client, type._item.id.clock)\n  }\n  return new Y.RelativePosition(typeid, tname, item.id)\n}\n\n/**\n * @param {Y.Doc} y\n * @param {Y.XmlFragment} documentType Top level type that is bound to pView\n * @param {any} relPos Encoded Yjs based relative position\n * @param {ProsemirrorMapping} mapping\n * @return {null|number}\n */\nexport const relativePositionToAbsolutePosition = (y, documentType, relPos, mapping) => {\n  const decodedPos = Y.createAbsolutePositionFromRelativePosition(relPos, y)\n  if (decodedPos === null || (decodedPos.type !== documentType && !Y.isParentOf(documentType, decodedPos.type._item))) {\n    return null\n  }\n  let type = decodedPos.type\n  let pos = 0\n  if (type.constructor === Y.XmlText) {\n    pos = decodedPos.index\n  } else if (type._item === null || !type._item.deleted) {\n    let n = type._first\n    let i = 0\n    while (i < type._length && i < decodedPos.index && n !== null) {\n      if (!n.deleted) {\n        const t = /** @type {Y.ContentType} */ (n.content).type\n        i++\n        if (t instanceof Y.XmlText) {\n          pos += t._length\n        } else {\n          pos += /** @type {any} */ (mapping.get(t)).nodeSize\n        }\n      }\n      n = /** @type {Y.Item} */ (n.right)\n    }\n    pos += 1 // increase because we go out of n\n  }\n  while (type !== documentType && type._item !== null) {\n    // @ts-ignore\n    const parent = type._item.parent\n    // @ts-ignore\n    if (parent._item === null || !parent._item.deleted) {\n      pos += 1 // the start tag\n      let n = /** @type {Y.AbstractType} */ (parent)._first\n      // now iterate until we found type\n      while (n !== null) {\n        const contentType = /** @type {Y.ContentType} */ (n.content).type\n        if (contentType === type) {\n          break\n        }\n        if (!n.deleted) {\n          if (contentType instanceof Y.XmlText) {\n            pos += contentType._length\n          } else {\n            pos += /** @type {any} */ (mapping.get(contentType)).nodeSize\n          }\n        }\n        n = n.right\n      }\n    }\n    type = /** @type {Y.AbstractType} */ (parent)\n  }\n  return pos - 1 // we don't count the most outer tag, because it is a fragment\n}\n\n/**\n * Utility function for converting an Y.Fragment to a ProseMirror fragment.\n *\n * @param {Y.XmlFragment} yXmlFragment\n * @param {Schema} schema\n */\nexport const yXmlFragmentToProseMirrorFragment = (yXmlFragment, schema) => {\n  const fragmentContent = yXmlFragment.toArray().map((t) =>\n    createNodeFromYElement(\n      /** @type {Y.XmlElement} */ (t),\n      schema,\n      new Map()\n    )\n  ).filter((n) => n !== null)\n  return Fragment.fromArray(fragmentContent)\n}\n\n/**\n * Utility function for converting an Y.Fragment to a ProseMirror node.\n *\n * @param {Y.XmlFragment} yXmlFragment\n * @param {Schema} schema\n */\nexport const yXmlFragmentToProseMirrorRootNode = (yXmlFragment, schema) =>\n  schema.topNodeType.create(null, yXmlFragmentToProseMirrorFragment(yXmlFragment, schema))\n\n/**\n * The initial ProseMirror content should be supplied by Yjs. This function transforms a Y.Fragment\n * to a ProseMirror Doc node and creates a mapping that is used by the sync plugin.\n *\n * @param {Y.XmlFragment} yXmlFragment\n * @param {Schema} schema\n */\nexport const initProseMirrorDoc = (yXmlFragment, schema) => {\n  /**\n   * @type {ProsemirrorMapping}\n   */\n  const mapping = new Map()\n  const fragmentContent = yXmlFragment.toArray().map((t) =>\n    createNodeFromYElement(\n      /** @type {Y.XmlElement} */ (t),\n      schema,\n      mapping\n    )\n  ).filter((n) => n !== null)\n  const doc = schema.topNodeType.create(null, Fragment.fromArray(fragmentContent))\n  return { doc, mapping }\n}\n\n/**\n * Utility method to convert a Prosemirror Doc Node into a Y.Doc.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Node} doc\n * @param {string} xmlFragment\n * @return {Y.Doc}\n */\nexport function prosemirrorToYDoc (doc, xmlFragment = 'prosemirror') {\n  const ydoc = new Y.Doc()\n  const type = /** @type {Y.XmlFragment} */ (ydoc.get(xmlFragment, Y.XmlFragment))\n  if (!type.doc) {\n    return ydoc\n  }\n\n  prosemirrorToYXmlFragment(doc, type)\n  return type.doc\n}\n\n/**\n * Utility method to update an empty Y.XmlFragment with content from a Prosemirror Doc Node.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * Note: The Y.XmlFragment does not need to be part of a Y.Doc document at the time that this\n * method is called, but it must be added before any other operations are performed on it.\n *\n * @param {Node} doc prosemirror document.\n * @param {Y.XmlFragment} [xmlFragment] If supplied, an xml fragment to be\n *   populated from the prosemirror state; otherwise a new XmlFragment will be created.\n * @return {Y.XmlFragment}\n */\nexport function prosemirrorToYXmlFragment (doc, xmlFragment) {\n  const type = xmlFragment || new Y.XmlFragment()\n  const ydoc = type.doc ? type.doc : { transact: (transaction) => transaction(undefined) }\n  updateYFragment(ydoc, type, doc, new Map())\n  return type\n}\n\n/**\n * Utility method to convert Prosemirror compatible JSON into a Y.Doc.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Schema} schema\n * @param {any} state\n * @param {string} xmlFragment\n * @return {Y.Doc}\n */\nexport function prosemirrorJSONToYDoc (schema, state, xmlFragment = 'prosemirror') {\n  const doc = Node.fromJSON(schema, state)\n  return prosemirrorToYDoc(doc, xmlFragment)\n}\n\n/**\n * Utility method to convert Prosemirror compatible JSON to a Y.XmlFragment\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Schema} schema\n * @param {any} state\n * @param {Y.XmlFragment} [xmlFragment] If supplied, an xml fragment to be\n *   populated from the prosemirror state; otherwise a new XmlFragment will be created.\n * @return {Y.XmlFragment}\n */\nexport function prosemirrorJSONToYXmlFragment (schema, state, xmlFragment) {\n  const doc = Node.fromJSON(schema, state)\n  return prosemirrorToYXmlFragment(doc, xmlFragment)\n}\n\n/**\n * @deprecated Use `yXmlFragmentToProseMirrorRootNode` instead\n *\n * Utility method to convert a Y.Doc to a Prosemirror Doc node.\n *\n * @param {Schema} schema\n * @param {Y.Doc} ydoc\n * @return {Node}\n */\nexport function yDocToProsemirror (schema, ydoc) {\n  const state = yDocToProsemirrorJSON(ydoc)\n  return Node.fromJSON(schema, state)\n}\n\n/**\n *\n * @deprecated Use `yXmlFragmentToProseMirrorRootNode` instead\n *\n * Utility method to convert a Y.XmlFragment to a Prosemirror Doc node.\n *\n * @param {Schema} schema\n * @param {Y.XmlFragment} xmlFragment\n * @return {Node}\n */\nexport function yXmlFragmentToProsemirror (schema, xmlFragment) {\n  const state = yXmlFragmentToProsemirrorJSON(xmlFragment)\n  return Node.fromJSON(schema, state)\n}\n\n/**\n *\n * @deprecated Use `yXmlFragmentToProseMirrorRootNode` instead\n *\n * Utility method to convert a Y.Doc to Prosemirror compatible JSON.\n *\n * @param {Y.Doc} ydoc\n * @param {string} xmlFragment\n * @return {Record<string, any>}\n */\nexport function yDocToProsemirrorJSON (\n  ydoc,\n  xmlFragment = 'prosemirror'\n) {\n  return yXmlFragmentToProsemirrorJSON(ydoc.getXmlFragment(xmlFragment))\n}\n\n/**\n * @deprecated Use `yXmlFragmentToProseMirrorRootNode` instead\n *\n * Utility method to convert a Y.Doc to Prosemirror compatible JSON.\n *\n * @param {Y.XmlFragment} xmlFragment The fragment, which must be part of a Y.Doc.\n * @return {Record<string, any>}\n */\nexport function yXmlFragmentToProsemirrorJSON (xmlFragment) {\n  const items = xmlFragment.toArray()\n\n  function serialize (item) {\n    /**\n     * @type {Object} NodeObject\n     * @property {string} NodeObject.type\n     * @property {Record<string, string>=} NodeObject.attrs\n     * @property {Array<NodeObject>=} NodeObject.content\n     */\n    let response\n\n    // TODO: Must be a better way to detect text nodes than this\n    if (!item.nodeName) {\n      const delta = item.toDelta()\n      response = delta.map((d) => {\n        const text = {\n          type: 'text',\n          text: d.insert\n        }\n\n        if (d.attributes) {\n          text.marks = Object.keys(d.attributes).map((type) => {\n            const attrs = d.attributes[type]\n            const mark = {\n              type\n            }\n\n            if (Object.keys(attrs)) {\n              mark.attrs = attrs\n            }\n\n            return mark\n          })\n        }\n        return text\n      })\n    } else {\n      response = {\n        type: item.nodeName\n      }\n\n      const attrs = item.getAttributes()\n      if (Object.keys(attrs).length) {\n        response.attrs = attrs\n      }\n\n      const children = item.toArray()\n      if (children.length) {\n        response.content = children.map(serialize).flat()\n      }\n    }\n\n    return response\n  }\n\n  return {\n    type: 'doc',\n    content: items.map(serialize)\n  }\n}\n", "import * as Y from 'yjs'\nimport { Decoration, DecorationSet } from \"prosemirror-view\"; // eslint-disable-line\nimport { Plugin } from \"prosemirror-state\"; // eslint-disable-line\nimport { Awareness } from \"y-protocols/awareness\"; // eslint-disable-line\nimport {\n  absolutePositionToRelativePosition,\n  relativePositionToAbsolutePosition,\n  setMeta\n} from '../lib.js'\nimport { yCursorPluginKey, ySyncPluginKey } from './keys.js'\n\nimport * as math from 'lib0/math'\n\n/**\n * Default awareness state filter\n *\n * @param {number} currentClientId current client id\n * @param {number} userClientId user client id\n * @param {any} _user user data\n * @return {boolean}\n */\nexport const defaultAwarenessStateFilter = (currentClientId, userClientId, _user) => currentClientId !== userClientId\n\n/**\n * Default generator for a cursor element\n *\n * @param {any} user user data\n * @return {HTMLElement}\n */\nexport const defaultCursorBuilder = (user) => {\n  const cursor = document.createElement('span')\n  cursor.classList.add('ProseMirror-yjs-cursor')\n  cursor.setAttribute('style', `border-color: ${user.color}`)\n  const userDiv = document.createElement('div')\n  userDiv.setAttribute('style', `background-color: ${user.color}`)\n  userDiv.insertBefore(document.createTextNode(user.name), null)\n  const nonbreakingSpace1 = document.createTextNode('\\u2060')\n  const nonbreakingSpace2 = document.createTextNode('\\u2060')\n  cursor.insertBefore(nonbreakingSpace1, null)\n  cursor.insertBefore(userDiv, null)\n  cursor.insertBefore(nonbreakingSpace2, null)\n  return cursor\n}\n\n/**\n * Default generator for the selection attributes\n *\n * @param {any} user user data\n * @return {import('prosemirror-view').DecorationAttrs}\n */\nexport const defaultSelectionBuilder = (user) => {\n  return {\n    style: `background-color: ${user.color}70`,\n    class: 'ProseMirror-yjs-selection'\n  }\n}\n\nconst rxValidColor = /^#[0-9a-fA-F]{6}$/\n\n/**\n * @param {any} state\n * @param {Awareness} awareness\n * @param {function(number, number, any):boolean} awarenessFilter\n * @param {function({ name: string, color: string }):Element} createCursor\n * @param {function({ name: string, color: string }):import('prosemirror-view').DecorationAttrs} createSelection\n * @return {any} DecorationSet\n */\nexport const createDecorations = (\n  state,\n  awareness,\n  awarenessFilter,\n  createCursor,\n  createSelection\n) => {\n  const ystate = ySyncPluginKey.getState(state)\n  const y = ystate.doc\n  const decorations = []\n  if (\n    ystate.snapshot != null || ystate.prevSnapshot != null ||\n    ystate.binding.mapping.size === 0\n  ) {\n    // do not render cursors while snapshot is active\n    return DecorationSet.create(state.doc, [])\n  }\n  awareness.getStates().forEach((aw, clientId) => {\n    if (!awarenessFilter(y.clientID, clientId, aw)) {\n      return\n    }\n\n    if (aw.cursor != null) {\n      const user = aw.user || {}\n      if (user.color == null) {\n        user.color = '#ffa500'\n      } else if (!rxValidColor.test(user.color)) {\n        // We only support 6-digit RGB colors in y-prosemirror\n        console.warn('A user uses an unsupported color format', user)\n      }\n      if (user.name == null) {\n        user.name = `User: ${clientId}`\n      }\n      let anchor = relativePositionToAbsolutePosition(\n        y,\n        ystate.type,\n        Y.createRelativePositionFromJSON(aw.cursor.anchor),\n        ystate.binding.mapping\n      )\n      let head = relativePositionToAbsolutePosition(\n        y,\n        ystate.type,\n        Y.createRelativePositionFromJSON(aw.cursor.head),\n        ystate.binding.mapping\n      )\n      if (anchor !== null && head !== null) {\n        const maxsize = math.max(state.doc.content.size - 1, 0)\n        anchor = math.min(anchor, maxsize)\n        head = math.min(head, maxsize)\n        decorations.push(\n          Decoration.widget(head, () => createCursor(user), {\n            key: clientId + '',\n            side: 10\n          })\n        )\n        const from = math.min(anchor, head)\n        const to = math.max(anchor, head)\n        decorations.push(\n          Decoration.inline(from, to, createSelection(user), {\n            inclusiveEnd: true,\n            inclusiveStart: false\n          })\n        )\n      }\n    }\n  })\n  return DecorationSet.create(state.doc, decorations)\n}\n\n/**\n * A prosemirror plugin that listens to awareness information on Yjs.\n * This requires that a `prosemirrorPlugin` is also bound to the prosemirror.\n *\n * @public\n * @param {Awareness} awareness\n * @param {object} opts\n * @param {function(any, any, any):boolean} [opts.awarenessStateFilter]\n * @param {function(any):HTMLElement} [opts.cursorBuilder]\n * @param {function(any):import('prosemirror-view').DecorationAttrs} [opts.selectionBuilder]\n * @param {function(any):any} [opts.getSelection]\n * @param {string} [cursorStateField] By default all editor bindings use the awareness 'cursor' field to propagate cursor information.\n * @return {any}\n */\nexport const yCursorPlugin = (\n  awareness,\n  {\n    awarenessStateFilter = defaultAwarenessStateFilter,\n    cursorBuilder = defaultCursorBuilder,\n    selectionBuilder = defaultSelectionBuilder,\n    getSelection = (state) => state.selection\n  } = {},\n  cursorStateField = 'cursor'\n) =>\n  new Plugin({\n    key: yCursorPluginKey,\n    state: {\n      init (_, state) {\n        return createDecorations(\n          state,\n          awareness,\n          awarenessStateFilter,\n          cursorBuilder,\n          selectionBuilder\n        )\n      },\n      apply (tr, prevState, _oldState, newState) {\n        const ystate = ySyncPluginKey.getState(newState)\n        const yCursorState = tr.getMeta(yCursorPluginKey)\n        if (\n          (ystate && ystate.isChangeOrigin) ||\n          (yCursorState && yCursorState.awarenessUpdated)\n        ) {\n          return createDecorations(\n            newState,\n            awareness,\n            awarenessStateFilter,\n            cursorBuilder,\n            selectionBuilder\n          )\n        }\n        return prevState.map(tr.mapping, tr.doc)\n      }\n    },\n    props: {\n      decorations: (state) => {\n        return yCursorPluginKey.getState(state)\n      }\n    },\n    view: (view) => {\n      const awarenessListener = () => {\n        // @ts-ignore\n        if (view.docView) {\n          setMeta(view, yCursorPluginKey, { awarenessUpdated: true })\n        }\n      }\n      const updateCursorInfo = () => {\n        const ystate = ySyncPluginKey.getState(view.state)\n        // @note We make implicit checks when checking for the cursor property\n        const current = awareness.getLocalState() || {}\n        if (view.hasFocus()) {\n          const selection = getSelection(view.state)\n          /**\n           * @type {Y.RelativePosition}\n           */\n          const anchor = absolutePositionToRelativePosition(\n            selection.anchor,\n            ystate.type,\n            ystate.binding.mapping\n          )\n          /**\n           * @type {Y.RelativePosition}\n           */\n          const head = absolutePositionToRelativePosition(\n            selection.head,\n            ystate.type,\n            ystate.binding.mapping\n          )\n          if (\n            current.cursor == null ||\n            !Y.compareRelativePositions(\n              Y.createRelativePositionFromJSON(current.cursor.anchor),\n              anchor\n            ) ||\n            !Y.compareRelativePositions(\n              Y.createRelativePositionFromJSON(current.cursor.head),\n              head\n            )\n          ) {\n            awareness.setLocalStateField(cursorStateField, {\n              anchor,\n              head\n            })\n          }\n        } else if (\n          current.cursor != null &&\n          relativePositionToAbsolutePosition(\n            ystate.doc,\n            ystate.type,\n            Y.createRelativePositionFromJSON(current.cursor.anchor),\n            ystate.binding.mapping\n          ) !== null\n        ) {\n          // delete cursor information if current cursor information is owned by this editor binding\n          awareness.setLocalStateField(cursorStateField, null)\n        }\n      }\n      awareness.on('change', awarenessListener)\n      view.dom.addEventListener('focusin', updateCursorInfo)\n      view.dom.addEventListener('focusout', updateCursorInfo)\n      return {\n        update: updateCursorInfo,\n        destroy: () => {\n          view.dom.removeEventListener('focusin', updateCursorInfo)\n          view.dom.removeEventListener('focusout', updateCursorInfo)\n          awareness.off('change', awarenessListener)\n          awareness.setLocalStateField(cursorStateField, null)\n        }\n      }\n    }\n  })\n", "import { Plugin } from 'prosemirror-state' // eslint-disable-line\n\nimport { getRelativeSelection } from './sync-plugin.js'\nimport { UndoManager, Item, ContentType, XmlElement, Text } from 'yjs'\nimport { yUndoPluginKey, ySyncPluginKey } from './keys.js'\n\nexport const undo = state => {\n  const undoManager = yUndoPluginKey.getState(state).undoManager\n  if (undoManager != null) {\n    undoManager.undo()\n    return true\n  }\n}\n\nexport const redo = state => {\n  const undoManager = yUndoPluginKey.getState(state).undoManager\n  if (undoManager != null) {\n    undoManager.redo()\n    return true\n  }\n}\n\nexport const defaultProtectedNodes = new Set(['paragraph'])\n\nexport const defaultDeleteFilter = (item, protectedNodes) => !(item instanceof Item) ||\n!(item.content instanceof ContentType) ||\n!(item.content.type instanceof Text ||\n  (item.content.type instanceof XmlElement && protectedNodes.has(item.content.type.nodeName))) ||\nitem.content.type._length === 0\n\nexport const yUndoPlugin = ({ protectedNodes = defaultProtectedNodes, trackedOrigins = [], undoManager = null } = {}) => new Plugin({\n  key: yUndoPluginKey,\n  state: {\n    init: (initargs, state) => {\n      // TODO: check if plugin order matches and fix\n      const ystate = ySyncPluginKey.getState(state)\n      const _undoManager = undoManager || new UndoManager(ystate.type, {\n        trackedOrigins: new Set([ySyncPluginKey].concat(trackedOrigins)),\n        deleteFilter: (item) => defaultDeleteFilter(item, protectedNodes),\n        captureTransaction: tr => tr.meta.get('addToHistory') !== false\n      })\n      return {\n        undoManager: _undoManager,\n        prevSel: null,\n        hasUndoOps: _undoManager.undoStack.length > 0,\n        hasRedoOps: _undoManager.redoStack.length > 0\n      }\n    },\n    /**\n     * @returns {any}\n     */\n    apply: (tr, val, oldState, state) => {\n      const binding = ySyncPluginKey.getState(state).binding\n      const undoManager = val.undoManager\n      const hasUndoOps = undoManager.undoStack.length > 0\n      const hasRedoOps = undoManager.redoStack.length > 0\n      if (binding) {\n        return {\n          undoManager,\n          prevSel: getRelativeSelection(binding, oldState),\n          hasUndoOps,\n          hasRedoOps\n        }\n      } else {\n        if (hasUndoOps !== val.hasUndoOps || hasRedoOps !== val.hasRedoOps) {\n          return Object.assign({}, val, {\n            hasUndoOps: undoManager.undoStack.length > 0,\n            hasRedoOps: undoManager.redoStack.length > 0\n          })\n        } else { // nothing changed\n          return val\n        }\n      }\n    }\n  },\n  view: view => {\n    const ystate = ySyncPluginKey.getState(view.state)\n    const undoManager = yUndoPluginKey.getState(view.state).undoManager\n    undoManager.on('stack-item-added', ({ stackItem }) => {\n      const binding = ystate.binding\n      if (binding) {\n        stackItem.meta.set(binding, yUndoPluginKey.getState(view.state).prevSel)\n      }\n    })\n    undoManager.on('stack-item-popped', ({ stackItem }) => {\n      const binding = ystate.binding\n      if (binding) {\n        binding.beforeTransactionSelection = stackItem.meta.get(binding) || binding.beforeTransactionSelection\n      }\n    })\n    return {\n      destroy: () => {\n        undoManager.destroy()\n      }\n    }\n  }\n})\n", "import { Extension } from '@tiptap/core'\nimport { EditorView } from '@tiptap/pm/view'\nimport {\n  redo,\n  undo,\n  ySyncPlugin,\n  yUndoPlugin,\n  yUndoPluginKey,\n} from 'y-prosemirror'\nimport { UndoManager } from 'yjs'\n\ntype YSyncOpts = Parameters<typeof ySyncPlugin>[1]\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    collaboration: {\n      /**\n       * Undo recent changes\n       * @example editor.commands.undo()\n       */\n      undo: () => ReturnType,\n      /**\n       * Reapply reverted changes\n       * @example editor.commands.redo()\n       */\n      redo: () => ReturnType,\n    }\n  }\n}\n\nexport interface CollaborationOptions {\n  /**\n   * An initialized Y.js document.\n   * @example new Y.Doc()\n   */\n  document: any,\n\n  /**\n   * Name of a Y.js fragment, can be changed to sync multiple fields with one Y.js document.\n   * @default 'default'\n   * @example 'my-custom-field'\n   */\n  field: string,\n\n  /**\n   * A raw Y.js fragment, can be used instead of `document` and `field`.\n   * @example new Y.Doc().getXmlFragment('body')\n   */\n  fragment: any,\n\n  /**\n   * Fired when the content from Yjs is initially rendered to Tiptap.\n   */\n  onFirstRender?: () => void,\n\n  ySyncOptions?: YSyncOpts\n}\n\n/**\n * This extension allows you to collaborate with others in real-time.\n * @see https://tiptap.dev/api/extensions/collaboration\n */\nexport const Collaboration = Extension.create<CollaborationOptions>({\n  name: 'collaboration',\n\n  priority: 1000,\n\n  addOptions() {\n    return {\n      document: null,\n      field: 'default',\n      fragment: null,\n    }\n  },\n\n  onCreate() {\n    if (this.editor.extensionManager.extensions.find(extension => extension.name === 'history')) {\n      console.warn('[tiptap warn]: \"@tiptap/extension-collaboration\" comes with its own history support and is not compatible with \"@tiptap/extension-history\".')\n    }\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ tr, state, dispatch }) => {\n        tr.setMeta('preventDispatch', true)\n\n        const undoManager: UndoManager = yUndoPluginKey.getState(state).undoManager\n\n        if (undoManager.undoStack.length === 0) {\n          return false\n        }\n\n        if (!dispatch) {\n          return true\n        }\n\n        return undo(state)\n      },\n      redo: () => ({ tr, state, dispatch }) => {\n        tr.setMeta('preventDispatch', true)\n\n        const undoManager: UndoManager = yUndoPluginKey.getState(state).undoManager\n\n        if (undoManager.redoStack.length === 0) {\n          return false\n        }\n\n        if (!dispatch) {\n          return true\n        }\n\n        return redo(state)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n    }\n  },\n\n  addProseMirrorPlugins() {\n    const fragment = this.options.fragment\n      ? this.options.fragment\n      : this.options.document.getXmlFragment(this.options.field)\n\n    // Quick fix until there is an official implementation (thanks to @hamflx).\n    // See https://github.com/yjs/y-prosemirror/issues/114 and https://github.com/yjs/y-prosemirror/issues/102\n    const yUndoPluginInstance = yUndoPlugin()\n    const originalUndoPluginView = yUndoPluginInstance.spec.view\n\n    yUndoPluginInstance.spec.view = (view: EditorView) => {\n      const { undoManager } = yUndoPluginKey.getState(view.state)\n\n      if (undoManager.restore) {\n        undoManager.restore()\n        // eslint-disable-next-line\n        undoManager.restore = () => {}\n      }\n\n      const viewRet = originalUndoPluginView ? originalUndoPluginView(view) : undefined\n\n      return {\n        destroy: () => {\n          const hasUndoManSelf = undoManager.trackedOrigins.has(undoManager)\n          // eslint-disable-next-line\n          const observers = undoManager._observers\n\n          undoManager.restore = () => {\n            if (hasUndoManSelf) {\n              undoManager.trackedOrigins.add(undoManager)\n            }\n\n            undoManager.doc.on('afterTransaction', undoManager.afterTransactionHandler)\n            // eslint-disable-next-line\n            undoManager._observers = observers\n          }\n\n          if (viewRet?.destroy) {\n            viewRet.destroy()\n          }\n        },\n      }\n    }\n\n    const ySyncPluginOptions: YSyncOpts = {\n      ...this.options.ySyncOptions,\n      onFirstRender: this.options.onFirstRender,\n    }\n\n    const ySyncPluginInstance = ySyncPlugin(fragment, ySyncPluginOptions)\n\n    return [ySyncPluginInstance, yUndoPluginInstance]\n  },\n})\n", "import { Transaction } from '@tiptap/pm/state'\nimport { ySyncPluginKey } from 'y-prosemirror'\n\n/**\n * Checks if a transaction was originated from a Yjs change.\n * @param {Transaction} transaction - The transaction to check.\n * @returns {boolean} - True if the transaction was originated from a Yjs change, false otherwise.\n * @example\n * const transaction = new Transaction(doc)\n * const isOrigin = isChangeOrigin(transaction) // returns false\n */\nexport function isChangeOrigin(transaction: Transaction): boolean {\n  return !!transaction.getMeta(ySyncPluginKey)\n}\n", "import { Extension } from '@tiptap/core'\nimport { DecorationAttrs } from '@tiptap/pm/view'\nimport { defaultSelectionBuilder, yCursorPlugin } from 'y-prosemirror'\n\ntype CollaborationCursorStorage = {\n  users: { clientId: number, [key: string]: any }[],\n}\n\nexport interface CollaborationCursorOptions {\n  /**\n   * The Hocuspocus provider instance. This can also be a TiptapCloudProvider instance.\n   * @type {HocuspocusProvider | TiptapCloudProvider}\n   * @example new HocuspocusProvider()\n   */\n  provider: any,\n\n  /**\n   * The user details object – feel free to add properties to this object as needed\n   * @example { name: 'John Doe', color: '#305500' }\n   */\n  user: Record<string, any>,\n\n  /**\n   * A function that returns a DOM element for the cursor.\n   * @param user The user details object\n   * @example\n   * render: user => {\n   *  const cursor = document.createElement('span')\n   *  cursor.classList.add('collaboration-cursor__caret')\n   *  cursor.setAttribute('style', `border-color: ${user.color}`)\n   *\n   *  const label = document.createElement('div')\n   *  label.classList.add('collaboration-cursor__label')\n   *  label.setAttribute('style', `background-color: ${user.color}`)\n   *  label.insertBefore(document.createTextNode(user.name), null)\n   *\n   *  cursor.insertBefore(label, null)\n   *  return cursor\n   * }\n   */\n  render (user: Record<string, any>): HTMLElement,\n\n  /**\n   * A function that returns a ProseMirror DecorationAttrs object for the selection.\n   * @param user The user details object\n   * @example\n   * selectionRender: user => {\n   * return {\n   *  nodeName: 'span',\n   *  class: 'collaboration-cursor__selection',\n   *  style: `background-color: ${user.color}`,\n   *  'data-user': user.name,\n   * }\n   */\n  selectionRender (user: Record<string, any>): DecorationAttrs\n\n  /**\n   * @deprecated The \"onUpdate\" option is deprecated. Please use `editor.storage.collaborationCursor.users` instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor\n   */\n  onUpdate: (users: { clientId: number, [key: string]: any }[]) => null,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    collaborationCursor: {\n      /**\n       * Update details of the current user\n       * @example editor.commands.updateUser({ name: 'John Doe', color: '#305500' })\n       */\n      updateUser: (attributes: Record<string, any>) => ReturnType,\n      /**\n       * Update details of the current user\n       *\n       * @deprecated The \"user\" command is deprecated. Please use \"updateUser\" instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor\n       */\n      user: (attributes: Record<string, any>) => ReturnType,\n    }\n  }\n}\n\nconst awarenessStatesToArray = (states: Map<number, Record<string, any>>) => {\n  return Array.from(states.entries()).map(([key, value]) => {\n    return {\n      clientId: key,\n      ...value.user,\n    }\n  })\n}\n\nconst defaultOnUpdate = () => null\n\n/**\n * This extension allows you to add collaboration cursors to your editor.\n * @see https://tiptap.dev/api/extensions/collaboration-cursor\n */\nexport const CollaborationCursor = Extension.create<CollaborationCursorOptions, CollaborationCursorStorage>({\n  name: 'collaborationCursor',\n\n  priority: 999,\n\n  addOptions() {\n    return {\n      provider: null,\n      user: {\n        name: null,\n        color: null,\n      },\n      render: user => {\n        const cursor = document.createElement('span')\n\n        cursor.classList.add('collaboration-cursor__caret')\n        cursor.setAttribute('style', `border-color: ${user.color}`)\n\n        const label = document.createElement('div')\n\n        label.classList.add('collaboration-cursor__label')\n        label.setAttribute('style', `background-color: ${user.color}`)\n        label.insertBefore(document.createTextNode(user.name), null)\n        cursor.insertBefore(label, null)\n\n        return cursor\n      },\n      selectionRender: defaultSelectionBuilder,\n      onUpdate: defaultOnUpdate,\n    }\n  },\n\n  onCreate() {\n    if (this.options.onUpdate !== defaultOnUpdate) {\n      console.warn('[tiptap warn]: DEPRECATED: The \"onUpdate\" option is deprecated. Please use `editor.storage.collaborationCursor.users` instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor')\n    }\n    if (!this.options.provider) {\n      throw new Error('The \"provider\" option is required for the CollaborationCursor extension')\n    }\n  },\n\n  addStorage() {\n    return {\n      users: [],\n    }\n  },\n\n  addCommands() {\n    return {\n      updateUser: attributes => () => {\n        this.options.user = attributes\n\n        this.options.provider.awareness.setLocalStateField('user', this.options.user)\n\n        return true\n      },\n      user: attributes => ({ editor }) => {\n        console.warn('[tiptap warn]: DEPRECATED: The \"user\" command is deprecated. Please use \"updateUser\" instead. Read more: https://tiptap.dev/api/extensions/collaboration-cursor')\n\n        return editor.commands.updateUser(attributes)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      yCursorPlugin(\n        (() => {\n          this.options.provider.awareness.setLocalStateField('user', this.options.user)\n\n          this.storage.users = awarenessStatesToArray(this.options.provider.awareness.states)\n\n          this.options.provider.awareness.on('update', () => {\n            this.storage.users = awarenessStatesToArray(this.options.provider.awareness.states)\n          })\n\n          return this.options.provider.awareness\n        })(),\n        // @ts-ignore\n        {\n          cursorBuilder: this.options.render,\n          selectionBuilder: this.options.selectionRender,\n        },\n      ),\n    ]\n  },\n})\n", "import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n", "import { Extension } from '@tiptap/core'\nimport { dropCursor } from '@tiptap/pm/dropcursor'\n\nexport interface DropcursorOptions {\n  /**\n   * The color of the drop cursor\n   * @default 'currentColor'\n   * @example 'red'\n   */\n  color: string | undefined,\n\n  /**\n   * The width of the drop cursor\n   * @default 1\n   * @example 2\n  */\n  width: number | undefined,\n\n  /**\n   * The class of the drop cursor\n   * @default undefined\n   * @example 'drop-cursor'\n  */\n  class: string | undefined,\n}\n\n/**\n * This extension allows you to add a drop cursor to your editor.\n * A drop cursor is a line that appears when you drag and drop content\n * inbetween nodes.\n * @see https://tiptap.dev/api/extensions/dropcursor\n */\nexport const Dropcursor = Extension.create<DropcursorOptions>({\n  name: 'dropCursor',\n\n  addOptions() {\n    return {\n      color: 'currentColor',\n      width: 1,\n      class: undefined,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      dropCursor(this.options),\n    ]\n  },\n})\n", "import { keydownHandler } from 'prosemirror-keymap';\nimport { Selection, NodeSelection, TextSelection, Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\n/**\nGap cursor selections are represented using this class. Its\n`$anchor` and `$head` properties both point at the cursor position.\n*/\nclass GapCursor extends Selection {\n    /**\n    Create a gap cursor.\n    */\n    constructor($pos) {\n        super($pos, $pos);\n    }\n    map(doc, mapping) {\n        let $pos = doc.resolve(mapping.map(this.head));\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n    content() { return Slice.empty; }\n    eq(other) {\n        return other instanceof GapCursor && other.head == this.head;\n    }\n    toJSON() {\n        return { type: \"gapcursor\", pos: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for GapCursor.fromJSON\");\n        return new GapCursor(doc.resolve(json.pos));\n    }\n    /**\n    @internal\n    */\n    getBookmark() { return new GapBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static valid($pos) {\n        let parent = $pos.parent;\n        if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos))\n            return false;\n        let override = parent.type.spec.allowGapCursor;\n        if (override != null)\n            return override;\n        let deflt = parent.contentMatchAt($pos.index()).defaultType;\n        return deflt && deflt.isTextblock;\n    }\n    /**\n    @internal\n    */\n    static findGapCursorFrom($pos, dir, mustMove = false) {\n        search: for (;;) {\n            if (!mustMove && GapCursor.valid($pos))\n                return $pos;\n            let pos = $pos.pos, next = null;\n            // Scan up from this position\n            for (let d = $pos.depth;; d--) {\n                let parent = $pos.node(d);\n                if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n                    next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n                    break;\n                }\n                else if (d == 0) {\n                    return null;\n                }\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            // And then down into the next node\n            for (;;) {\n                let inside = dir > 0 ? next.firstChild : next.lastChild;\n                if (!inside) {\n                    if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n                        $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n                        mustMove = false;\n                        continue search;\n                    }\n                    break;\n                }\n                next = inside;\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            return null;\n        }\n    }\n}\nGapCursor.prototype.visible = false;\nGapCursor.findFrom = GapCursor.findGapCursorFrom;\nSelection.jsonID(\"gapcursor\", GapCursor);\nclass GapBookmark {\n    constructor(pos) {\n        this.pos = pos;\n    }\n    map(mapping) {\n        return new GapBookmark(mapping.map(this.pos));\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.pos);\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n}\nfunction closedBefore($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.index(d), parent = $pos.node(d);\n        // At the start of this parent, look at next one\n        if (index == 0) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        // See if the node before (or its first ancestor) is closed\n        for (let before = parent.child(index - 1);; before = before.lastChild) {\n            if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating)\n                return true;\n            if (before.inlineContent)\n                return false;\n        }\n    }\n    // Hit start of document\n    return true;\n}\nfunction closedAfter($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.indexAfter(d), parent = $pos.node(d);\n        if (index == parent.childCount) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        for (let after = parent.child(index);; after = after.firstChild) {\n            if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating)\n                return true;\n            if (after.inlineContent)\n                return false;\n        }\n    }\n    return true;\n}\n\n/**\nCreate a gap cursor plugin. When enabled, this will capture clicks\nnear and arrow-key-motion past places that don't have a normally\nselectable position nearby, and create a gap cursor selection for\nthem. The cursor is drawn as an element with class\n`ProseMirror-gapcursor`. You can either include\n`style/gapcursor.css` from the package's directory or add your own\nstyles to make it visible.\n*/\nfunction gapCursor() {\n    return new Plugin({\n        props: {\n            decorations: drawGapCursor,\n            createSelectionBetween(_view, $anchor, $head) {\n                return $anchor.pos == $head.pos && GapCursor.valid($head) ? new GapCursor($head) : null;\n            },\n            handleClick,\n            handleKeyDown,\n            handleDOMEvents: { beforeinput: beforeinput }\n        }\n    });\n}\nconst handleKeyDown = keydownHandler({\n    \"ArrowLeft\": arrow(\"horiz\", -1),\n    \"ArrowRight\": arrow(\"horiz\", 1),\n    \"ArrowUp\": arrow(\"vert\", -1),\n    \"ArrowDown\": arrow(\"vert\", 1)\n});\nfunction arrow(axis, dir) {\n    const dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\");\n    return function (state, dispatch, view) {\n        let sel = state.selection;\n        let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty;\n        if (sel instanceof TextSelection) {\n            if (!view.endOfTextblock(dirStr) || $start.depth == 0)\n                return false;\n            mustMove = false;\n            $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n        }\n        let $found = GapCursor.findGapCursorFrom($start, dir, mustMove);\n        if (!$found)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(new GapCursor($found)));\n        return true;\n    };\n}\nfunction handleClick(view, pos, event) {\n    if (!view || !view.editable)\n        return false;\n    let $pos = view.state.doc.resolve(pos);\n    if (!GapCursor.valid($pos))\n        return false;\n    let clickPos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (clickPos && clickPos.inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(clickPos.inside)))\n        return false;\n    view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n    return true;\n}\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n    if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor))\n        return false;\n    let { $from } = view.state.selection;\n    let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text);\n    if (!insert)\n        return false;\n    let frag = Fragment.empty;\n    for (let i = insert.length - 1; i >= 0; i--)\n        frag = Fragment.from(insert[i].createAndFill(null, frag));\n    let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0));\n    tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)));\n    view.dispatch(tr);\n    return false;\n}\nfunction drawGapCursor(state) {\n    if (!(state.selection instanceof GapCursor))\n        return null;\n    let node = document.createElement(\"div\");\n    node.className = \"ProseMirror-gapcursor\";\n    return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, { key: \"gapcursor\" })]);\n}\n\nexport { GapCursor, gapCursor };\n", "import {\n  callOrReturn,\n  Extension,\n  getExtensionField,\n  ParentConfig,\n} from '@tiptap/core'\nimport { gapCursor } from '@tiptap/pm/gapcursor'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options, Storage> {\n    /**\n     * A function to determine whether the gap cursor is allowed at the current position. Must return `true` or `false`.\n     * @default null\n     */\n    allowGapCursor?:\n      | boolean\n      | null\n      | ((this: {\n        name: string,\n        options: Options,\n        storage: Storage,\n        parent: ParentConfig<NodeConfig<Options>>['allowGapCursor'],\n      }) => boolean | null),\n  }\n}\n\n/**\n * This extension allows you to add a gap cursor to your editor.\n * A gap cursor is a cursor that appears when you click on a place\n * where no content is present, for example inbetween nodes.\n * @see https://tiptap.dev/api/extensions/gapcursor\n */\nexport const Gapcursor = Extension.create({\n  name: 'gapCursor',\n\n  addProseMirrorPlugins() {\n    return [\n      gapCursor(),\n    ]\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    return {\n      allowGapCursor: callOrReturn(getExtensionField(extension, 'allowGapCursor', context)) ?? null,\n    }\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface HardBreakOptions {\n  /**\n   * Controls if marks should be kept after being split by a hard break.\n   * @default true\n   * @example false\n   */\n  keepMarks: boolean,\n\n  /**\n   * HTML attributes to add to the hard break element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    hardBreak: {\n      /**\n       * Add a hard break\n       * @example editor.commands.setHardBreak()\n       */\n      setHardBreak: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to insert hard breaks.\n * @see https://www.tiptap.dev/api/nodes/hard-break\n */\nexport const HardBreak = Node.create<HardBreakOptions>({\n  name: 'hardBreak',\n\n  addOptions() {\n    return {\n      keepMarks: true,\n      HTMLAttributes: {},\n    }\n  },\n\n  inline: true,\n\n  group: 'inline',\n\n  selectable: false,\n\n  parseHTML() {\n    return [\n      { tag: 'br' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  renderText() {\n    return '\\n'\n  },\n\n  addCommands() {\n    return {\n      setHardBreak: () => ({\n        commands,\n        chain,\n        state,\n        editor,\n      }) => {\n        return commands.first([\n          () => commands.exitCode(),\n          () => commands.command(() => {\n            const { selection, storedMarks } = state\n\n            if (selection.$from.parent.type.spec.isolating) {\n              return false\n            }\n\n            const { keepMarks } = this.options\n            const { splittableMarks } = editor.extensionManager\n            const marks = storedMarks\n              || (selection.$to.parentOffset && selection.$from.marks())\n\n            return chain()\n              .insertContent({ type: this.name })\n              .command(({ tr, dispatch }) => {\n                if (dispatch && marks && keepMarks) {\n                  const filteredMarks = marks\n                    .filter(mark => splittableMarks.includes(mark.type.name))\n\n                  tr.ensureMarks(filteredMarks)\n                }\n\n                return true\n              })\n              .run()\n          }),\n        ])\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak(),\n    }\n  },\n})\n", "var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nexport default RopeSequence;\n", "import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime, prevComposition) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n        this.prevComposition = prevComposition;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0, -1);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps), history.prevTime, history.prevComposition);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime, history.prevComposition);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let composition = tr.getMeta(\"composition\");\n        let newGroup = history.prevTime == 0 ||\n            (!appended && history.prevComposition != composition &&\n                (history.prevTime < (tr.time || 0) - options.newGroupDelay || !isAdjacentTo(tr, history.prevRanges)));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time, composition == null ? history.prevComposition : composition);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(maps) {\n    let result = [];\n    for (let i = maps.length - 1; i >= 0 && result.length == 0; i--)\n        maps[i].forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return null;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0, -1);\n    return pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist });\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0, -1);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\nfunction buildCommand(redo, scroll) {\n    return (state, dispatch) => {\n        let hist = historyKey.getState(state);\n        if (!hist || (redo ? hist.undone : hist.done).eventCount == 0)\n            return false;\n        if (dispatch) {\n            let tr = histTransaction(hist, state, redo);\n            if (tr)\n                dispatch(scroll ? tr.scrollIntoView() : tr);\n        }\n        return true;\n    };\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = buildCommand(false, true);\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = buildCommand(true, true);\n/**\nA command function that undoes the last change. Don't scroll the\nselection into view.\n*/\nconst undoNoScroll = buildCommand(false, false);\n/**\nA command function that redoes the last undone change. Don't\nscroll the selection into view.\n*/\nconst redoNoScroll = buildCommand(true, false);\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, redoNoScroll, undo, undoDepth, undoNoScroll };\n", "import { Extension } from '@tiptap/core'\nimport { history, redo, undo } from '@tiptap/pm/history'\n\nexport interface HistoryOptions {\n  /**\n   * The amount of history events that are collected before the oldest events are discarded.\n   * @default 100\n   * @example 50\n   */\n  depth: number,\n\n  /**\n   * The delay (in milliseconds) between changes after which a new group should be started.\n   * @default 500\n   * @example 1000\n   */\n  newGroupDelay: number,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    history: {\n      /**\n       * Undo recent changes\n       * @example editor.commands.undo()\n       */\n      undo: () => ReturnType,\n      /**\n       * Reapply reverted changes\n       * @example editor.commands.redo()\n       */\n      redo: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to undo and redo recent changes.\n * @see https://www.tiptap.dev/api/extensions/history\n *\n * **Important**: If the `@tiptap/extension-collaboration` package is used, make sure to remove\n * the `history` extension, as it is not compatible with the `collaboration` extension.\n *\n * `@tiptap/extension-collaboration` uses its own history implementation.\n */\nexport const History = Extension.create<HistoryOptions>({\n  name: 'history',\n\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500,\n    }\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ state, dispatch }) => {\n        return undo(state, dispatch)\n      },\n      redo: () => ({ state, dispatch }) => {\n        return redo(state, dispatch)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      history(this.options),\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n      'Mod-y': () => this.editor.commands.redo(),\n\n      // Russian keyboard layouts\n      'Mod-я': () => this.editor.commands.undo(),\n      'Shift-Mod-я': () => this.editor.commands.redo(),\n    }\n  },\n})\n", "// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\n// TODO: Rename OPEN -> LEFT and CLOSE -> RIGHT in v5 to fit with Unicode names\n// Also rename angle brackes to LESSTHAN and GREATER THAN\nconst OPENBRACE = 'OPENBRACE'; // {\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst FULLWIDTHLEFTPAREN = 'FULLWIDTHLEFTPAREN'; // （\nconst FULLWIDTHRIGHTPAREN = 'FULLWIDTHRIGHTPAREN'; // ）\nconst LEFTCORNERBRACKET = 'LEFTCORNERBRACKET'; // 「\nconst RIGHTCORNERBRACKET = 'RIGHTCORNERBRACKET'; // 」\nconst LEFTWHITECORNERBRACKET = 'LEFTWHITECORNERBRACKET'; // 『\nconst RIGHTWHITECORNERBRACKET = 'RIGHTWHITECORNERBRACKET'; // 』\nconst FULLWIDTHLESSTHAN = 'FULLWIDTHLESSTHAN'; // ＜\nconst FULLWIDTHGREATERTHAN = 'FULLWIDTHGREATERTHAN'; // ＞\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tCLOSEBRACE: CLOSEBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEPAREN: CLOSEPAREN,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tFULLWIDTHLEFTPAREN: FULLWIDTHLEFTPAREN,\n\tFULLWIDTHRIGHTPAREN: FULLWIDTHRIGHTPAREN,\n\tLEFTCORNERBRACKET: LEFTCORNERBRACKET,\n\tRIGHTCORNERBRACKET: RIGHTCORNERBRACKET,\n\tLEFTWHITECORNERBRACKET: LEFTWHITECORNERBRACKET,\n\tRIGHTWHITECORNERBRACKET: RIGHTWHITECORNERBRACKET,\n\tFULLWIDTHLESSTHAN: FULLWIDTHLESSTHAN,\n\tFULLWIDTHGREATERTHAN: FULLWIDTHGREATERTHAN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, '（', FULLWIDTHLEFTPAREN);\n  tt(Start, '）', FULLWIDTHRIGHTPAREN);\n  tt(Start, '「', LEFTCORNERBRACKET);\n  tt(Start, '」', RIGHTCORNERBRACKET);\n  tt(Start, '『', LEFTWHITECORNERBRACKET);\n  tt(Start, '』', RIGHTWHITECORNERBRACKET);\n  tt(Start, '＜', FULLWIDTHLESSTHAN);\n  tt(Start, '＞', FULLWIDTHGREATERTHAN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, COLON, COMMA, DOT, EXCLAMATION, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port number\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n  const bracketPairs = [[OPENBRACE, CLOSEBRACE],\n  // {}\n  [OPENBRACKET, CLOSEBRACKET],\n  // []\n  [OPENPAREN, CLOSEPAREN],\n  // ()\n  [OPENANGLEBRACKET, CLOSEANGLEBRACKET],\n  // <>\n  [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],\n  // （）\n  [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],\n  // 「」\n  [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],\n  // 『』\n  [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN] // ＜＞\n  ];\n\n  for (let i = 0; i < bracketPairs.length; i++) {\n    const [OPEN, CLOSE] = bracketPairs[i];\n    const UrlOpen = tt(Url$1, OPEN); // URL followed by open bracket\n\n    // Continue not accepting for open brackets\n    tt(UrlNonaccept, OPEN, UrlOpen);\n\n    // Closing bracket component. This character WILL be included in the URL\n    tt(UrlOpen, CLOSE, Url$1);\n\n    // URL that beings with an opening bracket, followed by a symbols.\n    // Note that the final state can still be `UrlOpen` (if the URL has a\n    // single opening bracket for some reason).\n    const UrlOpenQ = makeState(Url);\n    ta(UrlOpen, qsAccepting, UrlOpenQ);\n    const UrlOpenSyms = makeState(); // UrlOpen followed by some symbols it cannot end it\n    ta(UrlOpen, qsNonAccepting);\n\n    // URL that begins with an opening bracket, followed by some symbols\n    ta(UrlOpenQ, qsAccepting, UrlOpenQ);\n    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);\n    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);\n    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);\n\n    // Close brace/bracket to become regular URL\n    tt(UrlOpenQ, CLOSE, Url$1);\n    tt(UrlOpenSyms, CLOSE, Url$1);\n  }\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error(`linkifyjs: incorrect scheme format.\n1. Must only contain digits, lowercase ASCII letters or \"-\"\n2. Cannot start or end with \"-\"\n3. \"-\" cannot repeat`);\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n */\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type) && options.check(token)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n", "import {\n  combineTransactionSteps,\n  findChildrenInRange,\n  getChangedRanges,\n  getMarksBetween,\n  NodeWithPos,\n} from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { MultiToken, tokenize } from 'linkifyjs'\n\n/**\n * Check if the provided tokens form a valid link structure, which can either be a single link token\n * or a link token surrounded by parentheses or square brackets.\n *\n * This ensures that only complete and valid text is hyperlinked, preventing cases where a valid\n * top-level domain (TLD) is immediately followed by an invalid character, like a number. For\n * example, with the `find` method from Linkify, entering `example.com1` would result in\n * `example.com` being linked and the trailing `1` left as plain text. By using the `tokenize`\n * method, we can perform more comprehensive validation on the input text.\n */\nfunction isValidLinkStructure(tokens: Array<ReturnType<MultiToken['toObject']>>) {\n  if (tokens.length === 1) {\n    return tokens[0].isLink\n  }\n\n  if (tokens.length === 3 && tokens[1].isLink) {\n    return ['()', '[]'].includes(tokens[0].value + tokens[2].value)\n  }\n\n  return false\n}\n\ntype AutolinkOptions = {\n  type: MarkType\n  defaultProtocol: string\n  validate: (url: string) => boolean\n}\n\n/**\n * This plugin allows you to automatically add links to your editor.\n * @param options The plugin options\n * @returns The plugin instance\n */\nexport function autolink(options: AutolinkOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('autolink'),\n    appendTransaction: (transactions, oldState, newState) => {\n      /**\n       * Does the transaction change the document?\n       */\n      const docChanges = transactions.some(transaction => transaction.docChanged) && !oldState.doc.eq(newState.doc)\n\n      /**\n       * Prevent autolink if the transaction is not a document change or if the transaction has the meta `preventAutolink`.\n       */\n      const preventAutolink = transactions.some(transaction => transaction.getMeta('preventAutolink'))\n\n      /**\n       * Prevent autolink if the transaction is not a document change\n       * or if the transaction has the meta `preventAutolink`.\n       */\n      if (!docChanges || preventAutolink) {\n        return\n      }\n\n      const { tr } = newState\n      const transform = combineTransactionSteps(oldState.doc, [...transactions])\n      const changes = getChangedRanges(transform)\n\n      changes.forEach(({ newRange }) => {\n        // Now let’s see if we can add new links.\n        const nodesInChangedRanges = findChildrenInRange(\n          newState.doc,\n          newRange,\n          node => node.isTextblock,\n        )\n\n        let textBlock: NodeWithPos | undefined\n        let textBeforeWhitespace: string | undefined\n\n        if (nodesInChangedRanges.length > 1) {\n          // Grab the first node within the changed ranges (ex. the first of two paragraphs when hitting enter).\n          textBlock = nodesInChangedRanges[0]\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            textBlock.pos + textBlock.node.nodeSize,\n            undefined,\n            ' ',\n          )\n        } else if (\n          nodesInChangedRanges.length\n          // We want to make sure to include the block seperator argument to treat hard breaks like spaces.\n          && newState.doc.textBetween(newRange.from, newRange.to, ' ', ' ').endsWith(' ')\n        ) {\n          textBlock = nodesInChangedRanges[0]\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            newRange.to,\n            undefined,\n            ' ',\n          )\n        }\n\n        if (textBlock && textBeforeWhitespace) {\n          const wordsBeforeWhitespace = textBeforeWhitespace.split(' ').filter(s => s !== '')\n\n          if (wordsBeforeWhitespace.length <= 0) {\n            return false\n          }\n\n          const lastWordBeforeSpace = wordsBeforeWhitespace[wordsBeforeWhitespace.length - 1]\n          const lastWordAndBlockOffset = textBlock.pos + textBeforeWhitespace.lastIndexOf(lastWordBeforeSpace)\n\n          if (!lastWordBeforeSpace) {\n            return false\n          }\n\n          const linksBeforeSpace = tokenize(lastWordBeforeSpace).map(t => t.toObject(options.defaultProtocol))\n\n          if (!isValidLinkStructure(linksBeforeSpace)) {\n            return false\n          }\n\n          linksBeforeSpace\n            .filter(link => link.isLink)\n            // Calculate link position.\n            .map(link => ({\n              ...link,\n              from: lastWordAndBlockOffset + link.start + 1,\n              to: lastWordAndBlockOffset + link.end + 1,\n            }))\n            // ignore link inside code mark\n            .filter(link => {\n              if (!newState.schema.marks.code) {\n                return true\n              }\n\n              return !newState.doc.rangeHasMark(\n                link.from,\n                link.to,\n                newState.schema.marks.code,\n              )\n            })\n            // validate link\n            .filter(link => options.validate(link.value))\n            // Add link mark.\n            .forEach(link => {\n              if (getMarksBetween(link.from, link.to, newState.doc).some(item => item.mark.type === options.type)) {\n                return\n              }\n\n              tr.addMark(\n                link.from,\n                link.to,\n                options.type.create({\n                  href: link.href,\n                }),\n              )\n            })\n        }\n      })\n\n      if (!tr.steps.length) {\n        return\n      }\n\n      return tr\n    },\n  })\n}\n", "import { getAttributes } from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\n\ntype ClickHandlerOptions = {\n  type: MarkType;\n}\n\nexport function clickHandler(options: ClickHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('handleClickLink'),\n    props: {\n      handleClick: (view, pos, event) => {\n        if (event.button !== 0) {\n          return false\n        }\n\n        if (!view.editable) {\n          return false\n        }\n\n        let a = event.target as HTMLElement\n        const els = []\n\n        while (a.nodeName !== 'DIV') {\n          els.push(a)\n          a = a.parentNode as HTMLElement\n        }\n\n        if (!els.find(value => value.nodeName === 'A')) {\n          return false\n        }\n\n        const attrs = getAttributes(view.state, options.type.name)\n        const link = (event.target as HTMLLinkElement)\n\n        const href = link?.href ?? attrs.href\n        const target = link?.target ?? attrs.target\n\n        if (link && href) {\n          window.open(href, target)\n\n          return true\n        }\n\n        return false\n      },\n    },\n  })\n}\n", "import { Editor } from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { find } from 'linkifyjs'\n\ntype PasteHandlerOptions = {\n  editor: Editor\n  defaultProtocol: string\n  type: MarkType\n}\n\nexport function pasteHandler(options: PasteHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('handlePasteLink'),\n    props: {\n      handlePaste: (view, event, slice) => {\n        const { state } = view\n        const { selection } = state\n        const { empty } = selection\n\n        if (empty) {\n          return false\n        }\n\n        let textContent = ''\n\n        slice.content.forEach(node => {\n          textContent += node.textContent\n        })\n\n        const link = find(textContent, { defaultProtocol: options.defaultProtocol }).find(item => item.isLink && item.value === textContent)\n\n        if (!textContent || !link) {\n          return false\n        }\n\n        options.editor.commands.setMark(options.type, {\n          href: link.href,\n        })\n\n        return true\n      },\n    },\n  })\n}\n", "import {\n  Mark, markPasteRule, mergeAttributes, PasteRuleMatch,\n} from '@tiptap/core'\nimport { Plugin } from '@tiptap/pm/state'\nimport { find, registerCustomProtocol, reset } from 'linkifyjs'\n\nimport { autolink } from './helpers/autolink.js'\nimport { clickHandler } from './helpers/clickHandler.js'\nimport { pasteHandler } from './helpers/pasteHandler.js'\n\nexport interface LinkProtocolOptions {\n  /**\n   * The protocol scheme to be registered.\n   * @default '''\n   * @example 'ftp'\n   * @example 'git'\n   */\n  scheme: string;\n\n  /**\n   * If enabled, it allows optional slashes after the protocol.\n   * @default false\n   * @example true\n   */\n  optionalSlashes?: boolean;\n}\n\nexport const pasteRegex = /https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z]{2,}\\b(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)(?:[-a-zA-Z0-9@:%._+~#=?!&/]*)/gi\n\n/**\n * @deprecated The default behavior is now to open links when the editor is not editable.\n */\ntype DeprecatedOpenWhenNotEditable = 'whenNotEditable';\n\nexport interface LinkOptions {\n  /**\n   * If enabled, the extension will automatically add links as you type.\n   * @default true\n   * @example false\n   */\n  autolink: boolean\n\n  /**\n   * An array of custom protocols to be registered with linkifyjs.\n   * @default []\n   * @example ['ftp', 'git']\n   */\n  protocols: Array<LinkProtocolOptions | string>\n\n  /**\n   * Default protocol to use when no protocol is specified.\n   * @default 'http'\n   */\n  defaultProtocol: string\n  /**\n   * If enabled, links will be opened on click.\n   * @default true\n   * @example false\n   */\n  openOnClick: boolean | DeprecatedOpenWhenNotEditable\n  /**\n   * Adds a link to the current selection if the pasted content only contains an url.\n   * @default true\n   * @example false\n   */\n  linkOnPaste: boolean\n\n  /**\n   * HTML attributes to add to the link element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>\n\n  /**\n   * A validation function that modifies link verification for the auto linker.\n   * @param url - The url to be validated.\n   * @returns - True if the url is valid, false otherwise.\n   */\n  validate: (url: string) => boolean\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    link: {\n      /**\n       * Set a link mark\n       * @param attributes The link attributes\n       * @example editor.commands.setLink({ href: 'https://tiptap.dev' })\n       */\n      setLink: (attributes: { href: string; target?: string | null; rel?: string | null; class?: string | null }) => ReturnType\n      /**\n       * Toggle a link mark\n       * @param attributes The link attributes\n       * @example editor.commands.toggleLink({ href: 'https://tiptap.dev' })\n       */\n      toggleLink: (attributes: { href: string; target?: string | null; rel?: string | null; class?: string | null }) => ReturnType\n      /**\n       * Unset a link mark\n       * @example editor.commands.unsetLink()\n       */\n      unsetLink: () => ReturnType\n    }\n  }\n}\n\n// From DOMPurify\n// https://github.com/cure53/DOMPurify/blob/main/src/regexp.js\n// eslint-disable-next-line no-control-regex\nconst ATTR_WHITESPACE = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g\n\nfunction isAllowedUri(uri: string | undefined, protocols?: LinkOptions['protocols']) {\n  const allowedProtocols: string[] = ['http', 'https', 'ftp', 'ftps', 'mailto', 'tel', 'callto', 'sms', 'cid', 'xmpp']\n\n  if (protocols) {\n    protocols.forEach(protocol => {\n      const nextProtocol = (typeof protocol === 'string' ? protocol : protocol.scheme)\n\n      if (nextProtocol) {\n        allowedProtocols.push(nextProtocol)\n      }\n    })\n  }\n\n  // eslint-disable-next-line no-useless-escape\n  return !uri || uri.replace(ATTR_WHITESPACE, '').match(new RegExp(`^(?:(?:${allowedProtocols.join('|')}):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))`, 'i'))\n}\n\n/**\n * This extension allows you to create links.\n * @see https://www.tiptap.dev/api/marks/link\n */\nexport const Link = Mark.create<LinkOptions>({\n  name: 'link',\n\n  priority: 1000,\n\n  keepOnSplit: false,\n\n  exitable: true,\n\n  onCreate() {\n    this.options.protocols.forEach(protocol => {\n      if (typeof protocol === 'string') {\n        registerCustomProtocol(protocol)\n        return\n      }\n      registerCustomProtocol(protocol.scheme, protocol.optionalSlashes)\n    })\n  },\n\n  onDestroy() {\n    reset()\n  },\n\n  inclusive() {\n    return this.options.autolink\n  },\n\n  addOptions() {\n    return {\n      openOnClick: true,\n      linkOnPaste: true,\n      autolink: true,\n      protocols: [],\n      defaultProtocol: 'http',\n      HTMLAttributes: {\n        target: '_blank',\n        rel: 'noopener noreferrer nofollow',\n        class: null,\n      },\n      validate: url => !!url,\n    }\n  },\n\n  addAttributes() {\n    return {\n      href: {\n        default: null,\n        parseHTML(element) {\n          return element.getAttribute('href')\n        },\n      },\n      target: {\n        default: this.options.HTMLAttributes.target,\n      },\n      rel: {\n        default: this.options.HTMLAttributes.rel,\n      },\n      class: {\n        default: this.options.HTMLAttributes.class,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [{\n      tag: 'a[href]',\n      getAttrs: dom => {\n        const href = (dom as HTMLElement).getAttribute('href')\n\n        // prevent XSS attacks\n        if (!href || !isAllowedUri(href, this.options.protocols)) {\n          return false\n        }\n        return null\n      },\n    }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    // prevent XSS attacks\n    if (!isAllowedUri(HTMLAttributes.href, this.options.protocols)) {\n      // strip out the href\n      return ['a', mergeAttributes(this.options.HTMLAttributes, { ...HTMLAttributes, href: '' }), 0]\n    }\n\n    return ['a', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setLink:\n        attributes => ({ chain }) => {\n          return chain().setMark(this.name, attributes).setMeta('preventAutolink', true).run()\n        },\n\n      toggleLink:\n        attributes => ({ chain }) => {\n          return chain()\n            .toggleMark(this.name, attributes, { extendEmptyMarkRange: true })\n            .setMeta('preventAutolink', true)\n            .run()\n        },\n\n      unsetLink:\n        () => ({ chain }) => {\n          return chain()\n            .unsetMark(this.name, { extendEmptyMarkRange: true })\n            .setMeta('preventAutolink', true)\n            .run()\n        },\n    }\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: text => {\n          const foundLinks: PasteRuleMatch[] = []\n\n          if (text) {\n            const { validate } = this.options\n            const links = find(text).filter(item => item.isLink && validate(item.value))\n\n            if (links.length) {\n              links.forEach(link => (foundLinks.push({\n                text: link.value,\n                data: {\n                  href: link.href,\n                },\n                index: link.start,\n              })))\n            }\n          }\n\n          return foundLinks\n        },\n        type: this.type,\n        getAttributes: match => {\n          return {\n            href: match.data?.href,\n          }\n        },\n      }),\n    ]\n  },\n\n  addProseMirrorPlugins() {\n    const plugins: Plugin[] = []\n\n    if (this.options.autolink) {\n      plugins.push(\n        autolink({\n          type: this.type,\n          defaultProtocol: this.options.defaultProtocol,\n          validate: this.options.validate,\n        }),\n      )\n    }\n\n    if (this.options.openOnClick === true) {\n      plugins.push(\n        clickHandler({\n          type: this.type,\n        }),\n      )\n    }\n\n    if (this.options.linkOnPaste) {\n      plugins.push(\n        pasteHandler({\n          editor: this.editor,\n          defaultProtocol: this.options.defaultProtocol,\n          type: this.type,\n        }),\n      )\n    }\n\n    return plugins\n  },\n})\n", "import { Node } from '@tiptap/core'\n\n/**\n * This extension allows you to create text nodes.\n * @see https://www.tiptap.dev/api/nodes/text\n */\nexport const Text = Node.create({\n  name: 'text',\n  group: 'inline',\n})\n", "import type { Dictionary } from \"../dictionary\";\n\nexport const ar: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"عنوان 1\",\n      subtext: \"يستخدم لعناوين المستوى الأعلى\",\n      aliases: [\"ع\", \"عنوان1\", \"ع1\"],\n      group: \"العناوين\",\n    },\n    heading_2: {\n      title: \"عنوان 2\",\n      subtext: \"يستخدم للأقسام الرئيسية\",\n      aliases: [\"ع2\", \"عنوان2\", \"عنوان فرعي\"],\n      group: \"العناوين\",\n    },\n    heading_3: {\n      title: \"عنوان 3\",\n      subtext: \"يستخدم للأقسام الفرعية والعناوين المجموعة\",\n      aliases: [\"ع3\", \"عنوان3\", \"عنوان فرعي\"],\n      group: \"العناوين\",\n    },\n    numbered_list: {\n      title: \"قائمة مرقمة\",\n      subtext: \"تستخدم لعرض قائمة مرقمة\",\n      aliases: [\"ق\", \"عناصر قائمة\", \"قائمة\", \"قائمة مرقمة\"],\n      group: \"الكتل الأساسية\",\n    },\n    bullet_list: {\n      title: \"قائمة نقطية\",\n      subtext: \"تستخدم لعرض قائمة غير مرتبة\",\n      aliases: [\"ق\", \"عناصر قائمة\", \"قائمة\", \"قائمة نقطية\"],\n      group: \"الكتل الأساسية\",\n    },\n    check_list: {\n      title: \"قائمة تحقق\",\n      subtext: \"تستخدم لعرض قائمة بمربعات التحقق\",\n      aliases: [\n        \"قوائم غير مرتبة\",\n        \"عناصر قائمة\",\n        \"قائمة\",\n        \"قائمة تحقق\",\n        \"قائمة التحقق\",\n        \"قائمة مشطوبة\",\n        \"مربع التحقق\",\n      ],\n      group: \"الكتل الأساسية\",\n    },\n    paragraph: {\n      title: \"فقرة\",\n      subtext: \"تستخدم لنص الوثيقة الأساسي\",\n      aliases: [\"ف\", \"فقرة\"],\n      group: \"الكتل الأساسية\",\n    },\n    table: {\n      title: \"جدول\",\n      subtext: \"يستخدم للجداول\",\n      aliases: [\"جدول\"],\n      group: \"متقدم\",\n    },\n    image: {\n      title: \"صورة\",\n      subtext: \"إدراج صورة\",\n      aliases: [\"صورة\", \"رفع صورة\", \"تحميل\", \"صورة\", \"صورة\", \"وسائط\", \"رابط\"],\n      group: \"وسائط\",\n    },\n    video: {\n      title: \"فيديو\",\n      subtext: \"إدراج فيديو\",\n      aliases: [\n        \"فيديو\",\n        \"رفع فيديو\",\n        \"تحميل\",\n        \"فيديو\",\n        \"فيلم\",\n        \"وسائط\",\n        \"رابط\",\n      ],\n      group: \"وسائط\",\n    },\n    audio: {\n      title: \"صوت\",\n      subtext: \"إدراج صوت\",\n      aliases: [\"صوت\", \"رفع صوت\", \"تحميل\", \"صوت\", \"صوت\", \"وسائط\", \"رابط\"],\n      group: \"وسائط\",\n    },\n    file: {\n      title: \"ملف\",\n      subtext: \"إدراج ملف\",\n      aliases: [\"ملف\", \"تحميل\", \"تضمين\", \"وسائط\", \"رابط\"],\n      group: \"وسائط\",\n    },\n    emoji: {\n      title: \"الرموز التعبيرية\",\n      subtext: \"تُستخدم لإدراج رمز تعبيري\",\n      aliases: [\"رمز تعبيري\", \"إيموجي\", \"إيموت\", \"عاطفة\", \"وجه\"],\n      group: \"آخرون\",\n    },\n  },\n  placeholders: {\n    default: \"أدخل نصًا أو اكتب '/' للأوامر\",\n    heading: \"عنوان\",\n    bulletListItem: \"قائمة\",\n    numberedListItem: \"قائمة\",\n    checkListItem: \"قائمة\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"إضافة صورة\",\n    },\n    video: {\n      add_button_text: \"إضافة فيديو\",\n    },\n    audio: {\n      add_button_text: \"إضافة صوت\",\n    },\n    file: {\n      add_button_text: \"إضافة ملف\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"إضافة محتوي\",\n    drag_handle_label: \"فتح قائمة المحتويات\",\n  },\n  drag_handle: {\n    delete_menuitem: \"حذف\",\n    colors_menuitem: \"ألوان\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"حذف عمود\",\n    delete_row_menuitem: \"حذف صف\",\n    add_left_menuitem: \"إضافة عمود إلى اليسار\",\n    add_right_menuitem: \"إضافة عمود إلى اليمين\",\n    add_above_menuitem: \"إضافة صف أعلى\",\n    add_below_menuitem: \"إضافة صف أسفل\",\n  },\n  suggestion_menu: {\n    no_items_title: \"لم يتم العثور على عناصر\",\n    loading: \"جارٍ التحميل…\",\n  },\n  color_picker: {\n    text_title: \"نص\",\n    background_title: \"خلفية\",\n    colors: {\n      default: \"افتراضي\",\n      gray: \"رمادي\",\n      brown: \"بني\",\n      red: \"أحمر\",\n      orange: \"برتقالي\",\n      yellow: \"أصفر\",\n      green: \"أخضر\",\n      blue: \"أزرق\",\n      purple: \"أرجواني\",\n      pink: \"وردي\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"عريض\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"مائل\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"تحته خط\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"مشطوب\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"كود\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"ألوان\",\n    },\n    link: {\n      tooltip: \"إنشاء رابط\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"تحرير التسمية التوضيحية\",\n      input_placeholder: \"تحرير التسمية التوضيحية\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"استبدال الصورة\",\n        video: \"استبدال الفيديو\",\n        audio: \"استبدال الصوت\",\n        file: \"استبدال الملف\",\n      } as Record<string, string>,\n    },\n    file_rename: {\n      tooltip: {\n        image: \"إعادة تسمية الصورة\",\n        video: \"إعادة تسمية الفيديو\",\n        audio: \"إعادة تسمية الصوت\",\n        file: \"إعادة تسمية الملف\",\n      } as Record<string, string>,\n      input_placeholder: {\n        image: \"إعادة تسمية الصورة\",\n        video: \"إعادة تسمية الفيديو\",\n        audio: \"إعادة تسمية الصوت\",\n        file: \"إعادة تسمية الملف\",\n      } as Record<string, string>,\n    },\n    file_download: {\n      tooltip: {\n        image: \"تنزيل الصورة\",\n        video: \"تنزيل الفيديو\",\n        audio: \"تنزيل الصوت\",\n        file: \"تنزيل الملف\",\n      } as Record<string, string>,\n    },\n    file_delete: {\n      tooltip: {\n        image: \"حذف الصورة\",\n        video: \"حذف الفيديو\",\n        audio: \"حذف الصوت\",\n        file: \"حذف الملف\",\n      } as Record<string, string>,\n    },\n    file_preview_toggle: {\n      tooltip: \"تبديل المعاينة\",\n    },\n    nest: {\n      tooltip: \"محتويات متداخلة\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"إلغاء التداخل\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"محاذاة النص إلى اليسار\",\n    },\n    align_center: {\n      tooltip: \"محاذاة النص في المنتصف\",\n    },\n    align_right: {\n      tooltip: \"محاذاة النص إلى اليمين\",\n    },\n    align_justify: {\n      tooltip: \"ضبط النص\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"تحميل\",\n      file_placeholder: {\n        image: \"تحميل صورة\",\n        video: \"تحميل فيديو\",\n        audio: \"تحميل صوت\",\n        file: \"تحميل ملف\",\n      } as Record<string, string>,\n      upload_error: \"خطأ: فشل التحميل\",\n    },\n    embed: {\n      title: \"تضمين\",\n      embed_button: {\n        image: \"تضمين صورة\",\n        video: \"تضمين فيديو\",\n        audio: \"تضمين صوت\",\n        file: \"تضمين ملف\",\n      } as Record<string, string>,\n      url_placeholder: \"أدخل الرابط\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"إزالة الرابط\",\n    },\n    edit: {\n      text: \"تحرير الرابط\",\n      tooltip: \"تحرير\",\n    },\n    open: {\n      tooltip: \"فتح في تبويب جديد\",\n    },\n    form: {\n      title_placeholder: \"تحرير العنوان\",\n      url_placeholder: \"تحرير الرابط\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "export const de = {\n    slash_menu: {\n      heading: {\n        title: \"Überschrift 1\",\n        subtext: \"Hauptebene Überschrift\",\n        aliases: [\"h\", \"überschrift1\", \"h1\"],\n        group: \"Überschriften\",\n      },\n      heading_2: {\n        title: \"Überschrift 2\",\n        subtext: \"Wichtige Abschnittsüberschrift\",\n        aliases: [\"h2\", \"überschrift2\", \"unterüberschrift\"],\n        group: \"Überschriften\",\n      },\n      heading_3: {\n        title: \"Überschrift 3\",\n        subtext: \"Unterabschnitts- und Gruppenüberschrift\",\n        aliases: [\"h3\", \"überschrift3\", \"unterüberschrift\"],\n        group: \"Überschriften\",\n      },\n      numbered_list: {\n        title: \"Nummerierte Liste\",\n        subtext: \"Liste mit nummerierten Elementen\",\n        aliases: [\"ol\", \"li\", \"liste\", \"nummerierteliste\", \"nummerierte liste\"],\n        group: \"Grundlegende Blöcke\",\n      },\n      bullet_list: {\n        title: \"Aufzählungsliste\",\n        subtext: \"Liste mit unnummerierten Elementen\",\n        aliases: [\"ul\", \"li\", \"liste\", \"aufzählungsliste\", \"aufzählung liste\"],\n        group: \"Grundlegende Blöcke\",\n      },\n      check_list: {\n        title: \"Checkliste\",\n        subtext: \"Liste mit Kontrollkästchen\",\n        aliases: [\n          \"ul\",\n          \"li\",\n          \"liste\",\n          \"checkliste\",\n          \"check liste\",\n          \"geprüfte liste\",\n          \"kontrollkästchen\",\n        ],\n        group: \"Grundlegende Blöcke\",\n      },\n      paragraph: {\n        title: \"Absatz\",\n        subtext: \"Der Hauptteil Ihres Dokuments\",\n        aliases: [\"p\", \"absatz\"],\n        group: \"Grundlegende Blöcke\",\n      },\n      table: {\n        title: \"Tabelle\",\n        subtext: \"Tabelle mit editierbaren Zellen\",\n        aliases: [\"tabelle\"],\n        group: \"Erweitert\",\n      },\n      image: {\n        title: \"Bild\",\n        subtext: \"Größenveränderbares Bild mit Beschriftung\",\n        aliases: [\n          \"bild\",\n          \"bildhochladen\",\n          \"hochladen\",\n          \"img\",\n          \"bild\",\n          \"medien\",\n          \"url\",\n        ],\n        group: \"Medien\",\n      },\n      video: {\n        title: \"Video\",\n        subtext: \"Größenveränderbares Video mit Beschriftung\",\n        aliases: [\n          \"video\",\n          \"videoupload\",\n          \"hochladen\",\n          \"mp4\",\n          \"film\",\n          \"medien\",\n          \"url\",\n        ],\n        group: \"Medien\",\n      },\n      audio: {\n        title: \"Audio\",\n        subtext: \"Eingebettetes Audio mit Beschriftung\",\n        aliases: [\n          \"audio\",\n          \"audioupload\",\n          \"hochladen\",\n          \"mp3\",\n          \"ton\",\n          \"medien\",\n          \"url\",\n        ],\n        group: \"Medien\",\n      },\n      file: {\n        title: \"Datei\",\n        subtext: \"Eingebettete Datei\",\n        aliases: [\"datei\", \"hochladen\", \"einbetten\", \"medien\", \"url\"],\n        group: \"Medien\",\n      },\n      emoji: {\n        title: \"Emoji\",\n        subtext: \"Nach Emoji suchen und einfügen\",\n        aliases: [\"emoji\", \"emote\", \"emotion\", \"gesicht\"],\n        group: \"Andere\",\n      },\n    },\n    placeholders: {\n      default: \"Text eingeben oder '/' für Befehle tippen\",\n      heading: \"Überschrift\",\n      bulletListItem: \"Liste\",\n      numberedListItem: \"Liste\",\n      checkListItem: \"Liste\",\n    },\n    file_blocks: {\n      image: {\n        add_button_text: \"Bild hinzufügen\",\n      },\n      video: {\n        add_button_text: \"Video hinzufügen\",\n      },\n      audio: {\n        add_button_text: \"Audio hinzufügen\",\n      },\n      file: {\n        add_button_text: \"Datei hinzufügen\",\n      },\n    },\n    side_menu: {\n      add_block_label: \"Block hinzufügen\",\n      drag_handle_label: \"Blockmenü öffnen\",\n    },\n    drag_handle: {\n      delete_menuitem: \"Löschen\",\n      colors_menuitem: \"Farben\",\n    },\n    table_handle: {\n      delete_column_menuitem: \"Spalte löschen\",\n      delete_row_menuitem: \"Zeile löschen\",\n      add_left_menuitem: \"Spalte links hinzufügen\",\n      add_right_menuitem: \"Spalte rechts hinzufügen\",\n      add_above_menuitem: \"Zeile oberhalb hinzufügen\",\n      add_below_menuitem: \"Zeile unterhalb hinzufügen\",\n    },\n    suggestion_menu: {\n      no_items_title: \"Keine Elemente gefunden\",\n      loading: \"Laden…\",\n    },\n    color_picker: {\n      text_title: \"Text\",\n      background_title: \"Hintergrund\",\n      colors: {\n        default: \"Standard\",\n        gray: \"Grau\",\n        brown: \"Braun\",\n        red: \"Rot\",\n        orange: \"Orange\",\n        yellow: \"Gelb\",\n        green: \"Grün\",\n        blue: \"Blau\",\n        purple: \"Lila\",\n        pink: \"Rosa\",\n      },\n    },\n    formatting_toolbar: {\n      bold: {\n        tooltip: \"Fett\",\n        secondary_tooltip: \"Mod+B\",\n      },\n      italic: {\n        tooltip: \"Kursiv\",\n        secondary_tooltip: \"Mod+I\",\n      },\n      underline: {\n        tooltip: \"Unterstrichen\",\n        secondary_tooltip: \"Mod+U\",\n      },\n      strike: {\n        tooltip: \"Durchgestrichen\",\n        secondary_tooltip: \"Mod+Shift+S\",\n      },\n      code: {\n        tooltip: \"Code\",\n        secondary_tooltip: \"\",\n      },\n      colors: {\n        tooltip: \"Farben\",\n      },\n      link: {\n        tooltip: \"Link erstellen\",\n        secondary_tooltip: \"Mod+K\",\n      },\n      file_caption: {\n        tooltip: \"Beschriftung bearbeiten\",\n        input_placeholder: \"Beschriftung bearbeiten\",\n      },\n      file_replace: {\n        tooltip: {\n          image: \"Bild ersetzen\",\n          video: \"Video ersetzen\",\n          audio: \"Audio ersetzen\",\n          file: \"Datei ersetzen\",\n        },\n      },\n      file_rename: {\n        tooltip: {\n          image: \"Bild umbenennen\",\n          video: \"Video umbenennen\",\n          audio: \"Audio umbenennen\",\n          file: \"Datei umbenennen\",\n        },\n        input_placeholder: {\n          image: \"Bild umbenennen\",\n          video: \"Video umbenennen\",\n          audio: \"Audio umbenennen\",\n          file: \"Datei umbenennen\",\n        },\n      },\n      file_download: {\n        tooltip: {\n          image: \"Bild herunterladen\",\n          video: \"Video herunterladen\",\n          audio: \"Audio herunterladen\",\n          file: \"Datei herunterladen\",\n        },\n      },\n      file_delete: {\n        tooltip: {\n          image: \"Bild löschen\",\n          video: \"Video löschen\",\n          audio: \"Audio löschen\",\n          file: \"Datei löschen\",\n        },\n      },\n      file_preview_toggle: {\n        tooltip: \"Vorschau umschalten\",\n      },\n      nest: {\n        tooltip: \"Block verschachteln\",\n        secondary_tooltip: \"Tab\",\n      },\n      unnest: {\n        tooltip: \"Block entnesten\",\n        secondary_tooltip: \"Shift+Tab\",\n      },\n      align_left: {\n        tooltip: \"Text linksbündig\",\n      },\n      align_center: {\n        tooltip: \"Text zentrieren\",\n      },\n      align_right: {\n        tooltip: \"Text rechtsbündig\",\n      },\n      align_justify: {\n        tooltip: \"Text Blocksatz\",\n      },\n    },\n    file_panel: {\n      upload: {\n        title: \"Hochladen\",\n        file_placeholder: {\n          image: \"Bild hochladen\",\n          video: \"Video hochladen\",\n          audio: \"Audio hochladen\",\n          file: \"Datei hochladen\",\n        },\n        upload_error: \"Fehler: Hochladen fehlgeschlagen\",\n      },\n      embed: {\n        title: \"Einbetten\",\n        embed_button: {\n          image: \"Bild einbetten\",\n          video: \"Video einbetten\",\n          audio: \"Audio einbetten\",\n          file: \"Datei einbetten\",\n        },\n        url_placeholder: \"URL eingeben\",\n      },\n    },\n    link_toolbar: {\n      delete: {\n        tooltip: \"Link entfernen\",\n      },\n      edit: {\n        text: \"Link bearbeiten\",\n        tooltip: \"Bearbeiten\",\n      },\n      open: {\n        tooltip: \"In neuem Tab öffnen\",\n      },\n      form: {\n        title_placeholder: \"Titel bearbeiten\",\n        url_placeholder: \"URL bearbeiten\",\n      },\n    },\n    generic: {\n      ctrl_shortcut: \"Strg\",\n    },\n  };\n  ", "export const en = {\n  slash_menu: {\n    heading: {\n      title: \"Heading 1\",\n      subtext: \"Top-level heading\",\n      aliases: [\"h\", \"heading1\", \"h1\"],\n      group: \"Headings\",\n    },\n    heading_2: {\n      title: \"Heading 2\",\n      subtext: \"Key section heading\",\n      aliases: [\"h2\", \"heading2\", \"subheading\"],\n      group: \"Headings\",\n    },\n    heading_3: {\n      title: \"Heading 3\",\n      subtext: \"Subsection and group heading\",\n      aliases: [\"h3\", \"heading3\", \"subheading\"],\n      group: \"Headings\",\n    },\n    numbered_list: {\n      title: \"Numbered List\",\n      subtext: \"List with ordered items\",\n      aliases: [\"ol\", \"li\", \"list\", \"numberedlist\", \"numbered list\"],\n      group: \"Basic blocks\",\n    },\n    bullet_list: {\n      title: \"Bullet List\",\n      subtext: \"List with unordered items\",\n      aliases: [\"ul\", \"li\", \"list\", \"bulletlist\", \"bullet list\"],\n      group: \"Basic blocks\",\n    },\n    check_list: {\n      title: \"Check List\",\n      subtext: \"List with checkboxes\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"checklist\",\n        \"check list\",\n        \"checked list\",\n        \"checkbox\",\n      ],\n      group: \"Basic blocks\",\n    },\n    paragraph: {\n      title: \"Paragraph\",\n      subtext: \"The body of your document\",\n      aliases: [\"p\", \"paragraph\"],\n      group: \"Basic blocks\",\n    },\n    table: {\n      title: \"Table\",\n      subtext: \"Table with editable cells\",\n      aliases: [\"table\"],\n      group: \"Advanced\",\n    },\n    image: {\n      title: \"Image\",\n      subtext: \"Resizable image with caption\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    video: {\n      title: \"Video\",\n      subtext: \"Resizable video with caption\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Embedded audio with caption\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    file: {\n      title: \"File\",\n      subtext: \"Embedded file\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"url\"],\n      group: \"Media\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Search for and insert an emoji\",\n      aliases: [\"emoji\", \"emote\", \"emotion\", \"face\"],\n      group: \"Others\",\n    },\n  },\n  placeholders: {\n    default: \"Enter text or type '/' for commands\",\n    heading: \"Heading\",\n    bulletListItem: \"List\",\n    numberedListItem: \"List\",\n    checkListItem: \"List\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Add image\",\n    },\n    video: {\n      add_button_text: \"Add video\",\n    },\n    audio: {\n      add_button_text: \"Add audio\",\n    },\n    file: {\n      add_button_text: \"Add file\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Add block\",\n    drag_handle_label: \"Open block menu\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Delete\",\n    colors_menuitem: \"Colors\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Delete column\",\n    delete_row_menuitem: \"Delete row\",\n    add_left_menuitem: \"Add column left\",\n    add_right_menuitem: \"Add column right\",\n    add_above_menuitem: \"Add row above\",\n    add_below_menuitem: \"Add row below\",\n  },\n  suggestion_menu: {\n    no_items_title: \"No items found\",\n    loading: \"Loading…\",\n  },\n  color_picker: {\n    text_title: \"Text\",\n    background_title: \"Background\",\n    colors: {\n      default: \"Default\",\n      gray: \"Gray\",\n      brown: \"Brown\",\n      red: \"Red\",\n      orange: \"Orange\",\n      yellow: \"Yellow\",\n      green: \"Green\",\n      blue: \"Blue\",\n      purple: \"Purple\",\n      pink: \"Pink\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Bold\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Italic\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Underline\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Strike\",\n      secondary_tooltip: \"Mod+Shift+S\",\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Colors\",\n    },\n    link: {\n      tooltip: \"Create link\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Edit caption\",\n      input_placeholder: \"Edit caption\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Replace image\",\n        video: \"Replace video\",\n        audio: \"Replace audio\",\n        file: \"Replace file\",\n      } as Record<string, string>,\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Rename image\",\n        video: \"Rename video\",\n        audio: \"Rename audio\",\n        file: \"Rename file\",\n      } as Record<string, string>,\n      input_placeholder: {\n        image: \"Rename image\",\n        video: \"Rename video\",\n        audio: \"Rename audio\",\n        file: \"Rename file\",\n      } as Record<string, string>,\n    },\n    file_download: {\n      tooltip: {\n        image: \"Download image\",\n        video: \"Download video\",\n        audio: \"Download audio\",\n        file: \"Download file\",\n      } as Record<string, string>,\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Delete image\",\n        video: \"Delete video\",\n        audio: \"Delete audio\",\n        file: \"Delete file\",\n      } as Record<string, string>,\n    },\n    file_preview_toggle: {\n      tooltip: \"Toggle preview\",\n    },\n    nest: {\n      tooltip: \"Nest block\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Unnest block\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Align text left\",\n    },\n    align_center: {\n      tooltip: \"Align text center\",\n    },\n    align_right: {\n      tooltip: \"Align text right\",\n    },\n    align_justify: {\n      tooltip: \"Justify text\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Upload\",\n      file_placeholder: {\n        image: \"Upload image\",\n        video: \"Upload video\",\n        audio: \"Upload audio\",\n        file: \"Upload file\",\n      } as Record<string, string>,\n      upload_error: \"Error: Upload failed\",\n    },\n    embed: {\n      title: \"Embed\",\n      embed_button: {\n        image: \"Embed image\",\n        video: \"Embed video\",\n        audio: \"Embed audio\",\n        file: \"Embed file\",\n      } as Record<string, string>,\n      url_placeholder: \"Enter URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Remove link\",\n    },\n    edit: {\n      text: \"Edit link\",\n      tooltip: \"Edit\",\n    },\n    open: {\n      tooltip: \"Open in new tab\",\n    },\n    form: {\n      title_placeholder: \"Edit title\",\n      url_placeholder: \"Edit URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "export const es = {\n    slash_menu: {\n      heading: {\n        title: 'Encabezado 1',\n        subtext: 'Encabezado de primer nivel',\n        aliases: ['h', 'encabezado1', 'h1'],\n        group: 'Encabezados',\n      },\n      heading_2: {\n        title: 'Encabezado 2',\n        subtext: 'Encabezado de sección principal',\n        aliases: ['h2', 'encabezado2', 'subencabezado'],\n        group: 'Encabezados',\n      },\n      heading_3: {\n        title: 'Encabezado 3',\n        subtext: 'Encabezado de subsección y grupo',\n        aliases: ['h3', 'encabezado3', 'subencabezado'],\n        group: 'Encabezados',\n      },\n      numbered_list: {\n        title: 'Lista Numerada',\n        subtext: 'Lista con elementos ordenados',\n        aliases: ['ol', 'li', 'lista', 'lista numerada'],\n        group: 'Bloques básicos',\n      },\n      bullet_list: {\n        title: 'Lista con Viñetas',\n        subtext: 'Lista con elementos no ordenados',\n        aliases: ['ul', 'li', 'lista', 'lista con viñetas'],\n        group: 'Bloques básicos',\n      },\n      check_list: {\n        title: 'Lista de Verificación',\n        subtext: 'Lista con casillas de verificación',\n        aliases: ['ul', 'li', 'lista', 'lista de verificación', 'lista de chequeo', 'checkbox'],\n        group: 'Bloques básicos',\n      },\n      paragraph: {\n        title: 'Párrafo',\n        subtext: 'El cuerpo de tu documento',\n        aliases: ['p', 'párrafo'],\n        group: 'Bloques básicos',\n      },\n      table: {\n        title: 'Tabla',\n        subtext: 'Tabla con celdas editables',\n        aliases: ['tabla'],\n        group: 'Avanzado',\n      },\n      image: {\n        title: 'Imagen',\n        subtext: 'Imagen redimensionable con leyenda',\n        aliases: ['imagen', 'subir imagen', 'cargar', 'img', 'foto', 'media', 'url'],\n        group: 'Medios',\n      },\n      video: {\n        title: 'Vídeo',\n        subtext: 'Vídeo redimensionable con leyenda',\n        aliases: ['video', 'subir vídeo', 'cargar', 'mp4', 'película', 'media', 'url'],\n        group: 'Medios',\n      },\n      audio: {\n        title: 'Audio',\n        subtext: 'Audio incrustado con leyenda',\n        aliases: ['audio', 'subir audio', 'cargar', 'mp3', 'sonido', 'media', 'url'],\n        group: 'Medios',\n      },\n      file: {\n        title: 'Archivo',\n        subtext: 'Archivo incrustado',\n        aliases: ['archivo', 'cargar', 'incrustar', 'media', 'url'],\n        group: 'Medios',\n      },\n      emoji: {\n        title: 'Emoji',\n        subtext: 'Busca e inserta un emoji',\n        aliases: ['emoji', 'emoticono', 'emoción', 'cara'],\n        group: 'Otros',\n      },\n    },\n    placeholders: {\n      default: \"Escribe o teclea '/' para comandos\",\n      heading: 'Encabezado',\n      bulletListItem: 'Lista',\n      numberedListItem: 'Lista',\n      checkListItem: 'Lista',\n    },\n    file_blocks: {\n      image: {\n        add_button_text: 'Agregar imagen',\n      },\n      video: {\n        add_button_text: 'Agregar vídeo',\n      },\n      audio: {\n        add_button_text: 'Agregar audio',\n      },\n      file: {\n        add_button_text: 'Agregar archivo',\n      },\n    },\n    side_menu: {\n      add_block_label: 'Agregar bloque',\n      drag_handle_label: 'Abrir menú de bloque',\n    },\n    drag_handle: {\n      delete_menuitem: 'Eliminar',\n      colors_menuitem: 'Colores',\n    },\n    table_handle: {\n      delete_column_menuitem: 'Eliminar columna',\n      delete_row_menuitem: 'Eliminar fila',\n      add_left_menuitem: 'Agregar columna a la izquierda',\n      add_right_menuitem: 'Agregar columna a la derecha',\n      add_above_menuitem: 'Agregar fila arriba',\n      add_below_menuitem: 'Agregar fila abajo',\n    },\n    suggestion_menu: {\n      no_items_title: 'No se encontraron elementos',\n      loading: 'Cargando…',\n    },\n    color_picker: {\n      text_title: 'Texto',\n      background_title: 'Fondo',\n      colors: {\n        default: 'Por defecto',\n        gray: 'Gris',\n        brown: 'Marrón',\n        red: 'Rojo',\n        orange: 'Naranja',\n        yellow: 'Amarillo',\n        green: 'Verde',\n        blue: 'Azul',\n        purple: 'Morado',\n        pink: 'Rosa',\n      },\n    },\n    formatting_toolbar: {\n      bold: {\n        tooltip: 'Negrita',\n        secondary_tooltip: 'Mod+B',\n      },\n      italic: {\n        tooltip: 'Cursiva',\n        secondary_tooltip: 'Mod+I',\n      },\n      underline: {\n        tooltip: 'Subrayado',\n        secondary_tooltip: 'Mod+U',\n      },\n      strike: {\n        tooltip: 'Tachado',\n        secondary_tooltip: 'Mod+Shift+S',\n      },\n      code: {\n        tooltip: 'Código',\n        secondary_tooltip: '',\n      },\n      colors: {\n        tooltip: 'Colores',\n      },\n      link: {\n        tooltip: 'Crear enlace',\n        secondary_tooltip: 'Mod+K',\n      },\n      file_caption: {\n        tooltip: 'Editar leyenda',\n        input_placeholder: 'Editar leyenda',\n      },\n      file_replace: {\n        tooltip: {\n          image: 'Reemplazar imagen',\n          video: 'Reemplazar vídeo',\n          audio: 'Reemplazar audio',\n          file: 'Reemplazar archivo',\n        } as Record<string, string>,\n      },\n      file_rename: {\n        tooltip: {\n          image: 'Renombrar imagen',\n          video: 'Renombrar vídeo',\n          audio: 'Renombrar audio',\n          file: 'Renombrar archivo',\n        } as Record<string, string>,\n        input_placeholder: {\n          image: 'Renombrar imagen',\n          video: 'Renombrar vídeo',\n          audio: 'Renombrar audio',\n          file: 'Renombrar archivo',\n        } as Record<string, string>,\n      },\n      file_download: {\n        tooltip: {\n          image: 'Descargar imagen',\n          video: 'Descargar vídeo',\n          audio: 'Descargar audio',\n          file: 'Descargar archivo',\n        } as Record<string, string>,\n      },\n      file_delete: {\n        tooltip: {\n          image: 'Eliminar imagen',\n          video: 'Eliminar vídeo',\n          audio: 'Eliminar audio',\n          file: 'Eliminar archivo',\n        } as Record<string, string>,\n      },\n      file_preview_toggle: {\n        tooltip: 'Alternar vista previa',\n      },\n      nest: {\n        tooltip: 'Anidar bloque',\n        secondary_tooltip: 'Tab',\n      },\n      unnest: {\n        tooltip: 'Desanidar bloque',\n        secondary_tooltip: 'Shift+Tab',\n      },\n      align_left: {\n        tooltip: 'Alinear texto a la izquierda',\n      },\n      align_center: {\n        tooltip: 'Alinear texto al centro',\n      },\n      align_right: {\n        tooltip: 'Alinear texto a la derecha',\n      },\n      align_justify: {\n        tooltip: 'Justificar texto',\n      },\n    },\n    file_panel: {\n      upload: {\n        title: 'Subir',\n        file_placeholder: {\n          image: 'Subir imagen',\n          video: 'Subir vídeo',\n          audio: 'Subir audio',\n          file: 'Subir archivo',\n        } as Record<string, string>,\n        upload_error: 'Error: Fallo en la subida',\n      },\n      embed: {\n        title: 'Incrustar',\n        embed_button: {\n          image: 'Incrustar imagen',\n          video: 'Incrustar vídeo',\n          audio: 'Incrustar audio',\n          file: 'Incrustar archivo',\n        } as Record<string, string>,\n        url_placeholder: 'Introduce la URL',\n      },\n    },\n    link_toolbar: {\n      delete: {\n        tooltip: 'Eliminar enlace',\n      },\n      edit: {\n        text: 'Editar enlace',\n        tooltip: 'Editar',\n      },\n      open: {\n        tooltip: 'Abrir en nueva pestaña',\n      },\n      form: {\n        title_placeholder: 'Editar título',\n        url_placeholder: 'Editar URL',\n      },\n    },\n    generic: {\n      ctrl_shortcut: 'Ctrl',\n    },\n  };\n  ", "import { Dictionary } from \"../dictionary\";\n\nexport const fr: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Titre 1\",\n      subtext: \"Utilisé pour un titre de premier niveau\",\n      aliases: [\"h\", \"titre1\", \"h1\"],\n      group: \"Titres\",\n    },\n    heading_2: {\n      title: \"Titre 2\",\n      subtext: \"Utilisé pour les sections clés\",\n      aliases: [\"h2\", \"titre2\", \"sous-titre\"],\n      group: \"Titres\",\n    },\n    heading_3: {\n      title: \"Titre 3\",\n      subtext: \"Utilisé pour les sous-sections et les titres de groupe\",\n      aliases: [\"h3\", \"titre3\", \"sous-titre\"],\n      group: \"Titres\",\n    },\n    numbered_list: {\n      title: \"Liste Numérotée\",\n      subtext: \"Utilisé pour afficher une liste numérotée\",\n      aliases: [\"ol\", \"li\", \"liste\", \"listenumérotée\", \"liste numérotée\"],\n      group: \"Blocs de base\",\n    },\n    bullet_list: {\n      title: \"Liste à Puces\",\n      subtext: \"Utilisé pour afficher une liste non ordonnée\",\n      aliases: [\"ul\", \"li\", \"liste\", \"listeàpuces\", \"liste à puces\"],\n      group: \"Blocs de base\",\n    },\n    check_list: {\n      title: \"Liste de vérification\",\n      subtext: \"Utilisé pour afficher une liste avec des cases à cocher\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"liste\",\n        \"liste de vérification\",\n        \"liste cochée\",\n        \"case à cocher\",\n      ],\n      group: \"Blocs de base\",\n    },\n    paragraph: {\n      title: \"Paragraphe\",\n      subtext: \"Utilisé pour le corps de votre document\",\n      aliases: [\"p\", \"paragraphe\"],\n      group: \"Blocs de base\",\n    },\n    table: {\n      title: \"Tableau\",\n      subtext: \"Utilisé pour les tableaux\",\n      aliases: [\"tableau\"],\n      group: \"Avancé\",\n    },\n    image: {\n      title: \"Image\",\n      subtext: \"Insérer une image\",\n      aliases: [\n        \"image\",\n        \"uploadImage\",\n        \"télécharger\",\n        \"img\",\n        \"photo\",\n        \"média\",\n        \"url\",\n      ],\n      group: \"Médias\",\n    },\n    video: {\n      title: \"Vidéo\",\n      subtext: \"Insérer une vidéo\",\n      aliases: [\n        \"vidéo\",\n        \"téléchargerVidéo\",\n        \"téléverser\",\n        \"mp4\",\n        \"film\",\n        \"média\",\n        \"url\",\n      ],\n      group: \"Média\",\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Insérer un audio\",\n      aliases: [\n        \"audio\",\n        \"téléchargerAudio\",\n        \"téléverser\",\n        \"mp3\",\n        \"son\",\n        \"média\",\n        \"url\",\n      ],\n      group: \"Média\",\n    },\n    file: {\n      title: \"Fichier\",\n      subtext: \"Insérer un fichier\",\n      aliases: [\"fichier\", \"téléverser\", \"intégrer\", \"média\", \"url\"],\n      group: \"Média\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Utilisé pour insérer un emoji\",\n      aliases: [\"emoji\", \"émoticône\", \"émotion\", \"visage\"],\n      group: \"Autres\",\n    },\n  },\n  placeholders: {\n    default: \"Entrez du texte ou tapez '/' pour les commandes\",\n    heading: \"Titre\",\n    bulletListItem: \"Liste\",\n    numberedListItem: \"Liste\",\n    checkListItem: \"Liste\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Ajouter une image\",\n    },\n    video: {\n      add_button_text: \"Ajouter une vidéo\",\n    },\n    audio: {\n      add_button_text: \"Ajouter un audio\",\n    },\n    file: {\n      add_button_text: \"Ajouter un fichier\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Ajouter un bloc\",\n    drag_handle_label: \"Ouvrir le menu du bloc\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Supprimer\",\n    colors_menuitem: \"Couleurs\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Supprimer la colonne\",\n    delete_row_menuitem: \"Supprimer la ligne\",\n    add_left_menuitem: \"Ajouter une colonne à gauche\",\n    add_right_menuitem: \"Ajouter une colonne à droite\",\n    add_above_menuitem: \"Ajouter une ligne au-dessus\",\n    add_below_menuitem: \"Ajouter une ligne en dessous\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Aucun élément trouvé\",\n    loading: \"Chargement…\",\n  },\n  color_picker: {\n    text_title: \"Texte\",\n    background_title: \"Fond\",\n    colors: {\n      default: \"Défaut\",\n      gray: \"Gris\",\n      brown: \"Marron\",\n      red: \"Rouge\",\n      orange: \"Orange\",\n      yellow: \"Jaune\",\n      green: \"Vert\",\n      blue: \"Bleu\",\n      purple: \"Violet\",\n      pink: \"Rose\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Gras\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Italique\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Souligner\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Barré\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Couleurs\",\n    },\n    link: {\n      tooltip: \"Créer un lien\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Modifier la légende\",\n      input_placeholder: \"Modifier la légende\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Remplacer l'image\",\n        video: \"Remplacer la vidéo\",\n        audio: \"Remplacer l'audio\",\n        file: \"Remplacer le fichier\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Renommer l'image\",\n        video: \"Renommer la vidéo\",\n        audio: \"Renommer l'audio\",\n        file: \"Renommer le fichier\",\n      },\n      input_placeholder: {\n        image: \"Renommer l'image\",\n        video: \"Renommer la vidéo\",\n        audio: \"Renommer l'audio\",\n        file: \"Renommer le fichier\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Télécharger l'image\",\n        video: \"Télécharger la vidéo\",\n        audio: \"Télécharger l'audio\",\n        file: \"Télécharger le fichier\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Supprimer l'image\",\n        video: \"Supprimer la vidéo\",\n        audio: \"Supprimer l'audio\",\n        file: \"Supprimer le fichier\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Basculer l'aperçu\",\n    },\n    nest: {\n      tooltip: \"Emboîter le bloc\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Démboîter le bloc\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Aligner le texte à gauche\",\n    },\n    align_center: {\n      tooltip: \"Aligner le texte au centre\",\n    },\n    align_right: {\n      tooltip: \"Aligner le texte à droite\",\n    },\n    align_justify: {\n      tooltip: \"Justifier le texte\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Télécharger\",\n      file_placeholder: {\n        image: \"Télécharger une image\",\n        video: \"Télécharger une vidéo\",\n        audio: \"Télécharger un fichier audio\",\n        file: \"Télécharger un fichier\",\n      },\n      upload_error: \"Erreur : Échec du téléchargement\",\n    },\n    embed: {\n      title: \"Intégrer\",\n      embed_button: {\n        image: \"Intégrer une image\",\n        video: \"Intégrer une vidéo\",\n        audio: \"Intégrer un fichier audio\",\n        file: \"Intégrer un fichier\",\n      },\n      url_placeholder: \"Entrez l'URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Supprimer le lien\",\n    },\n    edit: {\n      text: \"Modifier le lien\",\n      tooltip: \"Modifier\",\n    },\n    open: {\n      tooltip: \"Ouvrir dans un nouvel onglet\",\n    },\n    form: {\n      title_placeholder: \"Modifier le titre\",\n      url_placeholder: \"Modifier l'URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "import type { Dictionary } from \"../dictionary\";\n\nexport const is: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Fyrirsögn 1\",\n      subtext: \"Notað fyrir efstu fyrirsögn\",\n      aliases: [\"h\", \"fyrirsogn1\", \"h1\"],\n      group: \"Fyrirsagnir\",\n    },\n    heading_2: {\n      title: \"Fyrirsögn 2\",\n      subtext: \"Notað fyrir lykilhluta\",\n      aliases: [\"h2\", \"fyrirsogn2\", \"undirfyrirsogn\"],\n      group: \"Fyrirsagnir\",\n    },\n    heading_3: {\n      title: \"Fyrirsögn 3\",\n      subtext: \"Notað fyrir undirhluta og hópfyrirsagnir\",\n      aliases: [\"h3\", \"fyrirsogn3\", \"undirfyrirsogn\"],\n      group: \"Fyrirsagnir\",\n    },\n    numbered_list: {\n      title: \"Númeruð listi\",\n      subtext: \"Notað til að birta númeraðan lista\",\n      aliases: [\"ol\", \"li\", \"listi\", \"numeradurlisti\"],\n      group: \"Grunnblokkar\",\n    },\n    bullet_list: {\n      title: \"Punktalisti\",\n      subtext: \"Notað til að birta óraðaðan lista\",\n      aliases: [\"ul\", \"li\", \"listi\", \"punktalisti\"],\n      group: \"Grunnblokkar\",\n    },\n    check_list: {\n      title: \"Athugunarlisti\",\n      subtext: \"Notað til að sýna lista með gátreitum\",\n      aliases: [\"ul\", \"li\", \"listi\", \"athugunarlisti\", \"merktur listi\"],\n      group: \"Grunnblokkar\",\n    },\n    paragraph: {\n      title: \"Málsgrein\",\n      subtext: \"Notað fyrir meginmál skjalsins\",\n      aliases: [\"p\", \"malsgrein\"],\n      group: \"Grunnblokkar\",\n    },\n    table: {\n      title: \"Tafla\",\n      subtext: \"Notað fyrir töflur\",\n      aliases: [\"tafla\"],\n      group: \"Ítarlegt\",\n    },\n    image: {\n      title: \"Mynd\",\n      subtext: \"Settu inn mynd\",\n      aliases: [\n        \"mynd\",\n        \"myndaupphlaed\",\n        \"upphlaed\",\n        \"img\",\n        \"mynd\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Miðlar\",\n    },\n    video: {\n      title: \"Myndband\",\n      subtext: \"Setja inn myndband\",\n      aliases: [\n        \"myndband\",\n        \"videoUpphala\",\n        \"hlaða upp\",\n        \"mp4\",\n        \"kvikmynd\",\n        \"miðill\",\n        \"url\",\n      ],\n      group: \"Miðill\",\n    },\n    audio: {\n      title: \"Hljóð\",\n      subtext: \"Setja inn hljóð\",\n      aliases: [\n        \"hljóð\",\n        \"audioUpphala\",\n        \"hlaða upp\",\n        \"mp3\",\n        \"hljóð\",\n        \"miðill\",\n        \"url\",\n      ],\n      group: \"Miðlar\",\n    },\n    file: {\n      title: \"Skrá\",\n      subtext: \"Setja inn skrá\",\n      aliases: [\"skrá\", \"hlaða upp\", \"fella inn\", \"miðill\", \"url\"],\n      group: \"Miðlar\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Notað til að setja inn smámynd\",\n      aliases: [\"emoji\", \"andlitsávísun\", \"tilfinningar\", \"andlit\"],\n      group: \"Annað\",\n    },\n  },\n  placeholders: {\n    default: \"Sláðu inn texta eða skrifaðu '/' fyrir skipanir\",\n    heading: \"Fyrirsögn\",\n    bulletListItem: \"Listi\",\n    numberedListItem: \"Listi\",\n    checkListItem: \"Listi\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Bæta við mynd\",\n    },\n    video: {\n      add_button_text: \"Bæta við myndbandi\",\n    },\n    audio: {\n      add_button_text: \"Bæta við hljóði\",\n    },\n    file: {\n      add_button_text: \"Bæta við skrá\",\n    },\n  },\n  side_menu: {\n    add_block_label: \"Bæta við blokki\",\n    drag_handle_label: \"Opna blokkarvalmynd\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Eyða\",\n    colors_menuitem: \"Litir\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Eyða dálki\",\n    delete_row_menuitem: \"Eyða röð\",\n    add_left_menuitem: \"Bæta dálki við til vinstri\",\n    add_right_menuitem: \"Bæta dálki við til hægri\",\n    add_above_menuitem: \"Bæta röð við fyrir ofan\",\n    add_below_menuitem: \"Bæta röð við fyrir neðan\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Engir hlutir fundust\",\n    loading: \"Hleður…\",\n  },\n  color_picker: {\n    text_title: \"Texti\",\n    background_title: \"Bakgrunnur\",\n    colors: {\n      default: \"Sjálfgefið\",\n      gray: \"Grár\",\n      brown: \"Brúnn\",\n      red: \"Rauður\",\n      orange: \"Appelsínugulur\",\n      yellow: \"Gulur\",\n      green: \"Grænn\",\n      blue: \"Blár\",\n      purple: \"Fjólublár\",\n      pink: \"Bleikur\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Feitletrað\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Skáletrað\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Undirstrikað\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Yfirstrikað\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Kóði\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Litir\",\n    },\n    link: {\n      tooltip: \"Búa til tengil\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Breyta myndatexta\",\n      input_placeholder: \"Breyta myndatexta\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Skipta um mynd\",\n        video: \"Skipta um myndband\",\n        audio: \"Skipta um hljóð\",\n        file: \"Skipta um skrá\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Endurnefna mynd\",\n        video: \"Endurnefna myndband\",\n        audio: \"Endurnefna hljóð\",\n        file: \"Endurnefna skrá\",\n      },\n      input_placeholder: {\n        image: \"Endurnefna mynd\",\n        video: \"Endurnefna myndband\",\n        audio: \"Endurnefna hljóð\",\n        file: \"Endurnefna skrá\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Sækja mynd\",\n        video: \"Sækja myndband\",\n        audio: \"Sækja hljóð\",\n        file: \"Sækja skrá\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Eyða mynd\",\n        video: \"Eyða myndbandi\",\n        audio: \"Eyða hljóði\",\n        file: \"Eyða skrá\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Skipta um forskoðun\",\n    },\n    nest: {\n      tooltip: \"Fella blokk saman\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Afþýða blokk\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Vinstrijafna texta\",\n    },\n    align_center: {\n      tooltip: \"Miðjustilla texta\",\n    },\n    align_right: {\n      tooltip: \"Hægrijafna texta\",\n    },\n    align_justify: {\n      tooltip: \"Jafna texta\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Hlaða upp\",\n      file_placeholder: {\n        image: \"Hlaða upp mynd\",\n        video: \"Hlaða upp myndband\",\n        audio: \"Hlaða upp hljóð\",\n        file: \"Hlaða upp skrá\",\n      },\n      upload_error: \"Villa: Upphleðsla mistókst\",\n    },\n    embed: {\n      title: \"Innsetja\",\n      embed_button: {\n        image: \"Innsetja mynd\",\n        video: \"Innsetja myndband\",\n        audio: \"Innsetja hljóð\",\n        file: \"Innsetja skrá\",\n      },\n      url_placeholder: \"Sláðu inn URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Fjarlægja tengil\",\n    },\n    edit: {\n      text: \"Breyta tengli\",\n      tooltip: \"Breyta\",\n    },\n    open: {\n      tooltip: \"Opna í nýjum flipa\",\n    },\n    form: {\n      title_placeholder: \"Breyta titli\",\n      url_placeholder: \"Breyta URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "import { Dictionary } from \"../dictionary\";\n\nexport const ja: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"見出し１\",\n      subtext: \"トップレベルの見出しに使用\",\n      aliases: [\"h\", \"見出し１\", \"h1\", \"大見出し\"],\n      group: \"見出し\",\n    },\n    heading_2: {\n      title: \"見出し２\",\n      subtext: \"重要なセクションに使用\",\n      aliases: [\"h2\", \"見出し2\", \"subheading\", \"中見出し\"],\n      group: \"見出し\",\n    },\n    heading_3: {\n      title: \"見出し３\",\n      subtext: \"セクションやグループの見出しに使用\",\n      aliases: [\"h3\", \"見出し3\", \"subheading\", \"小見出し\"],\n      group: \"見出し\",\n    },\n    numbered_list: {\n      title: \"番号付リスト\",\n      subtext: \"番号付リストを表示するために使用\",\n      aliases: [\n        \"ol\",\n        \"li\",\n        \"numberedlist\",\n        \"numbered list\",\n        \"リスト\",\n        \"番号付リスト\",\n        \"番号 リスト\",\n      ],\n      group: \"基本ブロック\",\n    },\n    bullet_list: {\n      title: \"箇条書き\",\n      subtext: \"箇条書きを表示するために使用\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"bulletlist\",\n        \"bullet list\",\n        \"リスト\",\n        \"箇条書きリスト\",\n      ],\n      group: \"基本ブロック\",\n    },\n    check_list: {\n      title: \"チェックリスト\",\n      subtext: \"チェックボックス付きリストを表示するために使用されます\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"checklist\",\n        \"checked list\",\n        \"リスト\",\n        \"チェックリスト\",\n        \"チェックされたリスト\",\n      ],\n      group: \"基本ブロック\",\n    },\n    paragraph: {\n      title: \"標準テキスト\",\n      subtext: \"本文に使用\",\n      aliases: [\"p\", \"paragraph\", \"標準テキスト\"],\n      group: \"基本ブロック\",\n    },\n    table: {\n      title: \"表\",\n      subtext: \"表に使用\",\n      aliases: [\"table\", \"表\", \"テーブル\"],\n      group: \"高度なブロック\",\n    },\n    image: {\n      title: \"画像\",\n      subtext: \"画像を挿入\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"url\",\n        \"画像\",\n      ],\n      group: \"メディア\",\n    },\n    video: {\n      title: \"ビデオ\",\n      subtext: \"ビデオを挿入\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\",\n        \"ビデオ\",\n      ],\n      group: \"メディア\",\n    },\n    audio: {\n      title: \"オーディオ\",\n      subtext: \"オーディオを挿入\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"url\",\n        \"オーディオ\",\n      ],\n      group: \"メディア\",\n    },\n    file: {\n      title: \"ファイル\",\n      subtext: \"ファイルを挿入\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"url\", \"ファイル\"],\n      group: \"メディア\",\n    },\n    emoji: {\n      title: \"絵文字\",\n      subtext: \"絵文字を挿入するために使用します\",\n      aliases: [\"絵文字\", \"顔文字\", \"感情表現\", \"顔\"],\n      group: \"その他\",\n    },\n  },\n  placeholders: {\n    default: \"テキストを入力するか'/' を入力してコマンド選択\",\n    heading: \"見出し\",\n    bulletListItem: \"リストを追加\",\n    numberedListItem: \"リストを追加\",\n    checkListItem: \"リストを追加\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"画像を追加\",\n    },\n    video: {\n      add_button_text: \"ビデオを追加\",\n    },\n    audio: {\n      add_button_text: \"オーディオを追加\",\n    },\n    file: {\n      add_button_text: \"ファイルを追加\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"ブロックを追加\",\n    drag_handle_label: \"ブロックメニュー\",\n  },\n  drag_handle: {\n    delete_menuitem: \"削除\",\n    colors_menuitem: \"色を変更\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"列を削除\",\n    delete_row_menuitem: \"行を削除\",\n    add_left_menuitem: \"左に列を追加\",\n    add_right_menuitem: \"右に列を追加\",\n    add_above_menuitem: \"上に行を追加\",\n    add_below_menuitem: \"下に行を追加\",\n  },\n  suggestion_menu: {\n    no_items_title: \"アイテムが見つかりません\",\n    loading: \"読込中…\",\n  },\n  color_picker: {\n    text_title: \"文字色\",\n    background_title: \"背景色\",\n    colors: {\n      default: \"デフォルト\",\n      gray: \"グレー\",\n      brown: \"茶色\",\n      red: \"赤\",\n      orange: \"オレンジ\",\n      yellow: \"黄色\",\n      green: \"緑\",\n      blue: \"青\",\n      purple: \"紫\",\n      pink: \"ピンク\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"太字\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"斜体\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"下線\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"打ち消し\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"コード\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"色\",\n    },\n    link: {\n      tooltip: \"リンク\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"キャプションを編集\",\n      input_placeholder: \"キャプションを編集\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"画像を置換\",\n        video: \"ビデオを置換\",\n        audio: \"オーディオを置換\",\n        file: \"ファイルを置換\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"画像の名前を変更\",\n        video: \"ビデオの名前を変更\",\n        audio: \"オーディオの名前を変更\",\n        file: \"ファイルの名前を変更\",\n      },\n      input_placeholder: {\n        image: \"画像の名前を変更\",\n        video: \"ビデオの名前を変更\",\n        audio: \"オーディオの名前を変更\",\n        file: \"ファイルの名前を変更\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"画像をダウンロード\",\n        video: \"ビデオをダウンロード\",\n        audio: \"オーディオをダウンロード\",\n        file: \"ファイルをダウンロード\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"画像を削除\",\n        video: \"ビデオを削除\",\n        audio: \"オーディオを削除\",\n        file: \"ファイルを削除\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"プレビューの切り替え\",\n    },\n    nest: {\n      tooltip: \"インデント増\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"インデント減\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"左揃え\",\n    },\n    align_center: {\n      tooltip: \"中央揃え\",\n    },\n    align_right: {\n      tooltip: \"右揃え\",\n    },\n    align_justify: {\n      tooltip: \"両端揃え\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"アップロード\",\n      file_placeholder: {\n        image: \"画像をアップロード\",\n        video: \"ビデオをアップロード\",\n        audio: \"オーディオをアップロード\",\n        file: \"ファイルをアップロード\",\n      },\n      upload_error: \"エラー: アップロードが失敗しました\",\n    },\n    embed: {\n      title: \"埋め込み\",\n      embed_button: {\n        image: \"画像を埋め込む\",\n        video: \"ビデオを埋め込む\",\n        audio: \"オーディオを埋め込む\",\n        file: \"ファイルを埋め込む\",\n      },\n      url_placeholder: \"URLを入力\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"リンクを解除\",\n    },\n    edit: {\n      text: \"リンクを編集\",\n      tooltip: \"編集\",\n    },\n    open: {\n      tooltip: \"新しいタブでリンクを開く\",\n    },\n    form: {\n      title_placeholder: \"タイトルを編集\",\n      url_placeholder: \"URLを編集\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "import { Dictionary } from \"../dictionary\";\n\nexport const ko: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"제목1\",\n      subtext: \"섹션 제목(대)\",\n      aliases: [\"h\", \"제목1\", \"h1\", \"대제목\"],\n      group: \"제목\",\n    },\n    heading_2: {\n      title: \"제목2\",\n      subtext: \"섹션 제목(중)\",\n      aliases: [\"h2\", \"제목2\", \"중제목\"],\n      group: \"제목\",\n    },\n    heading_3: {\n      title: \"제목3\",\n      subtext: \"섹션 제목(소)\",\n      aliases: [\"h3\", \"제목3\", \"subheading\"],\n      group: \"제목\",\n    },\n    numbered_list: {\n      title: \"번호 매기기 목록\",\n      subtext: \"번호가 매겨진 목록을 추가합니다.\",\n      aliases: [\"ol\", \"li\", \"목록\", \"번호 매기기 목록\", \"번호 목록\"],\n      group: \"기본 블록\",\n    },\n    bullet_list: {\n      title: \"글머리 기호 목록\",\n      subtext: \"간단한 글머리 기호를 추가합니다.\",\n      aliases: [\"ul\", \"li\", \"목록\", \"글머리 기호 목록\", \"글머리 목록\"],\n      group: \"기본 블록\",\n    },\n    check_list: {\n      title: \"체크리스트\",\n      subtext: \"체크박스가 있는 목록을 표시하는 데 사용\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"목록\",\n        \"체크리스트\",\n        \"체크 리스트\",\n        \"체크된 목록\",\n        \"체크박스\",\n      ],\n      group: \"기본 블록\",\n    },\n    paragraph: {\n      title: \"본문\",\n      subtext: \"일반 텍스트\",\n      aliases: [\"p\", \"paragraph\", \"본문\"],\n      group: \"기본 블록\",\n    },\n    table: {\n      title: \"표\",\n      subtext: \"간단한 표를 추가합니다.\",\n      aliases: [\"표\"],\n      group: \"고급\",\n    },\n    image: {\n      title: \"이미지\",\n      subtext: \"이미지 파일을 업로드합니다.\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"이미지\",\n        \"url\",\n      ],\n      group: \"미디어\",\n    },\n    video: {\n      title: \"비디오\",\n      subtext: \"비디오 삽입\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"동영상\",\n        \"url\",\n      ],\n      group: \"미디어\",\n    },\n    audio: {\n      title: \"오디오\",\n      subtext: \"오디오 삽입\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"오디오\",\n        \"url\",\n      ],\n      group: \"미디어\",\n    },\n    file: {\n      title: \"파일\",\n      subtext: \"파일 삽입\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"파일\", \"url\"],\n      group: \"미디어\",\n    },\n    emoji: {\n      title: \"이모지\",\n      subtext: \"이모지 삽입용으로 사용됩니다\",\n      aliases: [\n        \"이모지\",\n        \"emoji\",\n        \"감정 표현\",\n        \"emotion expression\",\n        \"표정\",\n        \"face expression\",\n        \"얼굴\",\n        \"face\",\n      ],\n      group: \"기타\",\n    },\n  },\n  placeholders: {\n    default: \"텍스트를 입력하거나 /를 입력하여 명령을 입력하세요.\",\n    heading: \"제목\",\n    bulletListItem: \"목록\",\n    numberedListItem: \"목록\",\n    checkListItem: \"목록\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"이미지 추가\",\n    },\n    video: {\n      add_button_text: \"비디오 추가\",\n    },\n    audio: {\n      add_button_text: \"오디오 추가\",\n    },\n    file: {\n      add_button_text: \"파일 추가\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"블록 추가\",\n    drag_handle_label: \"블록 메뉴 열기\",\n  },\n  drag_handle: {\n    delete_menuitem: \"삭제\",\n    colors_menuitem: \"색깔\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"열 1개 삭제\",\n    delete_row_menuitem: \"행 삭제\",\n    add_left_menuitem: \"왼쪽에 열 1개 추가\",\n    add_right_menuitem: \"오른쪽에 열 1개 추가\",\n    add_above_menuitem: \"위에 행 1개 추가\",\n    add_below_menuitem: \"아래에 행 1개 추가\",\n  },\n  suggestion_menu: {\n    no_items_title: \"항목을 찾을 수 없음\",\n    loading: \"로딩 중…\",\n  },\n  color_picker: {\n    text_title: \"텍스트\",\n    background_title: \"배경\",\n    colors: {\n      default: \"기본\",\n      gray: \"회색\",\n      brown: \"갈색\",\n      red: \"빨간색\",\n      orange: \"주황색\",\n      yellow: \"노란색\",\n      green: \"녹색\",\n      blue: \"파란색\",\n      purple: \"보라색\",\n      pink: \"분홍색\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"진하게\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"기울임\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"밑줄\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"취소선\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"코드\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"색깔\",\n    },\n    link: {\n      tooltip: \"링크 만들기\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"이미지 캡션 수정\",\n      input_placeholder: \"이미지 캡션 수정\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"이미지 교체\",\n        video: \"비디오 교체\",\n        audio: \"오디오 교체\",\n        file: \"파일 교체\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"이미지 이름 변경\",\n        video: \"비디오 이름 변경\",\n        audio: \"오디오 이름 변경\",\n        file: \"파일 이름 변경\",\n      },\n      input_placeholder: {\n        image: \"이미지 이름 변경\",\n        video: \"비디오 이름 변경\",\n        audio: \"오디오 이름 변경\",\n        file: \"파일 이름 변경\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"이미지 다운로드\",\n        video: \"비디오 다운로드\",\n        audio: \"오디오 다운로드\",\n        file: \"파일 다운로드\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"이미지 삭제\",\n        video: \"비디오 삭제\",\n        audio: \"오디오 삭제\",\n        file: \"파일 삭제\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"미리보기 전환\",\n    },\n    nest: {\n      tooltip: \"중첩 블록\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"비중첩 블록\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"텍스트 왼쪽 맞춤\",\n    },\n    align_center: {\n      tooltip: \"텍스트 가운데 맞춤\",\n    },\n    align_right: {\n      tooltip: \"텍스트 오른쪽 맞춤\",\n    },\n    align_justify: {\n      tooltip: \"텍스트 양쪽 맞춤\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"업로드\",\n      file_placeholder: {\n        image: \"이미지 업로드\",\n        video: \"비디오 업로드\",\n        audio: \"오디오 업로드\",\n        file: \"파일 업로드\",\n      },\n      upload_error: \"오류: 업로드 실패\",\n    },\n    embed: {\n      title: \"임베드\",\n      embed_button: {\n        image: \"이미지 삽입\",\n        video: \"비디오 삽입\",\n        audio: \"오디오 삽입\",\n        file: \"파일 삽입\",\n      },\n      url_placeholder: \"URL을 입력하세요.\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"링크 삭제\",\n    },\n    edit: {\n      text: \"링크 수정\",\n      tooltip: \"수정\",\n    },\n    open: {\n      tooltip: \"새 탭으로 열기\",\n    },\n    form: {\n      title_placeholder: \"제목 수정\",\n      url_placeholder: \"URL 수정\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "import type { Dictionary } from \"../dictionary\";\n\nexport const nl: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Kop 1\",\n      subtext: \"Gebruikt voor een hoofdkop\",\n      aliases: [\"h\", \"kop1\", \"h1\"],\n      group: \"Koppen\",\n    },\n    heading_2: {\n      title: \"Kop 2\",\n      subtext: \"Gebruikt voor belangrijke secties\",\n      aliases: [\"h2\", \"kop2\", \"subkop\"],\n      group: \"Koppen\",\n    },\n    heading_3: {\n      title: \"Kop 3\",\n      subtext: \"Gebruikt voor subsecties en groepskoppen\",\n      aliases: [\"h3\", \"kop3\", \"subkop\"],\n      group: \"Koppen\",\n    },\n    numbered_list: {\n      title: \"Genummerde Lijst\",\n      subtext: \"Gebruikt om een genummerde lijst weer te geven\",\n      aliases: [\"ol\", \"li\", \"lijst\", \"genummerdelijst\", \"genummerde lijst\"],\n      group: \"Basisblokken\",\n    },\n    bullet_list: {\n      title: \"Puntenlijst\",\n      subtext: \"Gebruikt om een ongeordende lijst weer te geven\",\n      aliases: [\"ul\", \"li\", \"lijst\", \"puntenlijst\", \"punten lijst\"],\n      group: \"Basisblokken\",\n    },\n    check_list: {\n      title: \"Controlelijst\",\n      subtext: \"Gebruikt om een lijst met selectievakjes weer te geven\",\n      aliases: [\"ul\", \"li\", \"lijst\", \"aangevinkte lijst\", \"selectievakje\"],\n      group: \"Basisblokken\",\n    },\n    paragraph: {\n      title: \"Paragraaf\",\n      subtext: \"Gebruikt voor de hoofdtekst van uw document\",\n      aliases: [\"p\", \"paragraaf\"],\n      group: \"Basisblokken\",\n    },\n    table: {\n      title: \"Tabel\",\n      subtext: \"Gebruikt voor tabellen\",\n      aliases: [\"tabel\"],\n      group: \"Geavanceerd\",\n    },\n    image: {\n      title: \"Afbeelding\",\n      subtext: \"Voeg een afbeelding in\",\n      aliases: [\n        \"afbeelding\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"foto\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    video: {\n      title: \"Video\",\n      subtext: \"Voeg een video in\",\n      aliases: [\n        \"video\",\n        \"videoUploaden\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\",\n        \"drive\",\n        \"dropbox\",\n      ],\n      group: \"Media\",\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Voeg audio in\",\n      aliases: [\n        \"audio\",\n        \"audioUploaden\",\n        \"upload\",\n        \"mp3\",\n        \"geluid\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    file: {\n      title: \"Bestand\",\n      subtext: \"Voeg een bestand in\",\n      aliases: [\"bestand\", \"upload\", \"insluiten\", \"media\", \"url\"],\n      group: \"Media\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Gebruikt voor het invoegen van een emoji\",\n      aliases: [\n        \"emoji\",\n        \"emotie-uitdrukking\",\n        \"gezichtsuitdrukking\",\n        \"gezicht\",\n      ],\n      group: \"Overig\",\n    },\n  },\n  placeholders: {\n    default: \"Voer tekst in of type '/' voor commando's\",\n    heading: \"Kop\",\n    bulletListItem: \"Lijst\",\n    numberedListItem: \"Lijst\",\n    checkListItem: \"Lijst\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Afbeelding toevoegen\",\n    },\n    video: {\n      add_button_text: \"Video toevoegen\",\n    },\n    audio: {\n      add_button_text: \"Audio toevoegen\",\n    },\n    file: {\n      add_button_text: \"Bestand toevoegen\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Nieuw blok\",\n    drag_handle_label: \"Open blok menu\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Verwijder\",\n    colors_menuitem: \"Kleuren\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Verwijder kolom\",\n    delete_row_menuitem: \"Verwijder rij\",\n    add_left_menuitem: \"Voeg kolom links toe\",\n    add_right_menuitem: \"Voeg kolom rechts toe\",\n    add_above_menuitem: \"Voeg rij boven toe\",\n    add_below_menuitem: \"Voeg rij onder toe\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Geen items gevonden\",\n    loading: \"Laden…\",\n  },\n  color_picker: {\n    text_title: \"Tekst\",\n    background_title: \"Achtergrond\",\n    colors: {\n      default: \"Standaard\",\n      gray: \"Grijs\",\n      brown: \"Bruin\",\n      red: \"Rood\",\n      orange: \"Oranje\",\n      yellow: \"Geel\",\n      green: \"Groen\",\n      blue: \"Blauw\",\n      purple: \"Paars\",\n      pink: \"Roze\",\n    },\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Vet\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Cursief\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Onderstrepen\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Doorstrepen\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Kleuren\",\n    },\n    link: {\n      tooltip: \"Maak link\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Bewerk onderschrift\",\n      input_placeholder: \"Bewerk onderschrift\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Afbeelding vervangen\",\n        video: \"Video vervangen\",\n        audio: \"Audio vervangen\",\n        file: \"Bestand vervangen\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Afbeelding hernoemen\",\n        video: \"Video hernoemen\",\n        audio: \"Audio hernoemen\",\n        file: \"Bestand hernoemen\",\n      },\n      input_placeholder: {\n        image: \"Afbeelding hernoemen\",\n        video: \"Video hernoemen\",\n        audio: \"Audio hernoemen\",\n        file: \"Bestand hernoemen\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Afbeelding downloaden\",\n        video: \"Video downloaden\",\n        audio: \"Audio downloaden\",\n        file: \"Bestand downloaden\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Afbeelding verwijderen\",\n        video: \"Video verwijderen\",\n        audio: \"Audio verwijderen\",\n        file: \"Bestand verwijderen\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Voorbeeldschakelaar\",\n    },\n    nest: {\n      tooltip: \"Nest blok\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Ontnest blok\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Tekst links uitlijnen\",\n    },\n    align_center: {\n      tooltip: \"Tekst centreren\",\n    },\n    align_right: {\n      tooltip: \"Tekst rechts uitlijnen\",\n    },\n    align_justify: {\n      tooltip: \"Tekst uitvullen\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Upload\",\n      file_placeholder: {\n        image: \"Afbeelding uploaden\",\n        video: \"Video uploaden\",\n        audio: \"Audio uploaden\",\n        file: \"Bestand uploaden\",\n      },\n      upload_error: \"Fout: Upload mislukt\",\n    },\n    embed: {\n      title: \"Insluiten\",\n      embed_button: {\n        image: \"Afbeelding insluiten\",\n        video: \"Video insluiten\",\n        audio: \"Audio insluiten\",\n        file: \"Bestand insluiten\",\n      },\n      url_placeholder: \"Voer URL in\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Verwijder link\",\n    },\n    edit: {\n      text: \"Bewerk link\",\n      tooltip: \"Bewerk\",\n    },\n    open: {\n      tooltip: \"Open in nieuw tabblad\",\n    },\n    form: {\n      title_placeholder: \"Bewerk titel\",\n      url_placeholder: \"Bewerk URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "import type { Dictionary } from \"../dictionary\";\n\nexport const pl: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Nagłówek 1\",\n      subtext: \"Używany dla nagłówka najwyższego poziomu\",\n      aliases: [\"h\", \"naglowek1\", \"h1\"],\n      group: \"Nagłówki\",\n    },\n    heading_2: {\n      title: \"Nagłówek 2\",\n      subtext: \"Używany dla kluczowych sekcji\",\n      aliases: [\"h2\", \"naglowek2\", \"podnaglowek\"],\n      group: \"Nagłówki\",\n    },\n    heading_3: {\n      title: \"Nagłówek 3\",\n      subtext: \"Używany dla podsekcji i grup nagłówków\",\n      aliases: [\"h3\", \"naglowek3\", \"podnaglowek\"],\n      group: \"Nagłówki\",\n    },\n    numbered_list: {\n      title: \"Lista numerowana\",\n      subtext: \"Używana do wyświetlania listy numerowanej\",\n      aliases: [\"ol\", \"li\", \"lista\", \"numerowana lista\"],\n      group: \"Podstawowe bloki\",\n    },\n    bullet_list: {\n      title: \"Lista punktowana\",\n      subtext: \"Używana do wyświetlania listy bez numeracji\",\n      aliases: [\"ul\", \"li\", \"lista\", \"punktowana lista\"],\n      group: \"Podstawowe bloki\",\n    },\n    check_list: {\n      title: \"Lista z polami wyboru\",\n      subtext: \"Używana do wyświetlania listy z polami wyboru\",\n      aliases: [\"ul\", \"li\", \"lista\", \"lista z polami wyboru\", \"pole wyboru\"],\n      group: \"Podstawowe bloki\",\n    },\n    paragraph: {\n      title: \"Akapit\",\n      subtext: \"Używany dla treści dokumentu\",\n      aliases: [\"p\", \"akapit\"],\n      group: \"Podstawowe bloki\",\n    },\n    table: {\n      title: \"Tabela\",\n      subtext: \"Używana do tworzenia tabel\",\n      aliases: [\"tabela\"],\n      group: \"Zaawansowane\",\n    },\n    image: {\n      title: \"Zdjęcie\",\n      subtext: \"Wstaw zdjęcie\",\n      aliases: [\n        \"obraz\",\n        \"wrzućZdjęcie\",\n        \"wrzuć\",\n        \"img\",\n        \"zdjęcie\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    video: {\n      title: \"Wideo\",\n      subtext: \"Wstaw wideo\",\n      aliases: [\"wideo\", \"wrzućWideo\", \"wrzuć\", \"mp4\", \"film\", \"media\", \"url\"],\n      group: \"Media\",\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Wstaw audio\",\n      aliases: [\n        \"audio\",\n        \"wrzućAudio\",\n        \"wrzuć\",\n        \"mp3\",\n        \"dźwięk\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Media\",\n    },\n    file: {\n      title: \"Plik\",\n      subtext: \"Wstaw plik\",\n      aliases: [\"plik\", \"wrzuć\", \"wstaw\", \"media\", \"url\"],\n      group: \"Media\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Używane do wstawiania emoji\",\n      aliases: [\"emoji\", \"emotka\", \"wyrażenie emocji\", \"twarz\"],\n      group: \"Inne\",\n    },\n  },\n  placeholders: {\n    default: \"Wprowadź tekst lub wpisz '/' aby użyć poleceń\",\n    heading: \"Nagłówek\",\n    bulletListItem: \"Lista\",\n    numberedListItem: \"Lista\",\n    checkListItem: \"Lista\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Dodaj zdjęcie\",\n    },\n    video: {\n      add_button_text: \"Dodaj wideo\",\n    },\n    audio: {\n      add_button_text: \"Dodaj audio\",\n    },\n    file: {\n      add_button_text: \"Dodaj plik\",\n    },\n  },\n  side_menu: {\n    add_block_label: \"Dodaj blok\",\n    drag_handle_label: \"Otwórz menu bloków\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Usuń\",\n    colors_menuitem: \"Kolory\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Usuń kolumnę\",\n    delete_row_menuitem: \"Usuń wiersz\",\n    add_left_menuitem: \"Dodaj kolumnę po lewej\",\n    add_right_menuitem: \"Dodaj kolumnę po prawej\",\n    add_above_menuitem: \"Dodaj wiersz powyżej\",\n    add_below_menuitem: \"Dodaj wiersz poniżej\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Nie znaleziono elementów\",\n    loading: \"Ładowanie…\",\n  },\n  color_picker: {\n    text_title: \"Tekst\",\n    background_title: \"Tło\",\n    colors: {\n      default: \"Domyślny\",\n      gray: \"Szary\",\n      brown: \"Brązowy\",\n      red: \"Czerwony\",\n      orange: \"Pomarańczowy\",\n      yellow: \"Żółty\",\n      green: \"Zielony\",\n      blue: \"Niebieski\",\n      purple: \"Fioletowy\",\n      pink: \"Różowy\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Pogrubienie\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Kursywa\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Podkreślenie\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Przekreślenie\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Kod\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Kolory\",\n    },\n    link: {\n      tooltip: \"Utwórz link\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Zmień podpis\",\n      input_placeholder: \"Zmień podpis\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Zmień obraz\",\n        video: \"Zmień wideo\",\n        audio: \"Zmień audio\",\n        file: \"Zmień plik\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Zmień nazwę zdjęcia\",\n        video: \"Zmień nazwę wideo\",\n        audio: \"Zmień nazwę audio\",\n        file: \"Zmień nazwę pliku\",\n      },\n      input_placeholder: {\n        image: \"Zmień nazwę zdjęcia\",\n        video: \"Zmień nazwę wideo\",\n        audio: \"Zmień nazwę audio\",\n        file: \"Zmień nazwę pliku\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Pobierz zdjęcie\",\n        video: \"Pobierz wideo\",\n        audio: \"Pobierz audio\",\n        file: \"Pobierz plik\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Usuń zdjęcie\",\n        video: \"Usuń wideo\",\n        audio: \"Usuń audio\",\n        file: \"Usuń plik\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Przełącz podgląd\",\n    },\n    nest: {\n      tooltip: \"Zagnieźdź blok\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Odgagnieźdź blok\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Wyrównaj tekst do lewej\",\n    },\n    align_center: {\n      tooltip: \"Wyśrodkuj tekst\",\n    },\n    align_right: {\n      tooltip: \"Wyrównaj tekst do prawej\",\n    },\n    align_justify: {\n      tooltip: \"Wyjustuj tekst\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Wrzuć\",\n      file_placeholder: {\n        image: \"Wrzuć zdjęcie\",\n        video: \"Wrzuć wideo\",\n        audio: \"Wrzuć audio\",\n        file: \"Wrzuć plik\",\n      },\n      upload_error: \"Błąd: Przesyłanie nie powiodło się\",\n    },\n    embed: {\n      title: \"Wstaw\",\n      embed_button: {\n        image: \"Wstaw zdjęice\",\n        video: \"Wstaw wideo\",\n        audio: \"Wstaw audio\",\n        file: \"Wstaw plik\",\n      },\n      url_placeholder: \"Wprowadź URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Usuń link\",\n    },\n    edit: {\n      text: \"Edytuj link\",\n      tooltip: \"Edytuj\",\n    },\n    open: {\n      tooltip: \"Otwórz w nowej karcie\",\n    },\n    form: {\n      title_placeholder: \"Edytuj tytuł\",\n      url_placeholder: \"Edytuj URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "import type { Dictionary } from \"../dictionary\";\n\nexport const pt: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Título\",\n      subtext: \"Usado para um título de nível superior\",\n      aliases: [\"h\", \"titulo1\", \"h1\"],\n      group: \"Títulos\",\n    },\n    heading_2: {\n      title: \"Título 2\",\n      subtext: \"Usado para seções principais\",\n      aliases: [\"h2\", \"titulo2\", \"subtitulo\"],\n      group: \"Títulos\",\n    },\n    heading_3: {\n      title: \"Título 3\",\n      subtext: \"Usado para subseções e títulos de grupo\",\n      aliases: [\"h3\", \"titulo3\", \"subtitulo\"],\n      group: \"Títulos\",\n    },\n    numbered_list: {\n      title: \"Lista Numerada\",\n      subtext: \"Usado para exibir uma lista numerada\",\n      aliases: [\"ol\", \"li\", \"lista\", \"listanumerada\", \"lista numerada\"],\n      group: \"Blocos Básicos\",\n    },\n    bullet_list: {\n      title: \"Lista com Marcadores\",\n      subtext: \"Usado para exibir uma lista não ordenada\",\n      aliases: [\"ul\", \"li\", \"lista\", \"listamarcadores\", \"lista com marcadores\"],\n      group: \"Blocos Básicos\",\n    },\n    check_list: {\n      title: \"Lista de verificação\",\n      subtext: \"Usado para exibir uma lista com caixas de seleção\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"lista\",\n        \"lista de verificação\",\n        \"lista marcada\",\n        \"caixa de seleção\",\n      ],\n      group: \"Blocos Básicos\",\n    },\n    paragraph: {\n      title: \"Parágrafo\",\n      subtext: \"Usado para o corpo do seu documento\",\n      aliases: [\"p\", \"paragrafo\"],\n      group: \"Blocos Básicos\",\n    },\n    table: {\n      title: \"Tabela\",\n      subtext: \"Usado para tabelas\",\n      aliases: [\"tabela\"],\n      group: \"Avançado\",\n    },\n    image: {\n      title: \"Imagem\",\n      subtext: \"Inserir uma imagem\",\n      aliases: [\n        \"imagem\",\n        \"uploadImagem\",\n        \"upload\",\n        \"img\",\n        \"foto\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Mídia\",\n    },\n    video: {\n      title: \"Vídeo\",\n      subtext: \"Inserir um vídeo\",\n      aliases: [\n        \"vídeo\",\n        \"uploadVídeo\",\n        \"upload\",\n        \"mp4\",\n        \"filme\",\n        \"mídia\",\n        \"url\",\n      ],\n      group: \"Mídia\",\n    },\n    audio: {\n      title: \"Áudio\",\n      subtext: \"Inserir um áudio\",\n      aliases: [\"áudio\", \"uploadÁudio\", \"upload\", \"mp3\", \"som\", \"mídia\", \"url\"],\n      group: \"Mídia\",\n    },\n    file: {\n      title: \"Arquivo\",\n      subtext: \"Inserir um arquivo\",\n      aliases: [\"arquivo\", \"upload\", \"incorporar\", \"mídia\", \"url\"],\n      group: \"Mídia\",\n    },\n    emoji: {\n      title: \"Emoji\",\n      subtext: \"Usado para inserir um emoji\",\n      aliases: [\"emoji\", \"emoticon\", \"expressão emocional\", \"rosto\"],\n      group: \"Outros\",\n    },\n  },\n  placeholders: {\n    default: \"Digite texto ou use '/' para comandos\",\n    heading: \"Título\",\n    bulletListItem: \"Lista\",\n    numberedListItem: \"Lista\",\n    checkListItem: \"Lista\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Adicionar imagem\",\n    },\n    video: {\n      add_button_text: \"Adicionar vídeo\",\n    },\n    audio: {\n      add_button_text: \"Adicionar áudio\",\n    },\n    file: {\n      add_button_text: \"Adicionar arquivo\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Adicionar bloco\",\n    drag_handle_label: \"Abrir menu do bloco\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Excluir\",\n    colors_menuitem: \"Cores\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Excluir coluna\",\n    delete_row_menuitem: \"Excluir linha\",\n    add_left_menuitem: \"Adicionar coluna à esquerda\",\n    add_right_menuitem: \"Adicionar coluna à direita\",\n    add_above_menuitem: \"Adicionar linha acima\",\n    add_below_menuitem: \"Adicionar linha abaixo\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Nenhum item encontrado\",\n    loading: \"Carregando…\",\n  },\n  color_picker: {\n    text_title: \"Texto\",\n    background_title: \"Fundo\",\n    colors: {\n      default: \"Padrão\",\n      gray: \"Cinza\",\n      brown: \"Marrom\",\n      red: \"Vermelho\",\n      orange: \"Laranja\",\n      yellow: \"Amarelo\",\n      green: \"Verde\",\n      blue: \"Azul\",\n      purple: \"Roxo\",\n      pink: \"Rosa\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Negrito\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Itálico\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Sublinhado\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Riscado\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Código\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Cores\",\n    },\n    link: {\n      tooltip: \"Criar link\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Editar legenda\",\n      input_placeholder: \"Editar legenda\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Substituir imagem\",\n        video: \"Substituir vídeo\",\n        audio: \"Substituir áudio\",\n        file: \"Substituir arquivo\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Renomear imagem\",\n        video: \"Renomear vídeo\",\n        audio: \"Renomear áudio\",\n        file: \"Renomear arquivo\",\n      },\n      input_placeholder: {\n        image: \"Renomear imagem\",\n        video: \"Renomear vídeo\",\n        audio: \"Renomear áudio\",\n        file: \"Renomear arquivo\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Baixar imagem\",\n        video: \"Baixar vídeo\",\n        audio: \"Baixar áudio\",\n        file: \"Baixar arquivo\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Excluir imagem\",\n        video: \"Excluir vídeo\",\n        audio: \"Excluir áudio\",\n        file: \"Excluir arquivo\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Alternar visualização\",\n    },\n    nest: {\n      tooltip: \"Aninhar bloco\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Desaninhar bloco\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Alinhar à esquerda\",\n    },\n    align_center: {\n      tooltip: \"Alinhar ao centro\",\n    },\n    align_right: {\n      tooltip: \"Alinhar à direita\",\n    },\n    align_justify: {\n      tooltip: \"Justificar texto\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Upload\",\n      file_placeholder: {\n        image: \"Upload de imagem\",\n        video: \"Upload de vídeo\",\n        audio: \"Upload de áudio\",\n        file: \"Upload de arquivo\",\n      },\n      upload_error: \"Erro: Falha no upload\",\n    },\n    embed: {\n      title: \"Incorporar\",\n      embed_button: {\n        image: \"Incorporar imagem\",\n        video: \"Incorporar vídeo\",\n        audio: \"Incorporar áudio\",\n        file: \"Incorporar arquivo\",\n      },\n      url_placeholder: \"Insira a URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Remover link\",\n    },\n    edit: {\n      text: \"Editar link\",\n      tooltip: \"Editar\",\n    },\n    open: {\n      tooltip: \"Abrir em nova aba\",\n    },\n    form: {\n      title_placeholder: \"Editar título\",\n      url_placeholder: \"Editar URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "import { Dictionary } from \"../dictionary\";\n\nexport const ru: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Заголовок 1 уровня\",\n      subtext: \"Используется для заголовка верхнего уровня\",\n      aliases: [\"h\", \"heading1\", \"h1\", \"заголовок1\"],\n      group: \"Заголовки\",\n    },\n    heading_2: {\n      title: \"Заголовок 2 уровня\",\n      subtext: \"Используется для ключевых разделов\",\n      aliases: [\"h2\", \"heading2\", \"subheading\", \"заголовок2\", \"подзаголовок\"],\n      group: \"Заголовки\",\n    },\n    heading_3: {\n      title: \"Заголовок 3 уровня\",\n      subtext: \"Используется для подразделов и групп\",\n      aliases: [\"h3\", \"heading3\", \"subheading\", \"заголовок3\", \"подзаголовок\"],\n      group: \"Заголовки\",\n    },\n    numbered_list: {\n      title: \"Нумерованный список\",\n      subtext: \"Используется для отображения нумерованного списка\",\n      aliases: [\n        \"ol\",\n        \"li\",\n        \"list\",\n        \"numberedlist\",\n        \"numbered list\",\n        \"список\",\n        \"нумерованный список\",\n      ],\n      group: \"Базовые блоки\",\n    },\n    bullet_list: {\n      title: \"Маркированный список\",\n      subtext: \"Для отображения неупорядоченного списка.\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"bulletlist\",\n        \"bullet list\",\n        \"список\",\n        \"маркированный список\",\n      ],\n      group: \"Базовые блоки\",\n    },\n    check_list: {\n      title: \"Контрольный список\",\n      subtext: \"Для отображения списка с флажками\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"checklist\",\n        \"check list\",\n        \"checked list\",\n        \"checkbox\",\n        \"список\",\n      ],\n      group: \"Базовые блоки\",\n    },\n    paragraph: {\n      title: \"Параграф\",\n      subtext: \"Основной текст\",\n      aliases: [\"p\", \"paragraph\", \"параграф\"],\n      group: \"Базовые блоки\",\n    },\n    table: {\n      title: \"Таблица\",\n      subtext: \"Используется для таблиц\",\n      aliases: [\"table\", \"таблица\"],\n      group: \"Продвинутый\",\n    },\n    image: {\n      title: \"Картинка\",\n      subtext: \"Вставить изображение\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"url\",\n        \"загрузка\",\n        \"картинка\",\n        \"рисунок\",\n      ],\n      group: \"Медиа\",\n    },\n    video: {\n      title: \"Видео\",\n      subtext: \"Вставить видео\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\",\n        \"загрузка\",\n        \"видео\",\n      ],\n      group: \"Медиа\",\n    },\n    audio: {\n      title: \"Аудио\",\n      subtext: \"Вставить аудио\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"url\",\n        \"загрузка\",\n        \"аудио\",\n        \"звук\",\n        \"музыка\",\n      ],\n      group: \"Медиа\",\n    },\n    file: {\n      title: \"Файл\",\n      subtext: \"Вставить файл\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"url\", \"загрузка\", \"файл\"],\n      group: \"Медиа\",\n    },\n    emoji: {\n      title: \"Эмодзи\",\n      subtext: \"Используется для вставки эмодзи\",\n      aliases: [\"эмодзи\", \"смайлик\", \"выражение эмоций\", \"лицо\"],\n      group: \"Прочее\",\n    },\n  },\n  placeholders: {\n    default: \"Ведите текст или введите «/» для команд\",\n    heading: \"Заголовок\",\n    bulletListItem: \"Список\",\n    numberedListItem: \"Список\",\n    checkListItem: \"Список\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Добавить изображение\",\n    },\n    video: {\n      add_button_text: \"Добавить видео\",\n    },\n    audio: {\n      add_button_text: \"Добавить аудио\",\n    },\n    file: {\n      add_button_text: \"Добавить файл\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Добавить блок\",\n    drag_handle_label: \"Открыть меню блока\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Удалить\",\n    colors_menuitem: \"Цвета\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Удалить столбец\",\n    delete_row_menuitem: \"Удалить строку\",\n    add_left_menuitem: \"Добавить столбец слева\",\n    add_right_menuitem: \"Добавить столбец справа\",\n    add_above_menuitem: \"Добавить строку выше\",\n    add_below_menuitem: \"Добавить строку ниже\",\n  },\n  suggestion_menu: {\n    no_items_title: \"ничего не найдено\",\n    loading: \"Загрузка…\",\n  },\n  color_picker: {\n    text_title: \"Текст\",\n    background_title: \"Задний фон\",\n    colors: {\n      default: \"По умолчинию\",\n      gray: \"Серый\",\n      brown: \"Коричневый\",\n      red: \"Красный\",\n      orange: \"Оранжевый\",\n      yellow: \"Жёлтый\",\n      green: \"Зелёный\",\n      blue: \"Голубой\",\n      purple: \"Фиолетовый\",\n      pink: \"Розовый\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Жирный\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"Курсив\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Подчёркнутый\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Зачёркнутый\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Код\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Цвета\",\n    },\n    link: {\n      tooltip: \"Создать ссылку\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Изменить подпись\",\n      input_placeholder: \"Изменить подпись\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Заменить изображение\",\n        video: \"Заменить видео\",\n        audio: \"Заменить аудио\",\n        file: \"Заменить файл\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Переименовать изображение\",\n        video: \"Переименовать видео\",\n        audio: \"Переименовать аудио\",\n        file: \"Переименовать файл\",\n      },\n      input_placeholder: {\n        image: \"Переименовать изображение\",\n        video: \"Переименовать видео\",\n        audio: \"Переименовать аудио\",\n        file: \"Переименовать файл\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Скачать картинку\",\n        video: \"Скачать видео\",\n        audio: \"Скачать аудио\",\n        file: \"Скачать файл\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Удалить картинку\",\n        video: \"Удалить видео\",\n        audio: \"Удалить аудио\",\n        file: \"Скачать файл\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Переключить предварительный просмотр\",\n    },\n    nest: {\n      tooltip: \"Сдвинуть вправо\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Сдвинуть влево\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Текст по левому краю\",\n    },\n    align_center: {\n      tooltip: \"Текст по середине\",\n    },\n    align_right: {\n      tooltip: \"Текст по правому краю\",\n    },\n    align_justify: {\n      tooltip: \"По середине текст\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Загрузить\",\n      file_placeholder: {\n        image: \"Загрузить картинки\",\n        video: \"Загрузить видео\",\n        audio: \"Загрузить аудио\",\n        file: \"Загрузить файл\",\n      },\n      upload_error: \"Ошибка: не удалось загрузить\",\n    },\n    embed: {\n      title: \"Вставить\",\n      embed_button: {\n        image: \"Вставить картинку\",\n        video: \"Вставить видео\",\n        audio: \"Вставить аудио\",\n        file: \"Вставить файл\",\n      },\n      url_placeholder: \"Введите URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Удалить ссылку\",\n    },\n    edit: {\n      text: \"Изменить ссылку\",\n      tooltip: \"Редактировать\",\n    },\n    open: {\n      tooltip: \"Открыть в новой вкладке\",\n    },\n    form: {\n      title_placeholder: \"Изменить заголовок\",\n      url_placeholder: \"Изменить URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "import type { Dictionary } from \"../dictionary\";\n\nexport const vi: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"Tiêu đề H1\",\n      subtext: \"Sử dụng cho tiêu đề cấp cao nhất\",\n      aliases: [\"h\", \"tieude1\", \"dd1\"],\n      group: \"Tiêu đề\",\n    },\n    heading_2: {\n      title: \"Tiêu đề H2\",\n      subtext: \"Sử dụng cho các phần chính\",\n      aliases: [\"h2\", \"tieude2\", \"tieudephu\"],\n      group: \"Tiêu đề\",\n    },\n    heading_3: {\n      title: \"Tiêu đề H3\",\n      subtext: \"Sử dụng cho phụ đề và tiêu đề nhóm\",\n      aliases: [\"h3\", \"tieude3\", \"tieudephu\"],\n      group: \"Tiêu đề\",\n    },\n    numbered_list: {\n      title: \"Danh sách đánh số\",\n      subtext: \"Sử dụng để hiển thị danh sách có đánh số\",\n      aliases: [\"ol\", \"li\", \"ds\", \"danhsachdso\", \"danh sach danh so\"],\n      group: \"Khối cơ bản\",\n    },\n    bullet_list: {\n      title: \"Danh sách\",\n      subtext: \"Sử dụng để hiển thị danh sách không đánh số\",\n      aliases: [\"ul\", \"li\", \"ds\", \"danhsach\", \"danh sach\"],\n      group: \"Khối cơ bản\",\n    },\n    check_list: {\n      title: \"Danh sách kiểm tra\",\n      subtext: \"Dùng để hiển thị danh sách có hộp kiểm\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"danh sach\",\n        \"danh sach kiem tra\",\n        \"danh sach da kiem tra\",\n        \"hop kiem\",\n      ],\n      group: \"Khối cơ bản\",\n    },\n    paragraph: {\n      title: \"Đoạn văn\",\n      subtext: \"Sử dụng cho nội dung chính của tài liệu\",\n      aliases: [\"p\", \"doanvan\"],\n      group: \"Khối cơ bản\",\n    },\n    table: {\n      title: \"Bảng\",\n      subtext: \"Sử dụng để tạo bảng\",\n      aliases: [\"bang\"],\n      group: \"Nâng cao\",\n    },\n    image: {\n      title: \"Hình ảnh\",\n      subtext: \"Chèn hình ảnh\",\n      aliases: [\"anh\", \"tai-len-anh\", \"tai-len\", \"img\", \"hinh\", \"media\", \"url\"],\n      group: \"Phương tiện\",\n    },\n    video: {\n      title: \"Video\",\n      subtext: \"Chèn video\",\n      aliases: [\n        \"video\",\n        \"tai-len-video\",\n        \"tai-len\",\n        \"mp4\",\n        \"phim\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Phương tiện\",\n    },\n    audio: {\n      title: \"Âm thanh\",\n      subtext: \"Chèn âm thanh\",\n      aliases: [\n        \"âm thanh\",\n        \"tai-len-am-thanh\",\n        \"tai-len\",\n        \"mp3\",\n        \"am thanh\",\n        \"media\",\n        \"url\",\n      ],\n      group: \"Phương tiện\",\n    },\n    file: {\n      title: \"Tệp\",\n      subtext: \"Chèn tệp\",\n      aliases: [\"tep\", \"tai-len\", \"nhung\", \"media\", \"url\"],\n      group: \"Phương tiện\",\n    },\n    emoji: {\n      title: \"Biểu tượng cảm xúc\",\n      subtext: \"Dùng để chèn biểu tượng cảm xúc\",\n      aliases: [\n        \"biểu tượng cảm xúc\",\n        \"emoji\",\n        \"emoticon\",\n        \"cảm xúc expression\",\n        \"khuôn mặt\",\n        \"face\",\n      ],\n      group: \"Khác\",\n    },\n  },\n  placeholders: {\n    default: \"Nhập văn bản hoặc gõ '/' để thêm định dạng\",\n    heading: \"Tiêu đề\",\n    bulletListItem: \"Danh sách\",\n    numberedListItem: \"Danh sách\",\n    checkListItem: \"Danh sách\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Thêm ảnh\",\n    },\n    video: {\n      add_button_text: \"Thêm video\",\n    },\n    audio: {\n      add_button_text: \"Thêm âm thanh\",\n    },\n    file: {\n      add_button_text: \"Thêm tệp\",\n    },\n  },\n  // từ gói phản ứng:\n  side_menu: {\n    add_block_label: \"Thêm khối\",\n    drag_handle_label: \"Mở trình đơn khối\",\n  },\n  drag_handle: {\n    delete_menuitem: \"Xóa\",\n    colors_menuitem: \"Màu sắc\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"Xóa cột\",\n    delete_row_menuitem: \"Xóa hàng\",\n    add_left_menuitem: \"Thêm cột bên trái\",\n    add_right_menuitem: \"Thêm cột bên phải\",\n    add_above_menuitem: \"Thêm hàng phía trên\",\n    add_below_menuitem: \"Thêm hàng phía dưới\",\n  },\n  suggestion_menu: {\n    no_items_title: \"Không tìm thấy mục nào\",\n    loading: \"Đang tải...\",\n  },\n  color_picker: {\n    text_title: \"Văn bản\",\n    background_title: \"Nền\",\n    colors: {\n      default: \"Mặc định\",\n      gray: \"Xám\",\n      brown: \"Nâu\",\n      red: \"Đỏ\",\n      orange: \"Cam\",\n      yellow: \"Vàng\",\n      green: \"Xanh lá\",\n      blue: \"Xanh dương\",\n      purple: \"Tím\",\n      pink: \"Hồng\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"In đậm\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"In nghiêng\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"Gạch dưới\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"Gạch ngang\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"Màu sắc\",\n    },\n    link: {\n      tooltip: \"Tạo liên kết\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"Chỉnh sửa chú thích\",\n      input_placeholder: \"Chỉnh sửa chú thích\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Thay thế hình ảnh\",\n        video: \"Thay thế video\",\n        audio: \"Thay thế âm thanh\",\n        file: \"Thay thế tệp\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Đổi tên hình ảnh\",\n        video: \"Đổi tên video\",\n        audio: \"Đổi tên âm thanh\",\n        file: \"Đổi tên tệp\",\n      },\n      input_placeholder: {\n        image: \"Đổi tên hình ảnh\",\n        video: \"Đổi tên video\",\n        audio: \"Đổi tên âm thanh\",\n        file: \"Đổi tên tệp\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"Tải xuống hình ảnh\",\n        video: \"Tải xuống video\",\n        audio: \"Tải xuống âm thanh\",\n        file: \"Tải xuống tệp\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Xóa hình ảnh\",\n        video: \"Xóa video\",\n        audio: \"Xóa âm thanh\",\n        file: \"Xóa tệp\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"Chuyển đổi xem trước\",\n    },\n    nest: {\n      tooltip: \"Lồng khối\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"Bỏ lồng khối\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"Căn trái văn bản\",\n    },\n    align_center: {\n      tooltip: \"Căn giữa văn bản\",\n    },\n    align_right: {\n      tooltip: \"Căn phải văn bản\",\n    },\n    align_justify: {\n      tooltip: \"Căn đều văn bản\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"Tải lên\",\n      file_placeholder: {\n        image: \"Tải lên hình ảnh\",\n        video: \"Tải lên video\",\n        audio: \"Tải lên âm thanh\",\n        file: \"Tải lên tệp\",\n      },\n      upload_error: \"Lỗi: Tải lên thất bại\",\n    },\n    embed: {\n      title: \"Nhúng\",\n      embed_button: {\n        image: \"Nhúng hình ảnh\",\n        video: \"Nhúng video\",\n        audio: \"Nhúng âm thanh\",\n        file: \"Nhúng tệp\",\n      },\n      url_placeholder: \"Nhập URL\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Xóa liên kết\",\n    },\n    edit: {\n      text: \"Chỉnh sửa liên kết\",\n      tooltip: \"Chỉnh sửa\",\n    },\n    open: {\n      tooltip: \"Mở trong tab mới\",\n    },\n    form: {\n      title_placeholder: \"Chỉnh sửa tiêu đề\",\n      url_placeholder: \"Chỉnh sửa URL\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "import type { Dictionary } from \"../dictionary\";\n\nexport const zh: Dictionary = {\n  slash_menu: {\n    heading: {\n      title: \"一级标题\",\n      subtext: \"用于顶级标题\",\n      aliases: [\"h\", \"heading1\", \"h1\", \"标题\", \"一级标题\"],\n      group: \"标题\",\n    },\n    heading_2: {\n      title: \"二级标题\",\n      subtext: \"用于关键部分\",\n      aliases: [\"h2\", \"heading2\", \"subheading\", \"标题\", \"二级标题\", \"副标题\"],\n      group: \"标题\",\n    },\n    heading_3: {\n      title: \"三级标题\",\n      subtext: \"用于小节和分组标题\",\n      aliases: [\"h3\", \"heading3\", \"subheading\", \"标题\", \"三级标题\"],\n      group: \"标题\",\n    },\n    numbered_list: {\n      title: \"有序列表\",\n      subtext: \"用于显示有序列表\",\n      aliases: [\n        \"ol\",\n        \"li\",\n        \"list\",\n        \"numberedlist\",\n        \"numbered list\",\n        \"列表\",\n        \"有序列表\",\n      ],\n      group: \"基础\",\n    },\n    bullet_list: {\n      title: \"无序列表\",\n      subtext: \"用于显示无序列表\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"bulletlist\",\n        \"bullet list\",\n        \"列表\",\n        \"无序列表\",\n      ],\n      group: \"基础\",\n    },\n    check_list: {\n      title: \"检查清单\",\n      subtext: \"用于显示带有复选框的列表\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"checklist\",\n        \"checked list\",\n        \"列表\",\n        \"检查清单\",\n        \"勾选列表\",\n        \"复选框\",\n      ],\n      group: \"基础\",\n    },\n    paragraph: {\n      title: \"段落\",\n      subtext: \"用于文档正文\",\n      aliases: [\"p\", \"paragraph\", \"text\", \"正文\"],\n      group: \"基础\",\n    },\n    table: {\n      title: \"表格\",\n      subtext: \"使用表格\",\n      aliases: [\"table\", \"表格\"],\n      group: \"高级功能\",\n    },\n    image: {\n      title: \"图片\",\n      subtext: \"插入图片\",\n      aliases: [\n        \"图片\",\n        \"上传图片\",\n        \"上传\",\n        \"image\",\n        \"img\",\n        \"相册\",\n        \"媒体\",\n        \"url\",\n      ],\n      group: \"媒体\",\n    },\n    video: {\n      title: \"视频\",\n      subtext: \"插入视频\",\n      aliases: [\n        \"视频\",\n        \"视频上传\",\n        \"上传\",\n        \"video\",\n        \"mp4\",\n        \"电影\",\n        \"媒体\",\n        \"url\",\n        \"驱动\",\n        \"dropbox\",\n      ],\n      group: \"媒体\",\n    },\n    audio: {\n      title: \"音频\",\n      subtext: \"插入音频\",\n      aliases: [\n        \"音频\",\n        \"音频上传\",\n        \"上传\",\n        \"audio\",\n        \"mp3\",\n        \"声音\",\n        \"媒体\",\n        \"url\",\n        \"驱动\",\n        \"dropbox\",\n      ],\n      group: \"媒体\",\n    },\n    file: {\n      title: \"文件\",\n      subtext: \"插入文件\",\n      aliases: [\"文件\", \"上传\", \"file\", \"嵌入\", \"媒体\", \"url\"],\n      group: \"媒体\",\n    },\n    emoji: {\n      title: \"表情符号\",\n      subtext: \"用于插入表情符号\",\n      aliases: [\n        \"表情符号\",\n        \"emoji\",\n        \"face\",\n        \"emote\",\n        \"表情\",\n        \"表情表达\",\n        \"表情\",\n      ],\n      group: \"其他\",\n    },\n  },\n  placeholders: {\n    default: \"输入 '/' 以使用命令\",\n    heading: \"标题\",\n    bulletListItem: \"列表\",\n    numberedListItem: \"列表\",\n    checkListItem: \"列表\",\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"添加图片\",\n    },\n    video: {\n      add_button_text: \"添加视频\",\n    },\n    audio: {\n      add_button_text: \"添加音频\",\n    },\n    file: {\n      add_button_text: \"添加文件\",\n    },\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"添加块\",\n    drag_handle_label: \"打开菜单\",\n  },\n  drag_handle: {\n    delete_menuitem: \"删除\",\n    colors_menuitem: \"颜色\",\n  },\n  table_handle: {\n    delete_column_menuitem: \"删除列\",\n    delete_row_menuitem: \"删除行\",\n    add_left_menuitem: \"左侧添加列\",\n    add_right_menuitem: \"右侧添加列\",\n    add_above_menuitem: \"上方添加行\",\n    add_below_menuitem: \"下方添加行\",\n  },\n  suggestion_menu: {\n    no_items_title: \"无匹配项\",\n    loading: \"加载中…\",\n  },\n  color_picker: {\n    text_title: \"文本\",\n    background_title: \"背景色\",\n    colors: {\n      default: \"默认\",\n      gray: \"灰色\",\n      brown: \"棕色\",\n      red: \"红色\",\n      orange: \"橙色\",\n      yellow: \"黄色\",\n      green: \"绿色\",\n      blue: \"蓝色\",\n      purple: \"紫色\",\n      pink: \"粉色\",\n    },\n  },\n\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"加粗\",\n      secondary_tooltip: \"Mod+B\",\n    },\n    italic: {\n      tooltip: \"斜体\",\n      secondary_tooltip: \"Mod+I\",\n    },\n    underline: {\n      tooltip: \"下划线\",\n      secondary_tooltip: \"Mod+U\",\n    },\n    strike: {\n      tooltip: \"删除线\",\n      secondary_tooltip: \"Mod+Shift+X\",\n    },\n    code: {\n      tooltip: \"代码标记\",\n      secondary_tooltip: \"\",\n    },\n    colors: {\n      tooltip: \"颜色\",\n    },\n    link: {\n      tooltip: \"添加链接\",\n      secondary_tooltip: \"Mod+K\",\n    },\n    file_caption: {\n      tooltip: \"编辑标题\",\n      input_placeholder: \"编辑标题\",\n    },\n    file_replace: {\n      tooltip: {\n        image: \"替换图片\",\n        video: \"替换视频\",\n        audio: \"替换音频\",\n        file: \"替换文件\",\n      },\n    },\n    file_rename: {\n      tooltip: {\n        image: \"重命名图片\",\n        video: \"重命名视频\",\n        audio: \"重命名音频\",\n        file: \"重命名文件\",\n      },\n      input_placeholder: {\n        image: \"重命名图片\",\n        video: \"重命名视频\",\n        audio: \"重命名音频\",\n        file: \"重命名文件\",\n      },\n    },\n    file_download: {\n      tooltip: {\n        image: \"下载图片\",\n        video: \"下载视频\",\n        audio: \"下载音频\",\n        file: \"下载文件\",\n      },\n    },\n    file_delete: {\n      tooltip: {\n        image: \"删除图片\",\n        video: \"删除视频\",\n        audio: \"删除音频\",\n        file: \"删除文件\",\n      },\n    },\n    file_preview_toggle: {\n      tooltip: \"切换预览\",\n    },\n    nest: {\n      tooltip: \"嵌套\",\n      secondary_tooltip: \"Tab\",\n    },\n    unnest: {\n      tooltip: \"取消嵌套\",\n      secondary_tooltip: \"Shift+Tab\",\n    },\n    align_left: {\n      tooltip: \"左对齐\",\n    },\n    align_center: {\n      tooltip: \"居中\",\n    },\n    align_right: {\n      tooltip: \"右对齐\",\n    },\n    align_justify: {\n      tooltip: \"文本对齐\",\n    },\n  },\n  file_panel: {\n    upload: {\n      title: \"上传\",\n      file_placeholder: {\n        image: \"上传图片\",\n        video: \"上传视频\",\n        audio: \"上传音频\",\n        file: \"上传文件\",\n      },\n      upload_error: \"Error：上传失败\",\n    },\n    embed: {\n      title: \"嵌入\",\n      embed_button: {\n        image: \"嵌入图片\",\n        video: \"嵌入视频\",\n        audio: \"嵌入音频\",\n        file: \"嵌入文件\",\n      },\n      url_placeholder: \"输入图片地址\",\n    },\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"清除链接\",\n    },\n    edit: {\n      text: \"编辑链接\",\n      tooltip: \"编辑\",\n    },\n    open: {\n      tooltip: \"新窗口打开\",\n    },\n    form: {\n      title_placeholder: \"编辑标题\",\n      url_placeholder: \"编辑链接地址\",\n    },\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\",\n  },\n};\n", "// some dependencies only export as ESM modules. This makes them incompatible with Node CJS.\n// To work around this, we load these dependencies as dynamic imports in a function that initializes them.\n\n// (to reproduce this issue, run ts-node on a file that users server-util)\nexport let esmDependencies:\n  | undefined\n  | {\n      rehypeParse: typeof import(\"rehype-parse\");\n      rehypeStringify: typeof import(\"rehype-stringify\");\n      unified: typeof import(\"unified\");\n      hastUtilFromDom: typeof import(\"hast-util-from-dom\");\n      rehypeRemark: typeof import(\"rehype-remark\");\n      remarkGfm: typeof import(\"remark-gfm\");\n      remarkStringify: typeof import(\"remark-stringify\");\n      remarkParse: typeof import(\"remark-parse\");\n      remarkRehype: typeof import(\"remark-rehype\");\n      rehypeFormat: typeof import(\"rehype-format\");\n    };\n\nexport async function initializeESMDependencies() {\n  if (esmDependencies) {\n    return esmDependencies;\n  }\n  const vals = await Promise.all([\n    import(\"rehype-parse\"),\n    import(\"rehype-stringify\"),\n    import(\"unified\"),\n    import(\"hast-util-from-dom\"),\n    import(\"rehype-remark\"),\n    import(\"remark-gfm\"),\n    import(\"remark-stringify\"),\n    import(\"remark-parse\"),\n    import(\"remark-rehype\"),\n    import(\"rehype-format\"),\n  ]);\n\n  esmDependencies = {\n    rehypeParse: vals[0],\n    rehypeStringify: vals[1],\n    unified: vals[2],\n    hastUtilFromDom: vals[3],\n    rehypeRemark: vals[4],\n    remarkGfm: vals[5],\n    remarkStringify: vals[6],\n    remarkParse: vals[7],\n    remarkRehype: vals[8],\n    rehypeFormat: vals[9],\n  };\n\n  return esmDependencies;\n}\n", "import {\n  combineTransactionSteps,\n  Extension,\n  findChildrenInRange,\n  getChangedRanges,\n} from \"@tiptap/core\";\nimport { Fragment, Slice } from \"prosemirror-model\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\nimport { v4 } from \"uuid\";\n\n/**\n * Code from Tiptap UniqueID extension (https://tiptap.dev/api/extensions/unique-id)\n * This extension is licensed under MIT (even though it's part of Tiptap pro).\n *\n * If you're a user of BlockNote, we still recommend to support their awesome work and become a sponsor!\n * https://tiptap.dev/pro\n */\n\n/**\n * Removes duplicated values within an array.\n * Supports numbers, strings and objects.\n */\nfunction removeDuplicates(array: any, by = JSON.stringify) {\n  const seen: any = {};\n  return array.filter((item: any) => {\n    const key = by(item);\n    return Object.prototype.hasOwnProperty.call(seen, key)\n      ? false\n      : (seen[key] = true);\n  });\n}\n\n/**\n * Returns a list of duplicated items within an array.\n */\nfunction findDuplicates(items: any) {\n  const filtered = items.filter(\n    (el: any, index: number) => items.indexOf(el) !== index\n  );\n  const duplicates = removeDuplicates(filtered);\n  return duplicates;\n}\n\nconst UniqueID = Extension.create({\n  name: \"uniqueID\",\n  // we’ll set a very high priority to make sure this runs first\n  // and is compatible with `appendTransaction` hooks of other extensions\n  priority: 10000,\n  addOptions() {\n    return {\n      attributeName: \"id\",\n      types: [],\n      generateID: () => {\n        // Use mock ID if tests are running.\n        if (typeof window !== \"undefined\" && (window as any).__TEST_OPTIONS) {\n          const testOptions = (window as any).__TEST_OPTIONS;\n          if (testOptions.mockID === undefined) {\n            testOptions.mockID = 0;\n          } else {\n            testOptions.mockID++;\n          }\n\n          return testOptions.mockID.toString() as string;\n        }\n\n        return v4();\n      },\n      filterTransaction: null,\n    };\n  },\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          [this.options.attributeName]: {\n            default: null,\n            parseHTML: (element) =>\n              element.getAttribute(`data-${this.options.attributeName}`),\n            renderHTML: (attributes) => ({\n              [`data-${this.options.attributeName}`]:\n                attributes[this.options.attributeName],\n            }),\n          },\n        },\n      },\n    ];\n  },\n  // check initial content for missing ids\n  // onCreate() {\n  //   // Don’t do this when the collaboration extension is active\n  //   // because this may update the content, so Y.js tries to merge these changes.\n  //   // This leads to empty block nodes.\n  //   // See: https://github.com/ueberdosis/tiptap/issues/2400\n  //   if (\n  //     this.editor.extensionManager.extensions.find(\n  //       (extension) => extension.name === \"collaboration\"\n  //     )\n  //   ) {\n  //     return;\n  //   }\n  //   const { view, state } = this.editor;\n  //   const { tr, doc } = state;\n  //   const { types, attributeName, generateID } = this.options;\n  //   const nodesWithoutId = findChildren(doc, (node) => {\n  //     return (\n  //       types.includes(node.type.name) && node.attrs[attributeName] === null\n  //     );\n  //   });\n  //   nodesWithoutId.forEach(({ node, pos }) => {\n  //     tr.setNodeMarkup(pos, undefined, {\n  //       ...node.attrs,\n  //       [attributeName]: generateID(),\n  //     });\n  //   });\n  //   tr.setMeta(\"addToHistory\", false);\n  //   view.dispatch(tr);\n  // },\n  addProseMirrorPlugins() {\n    let dragSourceElement: any = null;\n    let transformPasted = false;\n    return [\n      new Plugin({\n        key: new PluginKey(\"uniqueID\"),\n        appendTransaction: (transactions, oldState, newState) => {\n          // console.log(\"appendTransaction\");\n          const docChanges =\n            transactions.some((transaction) => transaction.docChanged) &&\n            !oldState.doc.eq(newState.doc);\n          const filterTransactions =\n            this.options.filterTransaction &&\n            transactions.some((tr) => {\n              let _a, _b;\n              return !((_b = (_a = this.options).filterTransaction) === null ||\n              _b === void 0\n                ? void 0\n                : _b.call(_a, tr));\n            });\n          if (!docChanges || filterTransactions) {\n            return;\n          }\n          const { tr } = newState;\n          const { types, attributeName, generateID } = this.options;\n          const transform = combineTransactionSteps(\n            oldState.doc,\n            transactions as any\n          );\n          const { mapping } = transform;\n          // get changed ranges based on the old state\n          const changes = getChangedRanges(transform);\n\n          changes.forEach(({ newRange }) => {\n            const newNodes = findChildrenInRange(\n              newState.doc,\n              newRange,\n              (node) => {\n                return types.includes(node.type.name);\n              }\n            );\n            const newIds = newNodes\n              .map(({ node }) => node.attrs[attributeName])\n              .filter((id) => id !== null);\n            const duplicatedNewIds = findDuplicates(newIds);\n            newNodes.forEach(({ node, pos }) => {\n              let _a;\n              // instead of checking `node.attrs[attributeName]` directly\n              // we look at the current state of the node within `tr.doc`.\n              // this helps to prevent adding new ids to the same node\n              // if the node changed multiple times within one transaction\n              const id =\n                (_a = tr.doc.nodeAt(pos)) === null || _a === void 0\n                  ? void 0\n                  : _a.attrs[attributeName];\n              if (id === null) {\n                // edge case, when using collaboration, yjs will set the id to null in `_forceRerender`\n                // when loading the editor\n                // this checks for this case and keeps it at initialBlockId so there will be no change\n                const initialDoc = oldState.doc.type.createAndFill()!.content;\n                const wasInitial =\n                  oldState.doc.content.findDiffStart(initialDoc) === null;\n\n                if (wasInitial) {\n                  // the old state was the \"initial content\"\n                  const jsonNode = JSON.parse(\n                    JSON.stringify(newState.doc.toJSON())\n                  );\n                  jsonNode.content[0].content[0].attrs.id = \"initialBlockId\";\n                  // would the new state with the fix also be the \"initial content\"?\n                  if (\n                    JSON.stringify(jsonNode.content) ===\n                    JSON.stringify(initialDoc.toJSON())\n                  ) {\n                    // yes, apply the fix\n                    tr.setNodeMarkup(pos, undefined, {\n                      ...node.attrs,\n                      [attributeName]: \"initialBlockId\",\n                    });\n                    return;\n                  }\n                }\n\n                tr.setNodeMarkup(pos, undefined, {\n                  ...node.attrs,\n                  [attributeName]: generateID(),\n                });\n                return;\n              }\n              // check if the node doesn’t exist in the old state\n              const { deleted } = mapping.invert().mapResult(pos);\n              const newNode = deleted && duplicatedNewIds.includes(id);\n              if (newNode) {\n                tr.setNodeMarkup(pos, undefined, {\n                  ...node.attrs,\n                  [attributeName]: generateID(),\n                });\n              }\n            });\n          });\n          if (!tr.steps.length) {\n            return;\n          }\n          return tr;\n        },\n        // we register a global drag handler to track the current drag source element\n        view(view) {\n          const handleDragstart = (event: any) => {\n            let _a;\n            dragSourceElement = (\n              (_a = view.dom.parentElement) === null || _a === void 0\n                ? void 0\n                : _a.contains(event.target)\n            )\n              ? view.dom.parentElement\n              : null;\n          };\n          window.addEventListener(\"dragstart\", handleDragstart);\n          return {\n            destroy() {\n              window.removeEventListener(\"dragstart\", handleDragstart);\n            },\n          };\n        },\n        props: {\n          // `handleDOMEvents` is called before `transformPasted`\n          // so we can do some checks before\n          handleDOMEvents: {\n            // only create new ids for dropped content while holding `alt`\n            // or content is dragged from another editor\n            drop: (view, event: any) => {\n              let _a;\n              if (\n                dragSourceElement !== view.dom.parentElement ||\n                ((_a = event.dataTransfer) === null || _a === void 0\n                  ? void 0\n                  : _a.effectAllowed) === \"copy\"\n              ) {\n                dragSourceElement = null;\n                transformPasted = true;\n              }\n              return false;\n            },\n            // always create new ids on pasted content\n            paste: () => {\n              transformPasted = true;\n              return false;\n            },\n          },\n          // we’ll remove ids for every pasted node\n          // so we can create a new one within `appendTransaction`\n          transformPasted: (slice) => {\n            if (!transformPasted) {\n              return slice;\n            }\n            const { types, attributeName } = this.options;\n            const removeId = (fragment: any) => {\n              const list: any[] = [];\n              fragment.forEach((node: any) => {\n                // don’t touch text nodes\n                if (node.isText) {\n                  list.push(node);\n                  return;\n                }\n                // check for any other child nodes\n                if (!types.includes(node.type.name)) {\n                  list.push(node.copy(removeId(node.content)));\n                  return;\n                }\n                // remove id\n                const nodeWithoutId = node.type.create(\n                  {\n                    ...node.attrs,\n                    [attributeName]: null,\n                  },\n                  removeId(node.content),\n                  node.marks\n                );\n                list.push(nodeWithoutId);\n              });\n              return Fragment.from(list);\n            };\n            // reset check\n            transformPasted = false;\n            return new Slice(\n              removeId(slice.content),\n              slice.openStart,\n              slice.openEnd\n            );\n          },\n        },\n      }),\n    ];\n  },\n});\n\nexport { UniqueID as default, UniqueID };\n", "import { Node, NodeType } from \"prosemirror-model\";\n\nexport type BlockInfoWithoutPositions = {\n  id: string;\n  node: Node;\n  contentNode: Node;\n  contentType: NodeType;\n  numChildBlocks: number;\n};\n\nexport type BlockInfo = BlockInfoWithoutPositions & {\n  startPos: number;\n  endPos: number;\n  depth: number;\n};\n\n/**\n * Helper function for `getBlockInfoFromPos`, returns information regarding\n * provided blockContainer node.\n * @param blockContainer The blockContainer node to retrieve info for.\n */\nexport function getBlockInfo(blockContainer: Node): BlockInfoWithoutPositions {\n  const id = blockContainer.attrs[\"id\"];\n  const contentNode = blockContainer.firstChild!;\n  const contentType = contentNode.type;\n  const numChildBlocks =\n    blockContainer.childCount === 2 ? blockContainer.lastChild!.childCount : 0;\n\n  return {\n    id,\n    node: blockContainer,\n    contentNode,\n    contentType,\n    numChildBlocks,\n  };\n}\n\n/**\n * Retrieves information regarding the nearest blockContainer node in a\n * ProseMirror doc, relative to a position.\n * @param doc The ProseMirror doc.\n * @param pos An integer position.\n * @returns A BlockInfo object for the nearest blockContainer node.\n */\nexport function getBlockInfoFromPos(doc: Node, pos: number): BlockInfo {\n  // If the position is outside the outer block group, we need to move it to the\n  // nearest block. This happens when the collaboration plugin is active, where\n  // the selection is placed at the very end of the doc.\n  const outerBlockGroupStartPos = 1;\n  const outerBlockGroupEndPos = doc.nodeSize - 2;\n  if (pos <= outerBlockGroupStartPos) {\n    pos = outerBlockGroupStartPos + 1;\n\n    while (\n      doc.resolve(pos).parent.type.name !== \"blockContainer\" &&\n      pos < outerBlockGroupEndPos\n    ) {\n      pos++;\n    }\n  } else if (pos >= outerBlockGroupEndPos) {\n    pos = outerBlockGroupEndPos - 1;\n\n    while (\n      doc.resolve(pos).parent.type.name !== \"blockContainer\" &&\n      pos > outerBlockGroupStartPos\n    ) {\n      pos--;\n    }\n  }\n\n  // This gets triggered when a node selection on a block is active, i.e. when\n  // you drag and drop a block.\n  if (doc.resolve(pos).parent.type.name === \"blockGroup\") {\n    pos++;\n  }\n\n  const $pos = doc.resolve(pos);\n\n  const maxDepth = $pos.depth;\n  let node = $pos.node(maxDepth);\n  let depth = maxDepth;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (depth < 0) {\n      throw new Error(\n        \"Could not find blockContainer node. This can only happen if the underlying BlockNote schema has been edited.\"\n      );\n    }\n\n    if (node.type.name === \"blockContainer\") {\n      break;\n    }\n\n    depth -= 1;\n    node = $pos.node(depth);\n  }\n\n  const { id, contentNode, contentType, numChildBlocks } = getBlockInfo(node);\n\n  const startPos = $pos.start(depth);\n  const endPos = $pos.end(depth);\n\n  return {\n    id,\n    node,\n    contentNode,\n    contentType,\n    numChildBlocks,\n    startPos,\n    endPos,\n    depth,\n  };\n}\n", "import { Node } from \"@tiptap/core\";\nimport { PropSchema, Props } from \"../propTypes\";\nimport { StyleSchema, Styles } from \"../styles/types\";\n\nexport type CustomInlineContentConfig = {\n  type: string;\n  content: \"styled\" | \"none\"; // | \"plain\"\n  readonly propSchema: PropSchema;\n  // content: \"inline\" | \"none\" | \"table\";\n};\n// InlineContentConfig contains the \"schema\" info about an InlineContent type\n// i.e. what props it supports, what content it supports, etc.\nexport type InlineContentConfig = CustomInlineContentConfig | \"text\" | \"link\";\n\n// InlineContentImplementation contains the \"implementation\" info about an InlineContent element\n// such as the functions / Nodes required to render and / or serialize it\n// @ts-ignore\nexport type InlineContentImplementation<T extends InlineContentConfig> =\n  T extends \"link\" | \"text\"\n    ? undefined\n    : {\n        node: Node;\n      };\n\n// Container for both the config and implementation of InlineContent,\n// and the type of `implementation` is based on that of the config\nexport type InlineContentSpec<T extends InlineContentConfig> = {\n  config: T;\n  implementation: InlineContentImplementation<T>;\n};\n\n// A Schema contains all the types (Configs) supported in an editor\n// The keys are the \"type\" of InlineContent elements\nexport type InlineContentSchema = Record<string, InlineContentConfig>;\n\nexport type InlineContentSpecs = {\n  text: { config: \"text\"; implementation: undefined };\n  link: { config: \"link\"; implementation: undefined };\n} & Record<string, InlineContentSpec<InlineContentConfig>>;\n\nexport type InlineContentSchemaFromSpecs<T extends InlineContentSpecs> = {\n  [K in keyof T]: T[K][\"config\"];\n};\n\nexport type CustomInlineContentFromConfig<\n  I extends CustomInlineContentConfig,\n  S extends StyleSchema\n> = {\n  type: I[\"type\"];\n  props: Props<I[\"propSchema\"]>;\n  content: I[\"content\"] extends \"styled\"\n    ? StyledText<S>[]\n    : I[\"content\"] extends \"plain\"\n    ? string\n    : I[\"content\"] extends \"none\"\n    ? undefined\n    : never;\n};\n\nexport type InlineContentFromConfig<\n  I extends InlineContentConfig,\n  S extends StyleSchema\n> = I extends \"text\"\n  ? StyledText<S>\n  : I extends \"link\"\n  ? Link<S>\n  : I extends CustomInlineContentConfig\n  ? CustomInlineContentFromConfig<I, S>\n  : never;\n\nexport type PartialCustomInlineContentFromConfig<\n  I extends CustomInlineContentConfig,\n  S extends StyleSchema\n> = {\n  type: I[\"type\"];\n  props?: Props<I[\"propSchema\"]>;\n  content?: I[\"content\"] extends \"styled\"\n    ? StyledText<S>[] | string\n    : I[\"content\"] extends \"plain\"\n    ? string\n    : I[\"content\"] extends \"none\"\n    ? undefined\n    : never;\n};\n\nexport type PartialInlineContentFromConfig<\n  I extends InlineContentConfig,\n  S extends StyleSchema\n> = I extends \"text\"\n  ? string | StyledText<S>\n  : I extends \"link\"\n  ? PartialLink<S>\n  : I extends CustomInlineContentConfig\n  ? PartialCustomInlineContentFromConfig<I, S>\n  : never;\n\nexport type StyledText<T extends StyleSchema> = {\n  type: \"text\";\n  text: string;\n  styles: Styles<T>;\n};\n\nexport type Link<T extends StyleSchema> = {\n  type: \"link\";\n  href: string;\n  content: StyledText<T>[];\n};\n\nexport type PartialLink<T extends StyleSchema> = Omit<Link<T>, \"content\"> & {\n  content: string | Link<T>[\"content\"];\n};\n\nexport type InlineContent<\n  I extends InlineContentSchema,\n  T extends StyleSchema\n> = InlineContentFromConfig<I[keyof I], T>;\n\ntype PartialInlineContentElement<\n  I extends InlineContentSchema,\n  T extends StyleSchema\n> = PartialInlineContentFromConfig<I[keyof I], T>;\n\nexport type PartialInlineContent<\n  I extends InlineContentSchema,\n  T extends StyleSchema\n> = PartialInlineContentElement<I, T>[] | string;\n\nexport function isLinkInlineContent<T extends StyleSchema>(\n  content: InlineContent<any, T>\n): content is Link<T> {\n  return content.type === \"link\";\n}\n\nexport function isPartialLinkInlineContent<T extends StyleSchema>(\n  content: PartialInlineContentElement<any, T>\n): content is PartialLink<T> {\n  return typeof content !== \"string\" && content.type === \"link\";\n}\n\nexport function isStyledTextInlineContent<T extends StyleSchema>(\n  content: PartialInlineContentElement<any, T>\n): content is StyledText<T> {\n  return typeof content !== \"string\" && content.type === \"text\";\n}\n", "export class UnreachableCaseError extends Error {\n  constructor(val: never) {\n    super(`Unreachable case: ${val}`);\n  }\n}\n\nexport function assertEmpty(obj: Record<string, never>, throwError = true) {\n  const { \"data-test\": dataTest, ...rest } = obj; // exclude data-test\n\n  if (Object.keys(rest).length > 0 && throwError) {\n    throw new Error(\"Object must be empty \" + JSON.stringify(obj));\n  }\n}\n\n// TODO: change for built-in version of typescript 5.4 after upgrade\nexport type NoInfer<T> = [T][T extends any ? 0 : never];\n", "import { Mark, Node, Schema } from \"@tiptap/pm/model\";\n\nimport UniqueID from \"../../extensions/UniqueID/UniqueID\";\nimport type {\n  BlockSchema,\n  CustomInlineContentConfig,\n  CustomInlineContentFromConfig,\n  InlineContent,\n  InlineContentFromConfig,\n  InlineContentSchema,\n  PartialCustomInlineContentFromConfig,\n  PartialInlineContent,\n  PartialLink,\n  PartialTableContent,\n  StyleSchema,\n  StyledText,\n  Styles,\n  TableContent,\n} from \"../../schema\";\nimport { getBlockInfo } from \"../getBlockInfoFromPos\";\n\nimport type { Block, PartialBlock } from \"../../blocks/defaultBlocks\";\nimport {\n  isLinkInlineContent,\n  isPartialLinkInlineContent,\n  isStyledTextInlineContent,\n} from \"../../schema/inlineContent/types\";\nimport { UnreachableCaseError } from \"../../util/typescript\";\n\n/**\n * Convert a StyledText inline element to a\n * prosemirror text node with the appropriate marks\n */\nfunction styledTextToNodes<T extends StyleSchema>(\n  styledText: StyledText<T>,\n  schema: Schema,\n  styleSchema: T\n): Node[] {\n  const marks: Mark[] = [];\n\n  for (const [style, value] of Object.entries(styledText.styles)) {\n    const config = styleSchema[style];\n    if (!config) {\n      throw new Error(`style ${style} not found in styleSchema`);\n    }\n\n    if (config.propSchema === \"boolean\") {\n      marks.push(schema.mark(style));\n    } else if (config.propSchema === \"string\") {\n      marks.push(schema.mark(style, { stringValue: value }));\n    } else {\n      throw new UnreachableCaseError(config.propSchema);\n    }\n  }\n\n  return (\n    styledText.text\n      // Splits text & line breaks.\n      .split(/(\\n)/g)\n      // If the content ends with a line break, an empty string is added to the\n      // end, which this removes.\n      .filter((text) => text.length > 0)\n      // Converts text & line breaks to nodes.\n      .map((text) => {\n        if (text === \"\\n\") {\n          return schema.nodes[\"hardBreak\"].create();\n        } else {\n          return schema.text(text, marks);\n        }\n      })\n  );\n}\n\n/**\n * Converts a Link inline content element to\n * prosemirror text nodes with the appropriate marks\n */\nfunction linkToNodes(\n  link: PartialLink<StyleSchema>,\n  schema: Schema,\n  styleSchema: StyleSchema\n): Node[] {\n  const linkMark = schema.marks.link.create({\n    href: link.href,\n  });\n\n  return styledTextArrayToNodes(link.content, schema, styleSchema).map(\n    (node) => {\n      if (node.type.name === \"text\") {\n        return node.mark([...node.marks, linkMark]);\n      }\n\n      if (node.type.name === \"hardBreak\") {\n        return node;\n      }\n      throw new Error(\"unexpected node type\");\n    }\n  );\n}\n\n/**\n * Converts an array of StyledText inline content elements to\n * prosemirror text nodes with the appropriate marks\n */\nfunction styledTextArrayToNodes<S extends StyleSchema>(\n  content: string | StyledText<S>[],\n  schema: Schema,\n  styleSchema: S\n): Node[] {\n  const nodes: Node[] = [];\n\n  if (typeof content === \"string\") {\n    nodes.push(\n      ...styledTextToNodes(\n        { type: \"text\", text: content, styles: {} },\n        schema,\n        styleSchema\n      )\n    );\n    return nodes;\n  }\n\n  for (const styledText of content) {\n    nodes.push(...styledTextToNodes(styledText, schema, styleSchema));\n  }\n  return nodes;\n}\n\n/**\n * converts an array of inline content elements to prosemirror nodes\n */\nexport function inlineContentToNodes<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blockContent: PartialInlineContent<I, S>,\n  schema: Schema,\n  styleSchema: S\n): Node[] {\n  const nodes: Node[] = [];\n\n  for (const content of blockContent) {\n    if (typeof content === \"string\") {\n      nodes.push(...styledTextArrayToNodes(content, schema, styleSchema));\n    } else if (isPartialLinkInlineContent(content)) {\n      nodes.push(...linkToNodes(content, schema, styleSchema));\n    } else if (isStyledTextInlineContent(content)) {\n      nodes.push(...styledTextArrayToNodes([content], schema, styleSchema));\n    } else {\n      nodes.push(\n        blockOrInlineContentToContentNode(content, schema, styleSchema)\n      );\n    }\n  }\n  return nodes;\n}\n\n/**\n * converts an array of inline content elements to prosemirror nodes\n */\nexport function tableContentToNodes<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  tableContent: PartialTableContent<I, S>,\n  schema: Schema,\n  styleSchema: StyleSchema\n): Node[] {\n  const rowNodes: Node[] = [];\n\n  for (const row of tableContent.rows) {\n    const columnNodes: Node[] = [];\n    for (const cell of row.cells) {\n      let pNode: Node;\n      if (!cell) {\n        pNode = schema.nodes[\"tableParagraph\"].create({});\n      } else if (typeof cell === \"string\") {\n        pNode = schema.nodes[\"tableParagraph\"].create({}, schema.text(cell));\n      } else {\n        const textNodes = inlineContentToNodes(cell, schema, styleSchema);\n        pNode = schema.nodes[\"tableParagraph\"].create({}, textNodes);\n      }\n\n      const cellNode = schema.nodes[\"tableCell\"].create({}, pNode);\n      columnNodes.push(cellNode);\n    }\n    const rowNode = schema.nodes[\"tableRow\"].create({}, columnNodes);\n    rowNodes.push(rowNode);\n  }\n  return rowNodes;\n}\n\nfunction blockOrInlineContentToContentNode(\n  block:\n    | PartialBlock<any, any, any>\n    | PartialCustomInlineContentFromConfig<any, any>,\n  schema: Schema,\n  styleSchema: StyleSchema\n) {\n  let contentNode: Node;\n  let type = block.type;\n\n  // TODO: needed? came from previous code\n  if (type === undefined) {\n    type = \"paragraph\";\n  }\n\n  if (!schema.nodes[type]) {\n    throw new Error(`node type ${type} not found in schema`);\n  }\n\n  if (!block.content) {\n    contentNode = schema.nodes[type].create(block.props);\n  } else if (typeof block.content === \"string\") {\n    const nodes = inlineContentToNodes([block.content], schema, styleSchema);\n    contentNode = schema.nodes[type].create(block.props, nodes);\n  } else if (Array.isArray(block.content)) {\n    const nodes = inlineContentToNodes(block.content, schema, styleSchema);\n    contentNode = schema.nodes[type].create(block.props, nodes);\n  } else if (block.content.type === \"tableContent\") {\n    const nodes = tableContentToNodes(block.content, schema, styleSchema);\n    contentNode = schema.nodes[type].create(block.props, nodes);\n  } else {\n    throw new UnreachableCaseError(block.content.type);\n  }\n  return contentNode;\n}\n/**\n * Converts a BlockNote block to a TipTap node.\n */\nexport function blockToNode(\n  block: PartialBlock<any, any, any>,\n  schema: Schema,\n  styleSchema: StyleSchema\n) {\n  let id = block.id;\n\n  if (id === undefined) {\n    id = UniqueID.options.generateID();\n  }\n\n  const contentNode = blockOrInlineContentToContentNode(\n    block,\n    schema,\n    styleSchema\n  );\n\n  const children: Node[] = [];\n\n  if (block.children) {\n    for (const child of block.children) {\n      children.push(blockToNode(child, schema, styleSchema));\n    }\n  }\n\n  const groupNode = schema.nodes[\"blockGroup\"].create({}, children);\n\n  return schema.nodes[\"blockContainer\"].create(\n    {\n      id: id,\n      ...block.props,\n    },\n    children.length > 0 ? [contentNode, groupNode] : contentNode\n  );\n}\n\n/**\n * Converts an internal (prosemirror) table node contentto a BlockNote Tablecontent\n */\nfunction contentNodeToTableContent<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(contentNode: Node, inlineContentSchema: I, styleSchema: S) {\n  const ret: TableContent<I, S> = {\n    type: \"tableContent\",\n    rows: [],\n  };\n\n  contentNode.content.forEach((rowNode) => {\n    const row: TableContent<I, S>[\"rows\"][0] = {\n      cells: [],\n    };\n\n    rowNode.content.forEach((cellNode) => {\n      row.cells.push(\n        contentNodeToInlineContent(\n          cellNode.firstChild!,\n          inlineContentSchema,\n          styleSchema\n        )\n      );\n    });\n\n    ret.rows.push(row);\n  });\n\n  return ret;\n}\n\n/**\n * Converts an internal (prosemirror) content node to a BlockNote InlineContent array.\n */\nexport function contentNodeToInlineContent<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(contentNode: Node, inlineContentSchema: I, styleSchema: S) {\n  const content: InlineContent<any, S>[] = [];\n  let currentContent: InlineContent<any, S> | undefined = undefined;\n\n  // Most of the logic below is for handling links because in ProseMirror links are marks\n  // while in BlockNote links are a type of inline content\n  contentNode.content.forEach((node) => {\n    // hardBreak nodes do not have an InlineContent equivalent, instead we\n    // add a newline to the previous node.\n    if (node.type.name === \"hardBreak\") {\n      if (currentContent) {\n        // Current content exists.\n        if (isStyledTextInlineContent(currentContent)) {\n          // Current content is text.\n          currentContent.text += \"\\n\";\n        } else if (isLinkInlineContent(currentContent)) {\n          // Current content is a link.\n          currentContent.content[currentContent.content.length - 1].text +=\n            \"\\n\";\n        } else {\n          throw new Error(\"unexpected\");\n        }\n      } else {\n        // Current content does not exist.\n        currentContent = {\n          type: \"text\",\n          text: \"\\n\",\n          styles: {},\n        };\n      }\n\n      return;\n    }\n\n    if (\n      node.type.name !== \"link\" &&\n      node.type.name !== \"text\" &&\n      inlineContentSchema[node.type.name]\n    ) {\n      if (currentContent) {\n        content.push(currentContent);\n        currentContent = undefined;\n      }\n\n      content.push(\n        nodeToCustomInlineContent(node, inlineContentSchema, styleSchema)\n      );\n\n      return;\n    }\n\n    const styles: Styles<S> = {};\n    let linkMark: Mark | undefined;\n\n    for (const mark of node.marks) {\n      if (mark.type.name === \"link\") {\n        linkMark = mark;\n      } else {\n        const config = styleSchema[mark.type.name];\n        if (!config) {\n          throw new Error(`style ${mark.type.name} not found in styleSchema`);\n        }\n        if (config.propSchema === \"boolean\") {\n          (styles as any)[config.type] = true;\n        } else if (config.propSchema === \"string\") {\n          (styles as any)[config.type] = mark.attrs.stringValue;\n        } else {\n          throw new UnreachableCaseError(config.propSchema);\n        }\n      }\n    }\n\n    // Parsing links and text.\n    // Current content exists.\n    if (currentContent) {\n      // Current content is text.\n      if (isStyledTextInlineContent(currentContent)) {\n        if (!linkMark) {\n          // Node is text (same type as current content).\n          if (\n            JSON.stringify(currentContent.styles) === JSON.stringify(styles)\n          ) {\n            // Styles are the same.\n            currentContent.text += node.textContent;\n          } else {\n            // Styles are different.\n            content.push(currentContent);\n            currentContent = {\n              type: \"text\",\n              text: node.textContent,\n              styles,\n            };\n          }\n        } else {\n          // Node is a link (different type to current content).\n          content.push(currentContent);\n          currentContent = {\n            type: \"link\",\n            href: linkMark.attrs.href,\n            content: [\n              {\n                type: \"text\",\n                text: node.textContent,\n                styles,\n              },\n            ],\n          };\n        }\n      } else if (isLinkInlineContent(currentContent)) {\n        // Current content is a link.\n        if (linkMark) {\n          // Node is a link (same type as current content).\n          // Link URLs are the same.\n          if (currentContent.href === linkMark.attrs.href) {\n            // Styles are the same.\n            if (\n              JSON.stringify(\n                currentContent.content[currentContent.content.length - 1].styles\n              ) === JSON.stringify(styles)\n            ) {\n              currentContent.content[currentContent.content.length - 1].text +=\n                node.textContent;\n            } else {\n              // Styles are different.\n              currentContent.content.push({\n                type: \"text\",\n                text: node.textContent,\n                styles,\n              });\n            }\n          } else {\n            // Link URLs are different.\n            content.push(currentContent);\n            currentContent = {\n              type: \"link\",\n              href: linkMark.attrs.href,\n              content: [\n                {\n                  type: \"text\",\n                  text: node.textContent,\n                  styles,\n                },\n              ],\n            };\n          }\n        } else {\n          // Node is text (different type to current content).\n          content.push(currentContent);\n          currentContent = {\n            type: \"text\",\n            text: node.textContent,\n            styles,\n          };\n        }\n      } else {\n        // TODO\n      }\n    }\n    // Current content does not exist.\n    else {\n      // Node is text.\n      if (!linkMark) {\n        currentContent = {\n          type: \"text\",\n          text: node.textContent,\n          styles,\n        };\n      }\n      // Node is a link.\n      else {\n        currentContent = {\n          type: \"link\",\n          href: linkMark.attrs.href,\n          content: [\n            {\n              type: \"text\",\n              text: node.textContent,\n              styles,\n            },\n          ],\n        };\n      }\n    }\n  });\n\n  if (currentContent) {\n    content.push(currentContent);\n  }\n\n  return content as InlineContent<I, S>[];\n}\n\nexport function nodeToCustomInlineContent<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(node: Node, inlineContentSchema: I, styleSchema: S): InlineContent<I, S> {\n  if (node.type.name === \"text\" || node.type.name === \"link\") {\n    throw new Error(\"unexpected\");\n  }\n  const props: any = {};\n  const icConfig = inlineContentSchema[\n    node.type.name\n  ] as CustomInlineContentConfig;\n  for (const [attr, value] of Object.entries(node.attrs)) {\n    if (!icConfig) {\n      throw Error(\"ic node is of an unrecognized type: \" + node.type.name);\n    }\n\n    const propSchema = icConfig.propSchema;\n\n    if (attr in propSchema) {\n      props[attr] = value;\n    }\n  }\n\n  let content: CustomInlineContentFromConfig<any, any>[\"content\"];\n\n  if (icConfig.content === \"styled\") {\n    content = contentNodeToInlineContent(\n      node,\n      inlineContentSchema,\n      styleSchema\n    ) as any; // TODO: is this safe? could we have Links here that are undesired?\n  } else {\n    content = undefined;\n  }\n\n  const ic = {\n    type: node.type.name,\n    props,\n    content,\n  } as InlineContentFromConfig<I[keyof I], S>;\n  return ic;\n}\n\n/**\n * Convert a TipTap node to a BlockNote block.\n */\nexport function nodeToBlock<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  node: Node,\n  blockSchema: BSchema,\n  inlineContentSchema: I,\n  styleSchema: S,\n  blockCache?: WeakMap<Node, Block<BSchema, I, S>>\n): Block<BSchema, I, S> {\n  if (node.type.name !== \"blockContainer\") {\n    throw Error(\n      \"Node must be of type blockContainer, but is of type\" +\n        node.type.name +\n        \".\"\n    );\n  }\n\n  const cachedBlock = blockCache?.get(node);\n\n  if (cachedBlock) {\n    return cachedBlock;\n  }\n\n  const blockInfo = getBlockInfo(node);\n\n  let id = blockInfo.id;\n\n  // Only used for blocks converted from other formats.\n  if (id === null) {\n    id = UniqueID.options.generateID();\n  }\n\n  const props: any = {};\n  for (const [attr, value] of Object.entries({\n    ...node.attrs,\n    ...blockInfo.contentNode.attrs,\n  })) {\n    const blockSpec = blockSchema[blockInfo.contentType.name];\n\n    if (!blockSpec) {\n      throw Error(\n        \"Block is of an unrecognized type: \" + blockInfo.contentType.name\n      );\n    }\n\n    const propSchema = blockSpec.propSchema;\n\n    if (attr in propSchema) {\n      props[attr] = value;\n    }\n  }\n\n  const blockConfig = blockSchema[blockInfo.contentType.name];\n\n  const children: Block<BSchema, I, S>[] = [];\n  for (let i = 0; i < blockInfo.numChildBlocks; i++) {\n    children.push(\n      nodeToBlock(\n        node.lastChild!.child(i),\n        blockSchema,\n        inlineContentSchema,\n        styleSchema,\n        blockCache\n      )\n    );\n  }\n\n  let content: Block<any, any, any>[\"content\"];\n\n  if (blockConfig.content === \"inline\") {\n    content = contentNodeToInlineContent(\n      blockInfo.contentNode,\n      inlineContentSchema,\n      styleSchema\n    );\n  } else if (blockConfig.content === \"table\") {\n    content = contentNodeToTableContent(\n      blockInfo.contentNode,\n      inlineContentSchema,\n      styleSchema\n    );\n  } else if (blockConfig.content === \"none\") {\n    content = undefined;\n  } else {\n    throw new UnreachableCaseError(blockConfig.content);\n  }\n\n  const block = {\n    id,\n    type: blockConfig.type,\n    props,\n    content,\n    children,\n  } as Block<BSchema, I, S>;\n\n  blockCache?.set(node, block);\n\n  return block;\n}\n", "import { DOMSerializer, Fragment, Node } from \"prosemirror-model\";\n\nimport type { BlockNoteEditor } from \"../../../../editor/BlockNoteEditor\";\nimport {\n  BlockSchema,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../../../../schema\";\nimport { nodeToBlock } from \"../../../nodeConversions/nodeConversions\";\n\nfunction doc(options: { document?: Document }) {\n  return options.document || window.document;\n}\n\n// Used to implement `serializeNodeInner` for the `internalHTMLSerializer` and\n// `externalHTMLExporter`. Changes how the content of `blockContainer` nodes is\n// serialized vs the default `DOMSerializer` implementation. For the\n// `blockContent` node, the `toInternalHTML` or `toExternalHTML` function of its\n// corresponding block is used for serialization instead of the node's\n// `renderHTML` method.\nexport const serializeNodeInner = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  node: Node,\n  options: { document?: Document },\n  serializer: DOMSerializer,\n  editor: BlockNoteEditor<BSchema, I, S>,\n  toExternalHTML: boolean\n) => {\n  if (!serializer.nodes[node.type.name]) {\n    throw new Error(\"Serializer is missing a node type: \" + node.type.name);\n  }\n\n  const { dom, contentDOM } = DOMSerializer.renderSpec(\n    doc(options),\n    serializer.nodes[node.type.name](node)\n  );\n\n  if (contentDOM) {\n    if (node.isLeaf) {\n      throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n    }\n\n    // Handles converting `blockContainer` nodes to HTML.\n    if (node.type.name === \"blockContainer\") {\n      const blockContentNode =\n        node.childCount > 0 &&\n        node.firstChild!.type.spec.group === \"blockContent\"\n          ? node.firstChild!\n          : undefined;\n      const blockGroupNode =\n        node.childCount > 0 && node.lastChild!.type.spec.group === \"blockGroup\"\n          ? node.lastChild!\n          : undefined;\n\n      // Converts `blockContent` node using the custom `blockSpec`'s\n      // `toExternalHTML` or `toInternalHTML` function.\n      // Note: While `blockContainer` nodes should always contain a\n      // `blockContent` node according to the schema, PM Fragments don't always\n      // conform to the schema. This is unintuitive but important as it occurs\n      // when copying only nested blocks.\n      if (blockContentNode !== undefined) {\n        const impl =\n          editor.blockImplementations[blockContentNode.type.name]\n            .implementation;\n        const toHTML = toExternalHTML\n          ? impl.toExternalHTML\n          : impl.toInternalHTML;\n        const blockContent = toHTML(\n          nodeToBlock(\n            node,\n            editor.schema.blockSchema,\n            editor.schema.inlineContentSchema,\n            editor.schema.styleSchema,\n            editor.blockCache\n          ),\n          editor as any\n        );\n\n        // Converts inline nodes in the `blockContent` node's content to HTML\n        // using their `renderHTML` methods.\n        if (blockContent.contentDOM !== undefined) {\n          if (node.isLeaf) {\n            throw new RangeError(\n              \"Content hole not allowed in a leaf node spec\"\n            );\n          }\n\n          blockContent.contentDOM.appendChild(\n            serializer.serializeFragment(blockContentNode.content, options)\n          );\n        }\n\n        contentDOM.appendChild(blockContent.dom);\n      }\n\n      // Converts `blockGroup` node to HTML using its `renderHTML` method.\n      if (blockGroupNode !== undefined) {\n        serializer.serializeFragment(\n          Fragment.from(blockGroupNode),\n          options,\n          contentDOM\n        );\n      }\n    } else {\n      // Converts the node normally, i.e. using its `renderHTML method`.\n      serializer.serializeFragment(node.content, options, contentDOM);\n    }\n  }\n\n  return dom as HTMLElement;\n};\n\n// Used to implement `serializeProseMirrorFragment` for the\n// `internalHTMLSerializer` and `externalHTMLExporter`. Does basically the same\n// thing as `serializer.serializeFragment`, but takes fewer arguments and\n// returns a string instead, to make it easier to use.\nexport const serializeProseMirrorFragment = (\n  fragment: Fragment,\n  serializer: DOMSerializer,\n  options?: { document?: Document }\n) => {\n  const internalHTML = serializer.serializeFragment(fragment, options);\n  const parent = document.createElement(\"div\");\n  parent.appendChild(internalHTML);\n\n  return parent.innerHTML;\n};\n", "import { Element as HASTElement, Parent as HASTParent } from \"hast\";\nimport { esmDependencies } from \"../../../../util/esmDependencies\";\n\ntype SimplifyBlocksOptions = {\n  orderedListItemBlockTypes: Set<string>;\n  unorderedListItemBlockTypes: Set<string>;\n};\n\n/**\n * Rehype plugin which converts the HTML output string rendered by BlockNote into a simplified structure which better\n * follows HTML standards. It does several things:\n * - Removes all block related div elements, leaving only the actual content inside the block.\n * - Lifts nested blocks to a higher level for all block types that don't represent list items.\n * - Wraps blocks which represent list items in corresponding ul/ol HTML elements and restructures them to comply\n * with HTML list structure.\n * @param options Options for specifying which block types represent ordered and unordered list items.\n */\nexport function simplifyBlocks(options: SimplifyBlocksOptions) {\n  const deps = esmDependencies;\n\n  if (!deps) {\n    throw new Error(\n      \"simplifyBlocks requires ESM dependencies to be initialized\"\n    );\n  }\n\n  const listItemBlockTypes = new Set<string>([\n    ...options.orderedListItemBlockTypes,\n    ...options.unorderedListItemBlockTypes,\n  ]);\n\n  const simplifyBlocksHelper = (tree: HASTParent) => {\n    // Checks whether blocks in the tree are wrapped by a parent `blockGroup`\n    // element, in which case the `blockGroup`'s children are lifted out, and it\n    // is removed.\n    if (\n      tree.children.length === 1 &&\n      (tree.children[0] as HASTElement).properties?.[\"dataNodeType\"] ===\n        \"blockGroup\"\n    ) {\n      const blockGroup = tree.children[0] as HASTElement;\n      tree.children.pop();\n      tree.children.push(...blockGroup.children);\n    }\n\n    let numChildElements = tree.children.length;\n    let activeList: HASTElement | undefined;\n\n    for (let i = 0; i < numChildElements; i++) {\n      const blockOuter = tree.children[i] as HASTElement;\n      const blockContainer = blockOuter.children[0] as HASTElement;\n      const blockContent = blockContainer.children.find((child) => {\n        const properties = (child as HASTElement).properties;\n        const classNames = properties?.[\"className\"] as string[] | undefined;\n\n        return classNames?.includes(\"bn-block-content\");\n      }) as HASTElement | undefined;\n      const blockGroup = blockContainer.children.find((child) => {\n        const properties = (child as HASTElement).properties;\n        const classNames = properties?.[\"className\"] as string[] | undefined;\n\n        return classNames?.includes(\"bn-block-group\");\n      }) as HASTElement | undefined;\n\n      // When the selection starts in a nested block, the Fragment from it omits\n      // the `blockContent` node of the parent `blockContainer` if it's not also\n      // included in the selection. This is because ProseMirror preserves the\n      // nesting hierarchy of the nested nodes, even if their ancestors aren't\n      // fully selected. In this case, we just lift the child `blockContainer`\n      // nodes up.\n      // NOTE: This only happens for the first `blockContainer`, since to get to\n      // any nested blocks later in the document, the selection must also\n      // include their parents.\n      if (!blockContent) {\n        tree.children.splice(i, 1, ...blockGroup!.children);\n        simplifyBlocksHelper(tree);\n\n        return;\n      }\n\n      const isListItemBlock = listItemBlockTypes.has(\n        blockContent.properties![\"dataContentType\"] as string\n      );\n\n      const listItemBlockType = isListItemBlock\n        ? options.orderedListItemBlockTypes.has(\n            blockContent.properties![\"dataContentType\"] as string\n          )\n          ? \"ol\"\n          : \"ul\"\n        : null;\n\n      // Plugin runs recursively to process nested blocks.\n      if (blockGroup) {\n        simplifyBlocksHelper(blockGroup);\n      }\n\n      // Checks that there is an active list, but the block can't be added to it as it's of a different type.\n      if (activeList && activeList.tagName !== listItemBlockType) {\n        // Blocks that were copied into the list are removed and the list is inserted in their place.\n        tree.children.splice(\n          i - activeList.children.length,\n          activeList.children.length,\n          activeList\n        );\n\n        // Updates the current index and number of child elements.\n        const numElementsRemoved = activeList.children.length - 1;\n        i -= numElementsRemoved;\n        numChildElements -= numElementsRemoved;\n\n        activeList = undefined;\n      }\n\n      // Checks if the block represents a list item.\n      if (isListItemBlock) {\n        // Checks if a list isn't already active. We don't have to check if the block and the list are of the same\n        // type as this was already done earlier.\n        if (!activeList) {\n          // Creates a new list element to represent an active list.\n          activeList = deps.hastUtilFromDom.fromDom(\n            document.createElement(listItemBlockType!)\n          ) as HASTElement;\n        }\n\n        // Creates a new list item element to represent the block.\n        const listItemElement = deps.hastUtilFromDom.fromDom(\n          document.createElement(\"li\")\n        ) as HASTElement;\n\n        // Adds only the content inside the block to the active list.\n        listItemElement.children.push(...blockContent.children);\n        // Nested blocks have already been processed in the recursive function call, so the resulting elements are\n        // also added to the active list.\n        if (blockGroup) {\n          listItemElement.children.push(...blockGroup.children);\n        }\n\n        // Adds the list item representing the block to the active list.\n        activeList.children.push(listItemElement);\n      } else if (blockGroup) {\n        // Lifts all children out of the current block, as only list items should allow nesting.\n        tree.children.splice(i + 1, 0, ...blockGroup.children);\n        // Replaces the block with only the content inside it.\n        tree.children[i] = blockContent.children[0];\n\n        // Updates the current index and number of child elements.\n        const numElementsAdded = blockGroup.children.length;\n        i += numElementsAdded;\n        numChildElements += numElementsAdded;\n      } else {\n        // Replaces the block with only the content inside it.\n        tree.children[i] = blockContent.children[0];\n      }\n    }\n\n    // Since the active list is only inserted after encountering a block which can't be added to it, there are cases\n    // where it remains un-inserted after processing all blocks, which are handled here.\n    if (activeList) {\n      tree.children.splice(\n        numChildElements - activeList.children.length,\n        activeList.children.length,\n        activeList\n      );\n    }\n  };\n\n  return simplifyBlocksHelper;\n}\n", "import { DOMSerializer, Fragment, Node, Schema } from \"prosemirror-model\";\n\nimport { PartialBlock } from \"../../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport { esmDependencies } from \"../../../util/esmDependencies\";\nimport { blockToNode } from \"../../nodeConversions/nodeConversions\";\nimport {\n  serializeNodeInner,\n  serializeProseMirrorFragment,\n} from \"./util/sharedHTMLConversion\";\nimport { simplifyBlocks } from \"./util/simplifyBlocksRehypePlugin\";\n\n// Used to export BlockNote blocks and ProseMirror nodes to HTML for use outside\n// the editor. Blocks are exported using the `toExternalHTML` method in their\n// `blockSpec`, or `toInternalHTML` if `toExternalHTML` is not defined.\n//\n// The HTML created by this serializer is different to what's rendered by the\n// editor to the DOM. This also means that data is likely to be lost when\n// converting back to original blocks. The differences in the output HTML are:\n// 1. It doesn't include the `blockGroup` and `blockContainer` wrappers meaning\n// that nesting is not preserved for non-list-item blocks.\n// 2. `li` items in the output HTML are wrapped in `ul` or `ol` elements.\n// 3. While nesting for list items is preserved, other types of blocks nested\n// inside a list are un-nested and a new list is created after them.\n// 4. The HTML is wrapped in a single `div` element.\n//\n// The serializer has 2 main methods:\n// `exportBlocks`: Exports an array of blocks to HTML.\n// `exportFragment`: Exports a ProseMirror fragment to HTML. This is mostly\n// useful if you want to export a selection which may not start/end at the\n// start/end of a block.\nexport interface ExternalHTMLExporter<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> {\n  exportBlocks: (\n    blocks: PartialBlock<BSchema, I, S>[],\n    options: { document?: Document }\n  ) => string;\n  exportProseMirrorFragment: (\n    fragment: Fragment,\n    options: { document?: Document }\n  ) => string;\n}\n\n// Needs to be sync because it's used in drag handler event (SideMenuPlugin)\n// Ideally, call `await initializeESMDependencies()` before calling this function\nexport const createExternalHTMLExporter = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  schema: Schema,\n  editor: BlockNoteEditor<BSchema, I, S>\n): ExternalHTMLExporter<BSchema, I, S> => {\n  const deps = esmDependencies;\n\n  if (!deps) {\n    throw new Error(\n      \"External HTML exporter requires ESM dependencies to be initialized\"\n    );\n  }\n\n  const serializer = DOMSerializer.fromSchema(schema) as DOMSerializer & {\n    serializeNodeInner: (\n      node: Node,\n      options: { document?: Document }\n    ) => HTMLElement;\n    exportProseMirrorFragment: (\n      fragment: Fragment,\n      options: { document?: Document }\n    ) => string;\n    exportBlocks: (\n      blocks: PartialBlock<BSchema, I, S>[],\n      options: { document?: Document }\n    ) => string;\n  };\n\n  serializer.serializeNodeInner = (\n    node: Node,\n    options: { document?: Document }\n  ) => serializeNodeInner(node, options, serializer, editor, true);\n\n  // Like the `internalHTMLSerializer`, also uses `serializeProseMirrorFragment`\n  // but additionally runs it through the `simplifyBlocks` rehype plugin to\n  // convert the internal HTML to external.\n  serializer.exportProseMirrorFragment = (fragment, options) => {\n    const externalHTML = deps.unified\n      .unified()\n      .use(deps.rehypeParse.default, { fragment: true })\n      .use(simplifyBlocks, {\n        orderedListItemBlockTypes: new Set<string>([\"numberedListItem\"]),\n        unorderedListItemBlockTypes: new Set<string>([\n          \"bulletListItem\",\n          \"checkListItem\",\n        ]),\n      })\n      .use(deps.rehypeStringify.default)\n      .processSync(serializeProseMirrorFragment(fragment, serializer, options));\n\n    return externalHTML.value as string;\n  };\n\n  serializer.exportBlocks = (\n    blocks: PartialBlock<BSchema, I, S>[],\n    options\n  ) => {\n    const nodes = blocks.map((block) =>\n      blockToNode(block, schema, editor.schema.styleSchema)\n    );\n    const blockGroup = schema.nodes[\"blockGroup\"].create(null, nodes);\n\n    return serializer.exportProseMirrorFragment(\n      Fragment.from(blockGroup),\n      options\n    );\n  };\n\n  return serializer;\n};\n", "import { DOMSerializer, Fragment, Node, Schema } from \"prosemirror-model\";\nimport { PartialBlock } from \"../../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport { blockToNode } from \"../../nodeConversions/nodeConversions\";\nimport {\n  serializeNodeInner,\n  serializeProseMirrorFragment,\n} from \"./util/sharedHTMLConversion\";\n\n// Used to serialize BlockNote blocks and ProseMirror nodes to HTML without\n// losing data. Blocks are exported using the `toInternalHTML` method in their\n// `blockSpec`.\n//\n// The HTML created by this serializer is the same as what's rendered by the\n// editor to the DOM. This means that it retains the same structure as the\n// editor, including the `blockGroup` and `blockContainer` wrappers. This also\n// means that it can be converted back to the original blocks without any data\n// loss.\n//\n// The serializer has 2 main methods:\n// `serializeFragment`: Serializes a ProseMirror fragment to HTML. This is\n// mostly useful if you want to serialize a selection which may not start/end at\n// the start/end of a block.\n// `serializeBlocks`: Serializes an array of blocks to HTML.\nexport interface InternalHTMLSerializer<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> {\n  // TODO: Ideally we would expand the BlockNote API to support partial\n  //  selections so we don't need this.\n  serializeProseMirrorFragment: (\n    fragment: Fragment,\n    options: { document?: Document }\n  ) => string;\n  serializeBlocks: (\n    blocks: PartialBlock<BSchema, I, S>[],\n    options: { document?: Document }\n  ) => string;\n}\n\nexport const createInternalHTMLSerializer = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  schema: Schema,\n  editor: BlockNoteEditor<BSchema, I, S>\n): InternalHTMLSerializer<BSchema, I, S> => {\n  const serializer = DOMSerializer.fromSchema(schema) as DOMSerializer & {\n    serializeNodeInner: (\n      node: Node,\n      options: { document?: Document }\n    ) => HTMLElement;\n    serializeBlocks: (\n      blocks: PartialBlock<BSchema, I, S>[],\n      options: { document?: Document }\n    ) => string;\n    serializeProseMirrorFragment: (\n      fragment: Fragment,\n      options?: { document?: Document | undefined } | undefined,\n      target?: HTMLElement | DocumentFragment | undefined\n    ) => string;\n  };\n\n  serializer.serializeNodeInner = (\n    node: Node,\n    options: { document?: Document }\n  ) => serializeNodeInner(node, options, serializer, editor, false);\n\n  serializer.serializeProseMirrorFragment = (fragment: Fragment, options) =>\n    serializeProseMirrorFragment(fragment, serializer, options);\n\n  serializer.serializeBlocks = (\n    blocks: PartialBlock<BSchema, I, S>[],\n    options\n  ) => {\n    const nodes = blocks.map((block) =>\n      blockToNode(block, schema, editor.schema.styleSchema)\n    );\n    const blockGroup = schema.nodes[\"blockGroup\"].create(null, nodes);\n\n    return serializer.serializeProseMirrorFragment(\n      Fragment.from(blockGroup),\n      options\n    );\n  };\n\n  return serializer;\n};\n", "import { Editor } from \"@tiptap/core\";\nimport { getBlockInfoFromPos } from \"./getBlockInfoFromPos\";\n\n// Used to get the content type of the block that the text cursor is in. This is\n// a band-aid fix to prevent input rules and keyboard shortcuts from triggering\n// in tables, but really those should be extended to work with block selections.\nexport const getCurrentBlockContentType = (editor: Editor) => {\n  const { contentType } = getBlockInfoFromPos(\n    editor.state.doc,\n    editor.state.selection.from\n  );\n\n  return contentType.spec.content;\n};\n", "export const isAppleOS = () =>\n  typeof navigator !== \"undefined\" &&\n  (/Mac/.test(navigator.platform) ||\n    (/AppleWebKit/.test(navigator.userAgent) &&\n      /Mobile\\/\\w+/.test(navigator.userAgent)));\n\nexport function formatKeyboardShortcut(shortcut: string, ctrlText = \"Ctrl\") {\n  if (isAppleOS()) {\n    return shortcut.replace(\"Mod\", \"⌘\");\n  } else {\n    return shortcut.replace(\"Mod\", ctrlText);\n  }\n}\n\nexport function mergeCSSClasses(...classes: string[]) {\n  return classes.filter((c) => c).join(\" \");\n}\n\nexport const isSafari = () =>\n  /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n", "import { blockToNode } from \"../api/nodeConversions/nodeConversions\";\nimport type { BlockNoteEditor } from \"../editor/BlockNoteEditor\";\nimport type {\n  BlockNoDefaults,\n  BlockSchema,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../schema\";\nimport { mergeCSSClasses } from \"../util/browser\";\n\n// Function that creates a ProseMirror `DOMOutputSpec` for a default block.\n// Since all default blocks have the same structure (`blockContent` div with a\n// `inlineContent` element inside), this function only needs the block's name\n// for the `data-content-type` attribute of the `blockContent` element and the\n// HTML tag of the `inlineContent` element, as well as any HTML attributes to\n// add to those.\nexport function createDefaultBlockDOMOutputSpec(\n  blockName: string,\n  htmlTag: string,\n  blockContentHTMLAttributes: Record<string, string>,\n  inlineContentHTMLAttributes: Record<string, string>\n) {\n  const blockContent = document.createElement(\"div\");\n  blockContent.className = mergeCSSClasses(\n    \"bn-block-content\",\n    blockContentHTMLAttributes.class\n  );\n  blockContent.setAttribute(\"data-content-type\", blockName);\n  for (const [attribute, value] of Object.entries(blockContentHTMLAttributes)) {\n    if (attribute !== \"class\") {\n      blockContent.setAttribute(attribute, value);\n    }\n  }\n\n  const inlineContent = document.createElement(htmlTag);\n  inlineContent.className = mergeCSSClasses(\n    \"bn-inline-content\",\n    inlineContentHTMLAttributes.class\n  );\n  for (const [attribute, value] of Object.entries(\n    inlineContentHTMLAttributes\n  )) {\n    if (attribute !== \"class\") {\n      inlineContent.setAttribute(attribute, value);\n    }\n  }\n\n  blockContent.appendChild(inlineContent);\n\n  return {\n    dom: blockContent,\n    contentDOM: inlineContent,\n  };\n}\n\n// Function used to convert default blocks to HTML. It uses the corresponding\n// node's `renderHTML` method to do the conversion by using a default\n// `DOMSerializer`.\nexport const defaultBlockToHTML = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  block: BlockNoDefaults<BSchema, I, S>,\n  editor: BlockNoteEditor<BSchema, I, S>\n): {\n  dom: HTMLElement;\n  contentDOM?: HTMLElement;\n} => {\n  const node = blockToNode(block, editor.pmSchema, editor.schema.styleSchema)\n    .firstChild!;\n  const toDOM = editor.pmSchema.nodes[node.type.name].spec.toDOM;\n\n  if (toDOM === undefined) {\n    throw new Error(\n      \"This block has no default HTML serialization as its corresponding TipTap node doesn't implement `renderHTML`.\"\n    );\n  }\n\n  const renderSpec = toDOM(node);\n\n  if (typeof renderSpec !== \"object\" || !(\"dom\" in renderSpec)) {\n    throw new Error(\n      \"Cannot use this block's default HTML serialization as its corresponding TipTap node's `renderHTML` function does not return an object with the `dom` property.\"\n    );\n  }\n\n  return renderSpec as {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n  };\n};\n", "import type { Props, PropSchema } from \"../schema\";\n\n// TODO: this system should probably be moved / refactored.\n// The dependency from schema on this file doesn't make sense\n\nexport const defaultProps = {\n  backgroundColor: {\n    default: \"default\" as const,\n  },\n  textColor: {\n    default: \"default\" as const,\n  },\n  textAlignment: {\n    default: \"left\" as const,\n    values: [\"left\", \"center\", \"right\", \"justify\"] as const,\n  },\n} satisfies PropSchema;\n\nexport type DefaultProps = Props<typeof defaultProps>;\n\n// Default props which are set on `blockContainer` nodes rather than\n// `blockContent` nodes. Ensures that they are not redundantly added to\n// a custom block's TipTap node attributes.\nexport const inheritedProps = [\"backgroundColor\", \"textColor\"];\n", "export function camelToDataKebab(str: string): string {\n  return \"data-\" + str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nexport function filenameFromURL(url: string): string {\n  const parts = url.split(\"/\");\n  if (\n    !parts.length || // invalid?\n    parts[parts.length - 1] === \"\" // for example, URL ends in a directory-like trailing slash\n  ) {\n    // in this case just return the original url\n    return url;\n  }\n  return parts[parts.length - 1];\n}\n", "import {\n  Attribute,\n  Attributes,\n  Editor,\n  Extension,\n  Node,\n  NodeConfig,\n} from \"@tiptap/core\";\nimport { defaultBlockToHTML } from \"../../blocks/defaultBlockHelpers\";\nimport { inheritedProps } from \"../../blocks/defaultProps\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { mergeCSSClasses } from \"../../util/browser\";\nimport { camelToDataKebab } from \"../../util/string\";\nimport { InlineContentSchema } from \"../inlineContent/types\";\nimport { PropSchema, Props } from \"../propTypes\";\nimport { StyleSchema } from \"../styles/types\";\nimport {\n  BlockConfig,\n  BlockSchemaFromSpecs,\n  BlockSchemaWithBlock,\n  BlockSpec,\n  BlockSpecs,\n  SpecificBlock,\n  TiptapBlockImplementation,\n} from \"./types\";\n\n// Function that uses the 'propSchema' of a blockConfig to create a TipTap\n// node's `addAttributes` property.\n// TODO: extract function\nexport function propsToAttributes(propSchema: PropSchema): Attributes {\n  const tiptapAttributes: Record<string, Attribute> = {};\n\n  Object.entries(propSchema)\n    .filter(([name, _spec]) => !inheritedProps.includes(name))\n    .forEach(([name, spec]) => {\n      tiptapAttributes[name] = {\n        default: spec.default,\n        keepOnSplit: true,\n        // Props are displayed in kebab-case as HTML attributes. If a prop's\n        // value is the same as its default, we don't display an HTML\n        // attribute for it.\n        parseHTML: (element) => {\n          const value = element.getAttribute(camelToDataKebab(name));\n\n          if (value === null) {\n            return null;\n          }\n\n          if (typeof spec.default === \"boolean\") {\n            if (value === \"true\") {\n              return true;\n            }\n\n            if (value === \"false\") {\n              return false;\n            }\n\n            return null;\n          }\n\n          if (typeof spec.default === \"number\") {\n            const asNumber = parseFloat(value);\n            const isNumeric =\n              !Number.isNaN(asNumber) && Number.isFinite(asNumber);\n\n            if (isNumeric) {\n              return asNumber;\n            }\n\n            return null;\n          }\n\n          return value;\n        },\n        renderHTML: (attributes) =>\n          attributes[name] !== spec.default\n            ? {\n                [camelToDataKebab(name)]: attributes[name],\n              }\n            : {},\n      };\n    });\n\n  return tiptapAttributes;\n}\n\n// Used to figure out which block should be rendered. This block is then used to\n// create the node view.\nexport function getBlockFromPos<\n  BType extends string,\n  Config extends BlockConfig,\n  BSchema extends BlockSchemaWithBlock<BType, Config>,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  getPos: (() => number) | boolean,\n  editor: BlockNoteEditor<BSchema, I, S>,\n  tipTapEditor: Editor,\n  type: BType\n) {\n  // Gets position of the node\n  if (typeof getPos === \"boolean\") {\n    throw new Error(\n      \"Cannot find node position as getPos is a boolean, not a function.\"\n    );\n  }\n  const pos = getPos();\n  // Gets parent blockContainer node\n  const blockContainer = tipTapEditor.state.doc.resolve(pos!).node();\n  // Gets block identifier\n  const blockIdentifier = blockContainer.attrs.id;\n\n  if (!blockIdentifier) {\n    throw new Error(\"Block doesn't have id\");\n  }\n\n  // Gets the block\n  const block = editor.getBlock(blockIdentifier)! as SpecificBlock<\n    BSchema,\n    BType,\n    I,\n    S\n  >;\n  if (block.type !== type) {\n    throw new Error(\"Block type does not match\");\n  }\n\n  return block;\n}\n\n// Function that wraps the `dom` element returned from 'blockConfig.render' in a\n// `blockContent` div, which contains the block type and props as HTML\n// attributes. If `blockConfig.render` also returns a `contentDOM`, it also adds\n// an `inlineContent` class to it.\nexport function wrapInBlockStructure<\n  BType extends string,\n  PSchema extends PropSchema\n>(\n  element: {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n    destroy?: () => void;\n  },\n  blockType: BType,\n  blockProps: Props<PSchema>,\n  propSchema: PSchema,\n  isFileBlock = false,\n  domAttributes?: Record<string, string>\n): {\n  dom: HTMLElement;\n  contentDOM?: HTMLElement;\n  destroy?: () => void;\n} {\n  // Creates `blockContent` element\n  const blockContent = document.createElement(\"div\");\n\n  // Adds custom HTML attributes\n  if (domAttributes !== undefined) {\n    for (const [attr, value] of Object.entries(domAttributes)) {\n      if (attr !== \"class\") {\n        blockContent.setAttribute(attr, value);\n      }\n    }\n  }\n  // Sets blockContent class\n  blockContent.className = mergeCSSClasses(\n    \"bn-block-content\",\n    domAttributes?.class || \"\"\n  );\n  // Sets content type attribute\n  blockContent.setAttribute(\"data-content-type\", blockType);\n  // Adds props as HTML attributes in kebab-case with \"data-\" prefix. Skips props\n  // which are already added as HTML attributes to the parent `blockContent`\n  // element (inheritedProps) and props set to their default values.\n  for (const [prop, value] of Object.entries(blockProps)) {\n    if (!inheritedProps.includes(prop) && value !== propSchema[prop].default) {\n      blockContent.setAttribute(camelToDataKebab(prop), value);\n    }\n  }\n  // Adds file block attribute\n  if (isFileBlock) {\n    blockContent.setAttribute(\"data-file-block\", \"\");\n  }\n\n  blockContent.appendChild(element.dom);\n\n  if (element.contentDOM !== undefined) {\n    element.contentDOM.className = mergeCSSClasses(\n      \"bn-inline-content\",\n      element.contentDOM.className\n    );\n    element.contentDOM.setAttribute(\"data-editable\", \"\");\n  }\n\n  return {\n    ...element,\n    dom: blockContent,\n  };\n}\n\n// Helper type to keep track of the `name` and `content` properties after calling Node.create.\ntype StronglyTypedTipTapNode<\n  Name extends string,\n  Content extends \"inline*\" | \"tableRow+\" | \"\"\n> = Node & { name: Name; config: { content: Content } };\n\nexport function createStronglyTypedTiptapNode<\n  Name extends string,\n  Content extends \"inline*\" | \"tableRow+\" | \"\"\n>(config: NodeConfig & { name: Name; content: Content }) {\n  return Node.create(config) as StronglyTypedTipTapNode<Name, Content>; // force re-typing (should be safe as it's type-checked from the config)\n}\n\n// This helper function helps to instantiate a blockspec with a\n// config and implementation that conform to the type of Config\nexport function createInternalBlockSpec<T extends BlockConfig>(\n  config: T,\n  implementation: TiptapBlockImplementation<\n    T,\n    any,\n    InlineContentSchema,\n    StyleSchema\n  >\n) {\n  return {\n    config,\n    implementation,\n  } satisfies BlockSpec<T, any, InlineContentSchema, StyleSchema>;\n}\n\nexport function createBlockSpecFromStronglyTypedTiptapNode<\n  T extends Node,\n  P extends PropSchema\n>(node: T, propSchema: P, requiredExtensions?: Array<Extension | Node>) {\n  return createInternalBlockSpec(\n    {\n      type: node.name as T[\"name\"],\n      content: (node.config.content === \"inline*\"\n        ? \"inline\"\n        : node.config.content === \"tableRow+\"\n        ? \"table\"\n        : \"none\") as T[\"config\"][\"content\"] extends \"inline*\"\n        ? \"inline\"\n        : T[\"config\"][\"content\"] extends \"tableRow+\"\n        ? \"table\"\n        : \"none\",\n      propSchema,\n    },\n    {\n      node,\n      requiredExtensions,\n      toInternalHTML: defaultBlockToHTML,\n      toExternalHTML: defaultBlockToHTML,\n      // parse: () => undefined, // parse rules are in node already\n    }\n  );\n}\n\nexport function getBlockSchemaFromSpecs<T extends BlockSpecs>(specs: T) {\n  return Object.fromEntries(\n    Object.entries(specs).map(([key, value]) => [key, value.config])\n  ) as BlockSchemaFromSpecs<T>;\n}\n", "import { TagParseRule } from \"@tiptap/pm/model\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { InlineContentSchema } from \"../inlineContent/types\";\nimport { StyleSchema } from \"../styles/types\";\nimport {\n  createInternalBlockSpec,\n  createStronglyTypedTiptapNode,\n  getBlockFromPos,\n  propsToAttributes,\n  wrapInBlockStructure,\n} from \"./internal\";\nimport {\n  BlockConfig,\n  BlockFromConfig,\n  BlockSchemaWithBlock,\n  PartialBlockFromConfig,\n} from \"./types\";\n\n// restrict content to \"inline\" and \"none\" only\nexport type CustomBlockConfig = BlockConfig & {\n  content: \"inline\" | \"none\";\n};\n\nexport type CustomBlockImplementation<\n  T extends CustomBlockConfig,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> = {\n  render: (\n    /**\n     * The custom block to render\n     */\n    block: BlockFromConfig<T, I, S>,\n    /**\n     * The BlockNote editor instance\n     * This is typed generically. If you want an editor with your custom schema, you need to\n     * cast it manually, e.g.: `const e = editor as BlockNoteEditor<typeof mySchema>;`\n     */\n    editor: BlockNoteEditor<BlockSchemaWithBlock<T[\"type\"], T>, I, S>\n    // (note) if we want to fix the manual cast, we need to prevent circular references and separate block definition and render implementations\n    // or allow manually passing <BSchema>, but that's not possible without passing the other generics because Typescript doesn't support partial inferred generics\n  ) => {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n    destroy?: () => void;\n  };\n  // Exports block to external HTML. If not defined, the output will be the same\n  // as `render(...).dom`. Used to create clipboard data when pasting outside\n  // BlockNote.\n  // TODO: Maybe can return undefined to ignore when serializing?\n  toExternalHTML?: (\n    block: BlockFromConfig<T, I, S>,\n    editor: BlockNoteEditor<BlockSchemaWithBlock<T[\"type\"], T>, I, S>\n  ) => {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n  };\n\n  parse?: (\n    el: HTMLElement\n  ) => PartialBlockFromConfig<T, I, S>[\"props\"] | undefined;\n};\n\n// Function that uses the 'parse' function of a blockConfig to create a\n// TipTap node's `parseHTML` property. This is only used for parsing content\n// from the clipboard.\nexport function getParseRules(\n  config: BlockConfig,\n  customParseFunction: CustomBlockImplementation<any, any, any>[\"parse\"]\n) {\n  const rules: TagParseRule[] = [\n    {\n      tag: \"[data-content-type=\" + config.type + \"]\",\n      contentElement: \"[data-editable]\",\n    },\n  ];\n\n  if (customParseFunction) {\n    rules.push({\n      tag: \"*\",\n      getAttrs(node: string | HTMLElement) {\n        if (typeof node === \"string\") {\n          return false;\n        }\n\n        const props = customParseFunction?.(node);\n\n        if (props === undefined) {\n          return false;\n        }\n\n        return props;\n      },\n    });\n  }\n  //     getContent(node, schema) {\n  //       const block = blockConfig.parse?.(node as HTMLElement);\n  //\n  //       if (block !== undefined && block.content !== undefined) {\n  //         return Fragment.from(\n  //           typeof block.content === \"string\"\n  //             ? schema.text(block.content)\n  //             : inlineContentToNodes(block.content, schema)\n  //         );\n  //       }\n  //\n  //       return Fragment.empty;\n  //     },\n  //   });\n  // }\n\n  return rules;\n}\n\n// A function to create custom block for API consumers\n// we want to hide the tiptap node from API consumers and provide a simpler API surface instead\nexport function createBlockSpec<\n  T extends CustomBlockConfig,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(blockConfig: T, blockImplementation: CustomBlockImplementation<T, I, S>) {\n  const node = createStronglyTypedTiptapNode({\n    name: blockConfig.type as T[\"type\"],\n    content: (blockConfig.content === \"inline\"\n      ? \"inline*\"\n      : \"\") as T[\"content\"] extends \"inline\" ? \"inline*\" : \"\",\n    group: \"blockContent\",\n    selectable: true,\n\n    addAttributes() {\n      return propsToAttributes(blockConfig.propSchema);\n    },\n\n    parseHTML() {\n      return getParseRules(blockConfig, blockImplementation.parse);\n    },\n\n    renderHTML() {\n      // renderHTML is not really used, as we always use a nodeView, and we use toExternalHTML / toInternalHTML for serialization\n      // There's an edge case when this gets called nevertheless; before the nodeviews have been mounted\n      // this is why we implement it with a temporary placeholder\n      const div = document.createElement(\"div\");\n      div.setAttribute(\"data-tmp-placeholder\", \"true\");\n      return {\n        dom: div,\n      };\n    },\n\n    addNodeView() {\n      return ({ getPos }) => {\n        // Gets the BlockNote editor instance\n        const editor = this.options.editor;\n        // Gets the block\n        const block = getBlockFromPos(\n          getPos,\n          editor,\n          this.editor,\n          blockConfig.type\n        );\n        // Gets the custom HTML attributes for `blockContent` nodes\n        const blockContentDOMAttributes =\n          this.options.domAttributes?.blockContent || {};\n\n        const output = blockImplementation.render(block as any, editor);\n\n        return wrapInBlockStructure(\n          output,\n          block.type,\n          block.props,\n          blockConfig.propSchema,\n          blockContentDOMAttributes\n        );\n      };\n    },\n  });\n\n  if (node.name !== blockConfig.type) {\n    throw new Error(\n      \"Node name does not match block type. This is a bug in BlockNote.\"\n    );\n  }\n\n  return createInternalBlockSpec(blockConfig, {\n    node,\n    toInternalHTML: (block, editor) => {\n      const blockContentDOMAttributes =\n        node.options.domAttributes?.blockContent || {};\n\n      const output = blockImplementation.render(block as any, editor as any);\n\n      return wrapInBlockStructure(\n        output,\n        block.type,\n        block.props,\n        blockConfig.propSchema,\n        blockConfig.isFileBlock,\n        blockContentDOMAttributes\n      );\n    },\n    toExternalHTML: (block, editor) => {\n      const blockContentDOMAttributes =\n        node.options.domAttributes?.blockContent || {};\n\n      let output = blockImplementation.toExternalHTML?.(\n        block as any,\n        editor as any\n      );\n      if (output === undefined) {\n        output = blockImplementation.render(block as any, editor as any);\n      }\n\n      return wrapInBlockStructure(\n        output,\n        block.type,\n        block.props,\n        blockConfig.propSchema,\n        blockContentDOMAttributes\n      );\n    },\n  });\n}\n", "import { KeyboardShortcutCommand, Node } from \"@tiptap/core\";\n\nimport { camelToDataKebab } from \"../../util/string\";\nimport { PropSchema, Props } from \"../propTypes\";\nimport {\n  CustomInlineContentConfig,\n  InlineContentConfig,\n  InlineContentImplementation,\n  InlineContentSchemaFromSpecs,\n  InlineContentSpec,\n  InlineContentSpecs,\n} from \"./types\";\n\n// Function that adds necessary classes and attributes to the `dom` element\n// returned from a custom inline content's 'render' function, to ensure no data\n// is lost on internal copy & paste.\nexport function addInlineContentAttributes<\n  IType extends string,\n  PSchema extends PropSchema\n>(\n  element: {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n  },\n  inlineContentType: IType,\n  inlineContentProps: Props<PSchema>,\n  propSchema: PSchema\n): {\n  dom: HTMLElement;\n  contentDOM?: HTMLElement;\n} {\n  // Sets content type attribute\n  element.dom.setAttribute(\"data-inline-content-type\", inlineContentType);\n  // Adds props as HTML attributes in kebab-case with \"data-\" prefix. Skips props\n  // set to their default values.\n  Object.entries(inlineContentProps)\n    .filter(([prop, value]) => value !== propSchema[prop].default)\n    .map(([prop, value]) => {\n      return [camelToDataKebab(prop), value];\n    })\n    .forEach(([prop, value]) => element.dom.setAttribute(prop, value));\n\n  if (element.contentDOM !== undefined) {\n    element.contentDOM.setAttribute(\"data-editable\", \"\");\n  }\n\n  return element;\n}\n\n// see https://github.com/TypeCellOS/BlockNote/pull/435\nexport function addInlineContentKeyboardShortcuts<\n  T extends CustomInlineContentConfig\n>(\n  config: T\n): {\n  [p: string]: KeyboardShortcutCommand;\n} {\n  return {\n    Backspace: ({ editor }) => {\n      const resolvedPos = editor.state.selection.$from;\n\n      return (\n        editor.state.selection.empty &&\n        resolvedPos.node().type.name === config.type &&\n        resolvedPos.parentOffset === 0\n      );\n    },\n  };\n}\n\n// This helper function helps to instantiate a InlineContentSpec with a\n// config and implementation that conform to the type of Config\nexport function createInternalInlineContentSpec<T extends InlineContentConfig>(\n  config: T,\n  implementation: InlineContentImplementation<T>\n) {\n  return {\n    config,\n    implementation,\n  } satisfies InlineContentSpec<T>;\n}\n\nexport function createInlineContentSpecFromTipTapNode<\n  T extends Node,\n  P extends PropSchema\n>(node: T, propSchema: P) {\n  return createInternalInlineContentSpec(\n    {\n      type: node.name as T[\"name\"],\n      propSchema,\n      content: node.config.content === \"inline*\" ? \"styled\" : \"none\",\n    },\n    {\n      node,\n    }\n  );\n}\n\nexport function getInlineContentSchemaFromSpecs<T extends InlineContentSpecs>(\n  specs: T\n) {\n  return Object.fromEntries(\n    Object.entries(specs).map(([key, value]) => [key, value.config])\n  ) as InlineContentSchemaFromSpecs<T>;\n}\n", "import { Node } from \"@tiptap/core\";\nimport { TagParseRule } from \"@tiptap/pm/model\";\nimport { nodeToCustomInlineContent } from \"../../api/nodeConversions/nodeConversions\";\nimport { propsToAttributes } from \"../blocks/internal\";\nimport { Props } from \"../propTypes\";\nimport { StyleSchema } from \"../styles/types\";\nimport {\n  addInlineContentAttributes,\n  addInlineContentKeyboardShortcuts,\n  createInlineContentSpecFromTipTapNode,\n} from \"./internal\";\nimport {\n  CustomInlineContentConfig,\n  InlineContentConfig,\n  InlineContentFromConfig,\n  InlineContentSpec,\n} from \"./types\";\n\n// TODO: support serialization\n\nexport type CustomInlineContentImplementation<\n  T extends InlineContentConfig,\n  // B extends BlockSchema,\n  // I extends InlineContentSchema,\n  S extends StyleSchema\n> = {\n  render: (\n    /**\n     * The custom inline content to render\n     */\n    inlineContent: InlineContentFromConfig<T, S>\n    /**\n     * The BlockNote editor instance\n     * This is typed generically. If you want an editor with your custom schema, you need to\n     * cast it manually, e.g.: `const e = editor as BlockNoteEditor<typeof mySchema>;`\n     */\n    // editor: BlockNoteEditor<B, I, S>\n    // (note) if we want to fix the manual cast, we need to prevent circular references and separate block definition and render implementations\n    // or allow manually passing <BSchema>, but that's not possible without passing the other generics because Typescript doesn't support partial inferred generics\n  ) => {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n    // destroy?: () => void;\n  };\n};\n\nexport function getInlineContentParseRules(\n  config: CustomInlineContentConfig\n): TagParseRule[] {\n  return [\n    {\n      tag: `[data-inline-content-type=\"${config.type}\"]`,\n      contentElement: (element) => {\n        const htmlElement = element as HTMLElement;\n\n        if (htmlElement.matches(\"[data-editable]\")) {\n          return htmlElement;\n        }\n\n        return htmlElement.querySelector(\"[data-editable]\") || htmlElement;\n      },\n    },\n  ];\n}\n\nexport function createInlineContentSpec<\n  T extends CustomInlineContentConfig,\n  S extends StyleSchema\n>(\n  inlineContentConfig: T,\n  inlineContentImplementation: CustomInlineContentImplementation<T, S>\n): InlineContentSpec<T> {\n  const node = Node.create({\n    name: inlineContentConfig.type,\n    inline: true,\n    group: \"inline\",\n    selectable: inlineContentConfig.content === \"styled\",\n    atom: inlineContentConfig.content === \"none\",\n    content: (inlineContentConfig.content === \"styled\"\n      ? \"inline*\"\n      : \"\") as T[\"content\"] extends \"styled\" ? \"inline*\" : \"\",\n\n    addAttributes() {\n      return propsToAttributes(inlineContentConfig.propSchema);\n    },\n\n    addKeyboardShortcuts() {\n      return addInlineContentKeyboardShortcuts(inlineContentConfig);\n    },\n\n    parseHTML() {\n      return getInlineContentParseRules(inlineContentConfig);\n    },\n\n    renderHTML({ node }) {\n      const editor = this.options.editor;\n\n      const output = inlineContentImplementation.render(\n        nodeToCustomInlineContent(\n          node,\n          editor.schema.inlineContentSchema,\n          editor.schema.styleSchema\n        ) as any as InlineContentFromConfig<T, S> // TODO: fix cast\n      );\n\n      return addInlineContentAttributes(\n        output,\n        inlineContentConfig.type,\n        node.attrs as Props<T[\"propSchema\"]>,\n        inlineContentConfig.propSchema\n      );\n    },\n  });\n\n  return createInlineContentSpecFromTipTapNode(\n    node,\n    inlineContentConfig.propSchema\n  ) as InlineContentSpec<T>; // TODO: fix cast\n}\n", "import { Attributes, Mark } from \"@tiptap/core\";\nimport {\n  StyleConfig,\n  StyleImplementation,\n  StylePropSchema,\n  StyleSchemaFromSpecs,\n  StyleSpec,\n  StyleSpecs,\n} from \"./types\";\n\nexport function stylePropsToAttributes(\n  propSchema: StylePropSchema\n): Attributes {\n  if (propSchema === \"boolean\") {\n    return {};\n  }\n  return {\n    stringValue: {\n      default: undefined,\n      keepOnSplit: true,\n      parseHTML: (element) => element.getAttribute(\"data-value\"),\n      renderHTML: (attributes) =>\n        attributes.stringValue !== undefined\n          ? {\n              \"data-value\": attributes.stringValue,\n            }\n          : {},\n    },\n  };\n}\n\n// Function that adds necessary classes and attributes to the `dom` element\n// returned from a custom style's 'render' function, to ensure no data is lost\n// on internal copy & paste.\nexport function addStyleAttributes<\n  SType extends string,\n  PSchema extends StylePropSchema\n>(\n  element: {\n    dom: HTMLElement;\n    contentDOM?: HTMLElement;\n  },\n  styleType: SType,\n  styleValue: PSchema extends \"boolean\" ? undefined : string,\n  propSchema: PSchema\n): {\n  dom: HTMLElement;\n  contentDOM?: HTMLElement;\n} {\n  // Sets content type attribute\n  element.dom.setAttribute(\"data-style-type\", styleType);\n  // Adds style value as an HTML attribute in kebab-case with \"data-\" prefix, if\n  // the style takes a string value.\n  if (propSchema === \"string\") {\n    element.dom.setAttribute(\"data-value\", styleValue as string);\n  }\n\n  if (element.contentDOM !== undefined) {\n    element.contentDOM.setAttribute(\"data-editable\", \"\");\n  }\n\n  return element;\n}\n\n// This helper function helps to instantiate a stylespec with a\n// config and implementation that conform to the type of Config\nexport function createInternalStyleSpec<T extends StyleConfig>(\n  config: T,\n  implementation: StyleImplementation\n) {\n  return {\n    config,\n    implementation,\n  } satisfies StyleSpec<T>;\n}\n\nexport function createStyleSpecFromTipTapMark<\n  T extends Mark,\n  P extends StylePropSchema\n>(mark: T, propSchema: P) {\n  return createInternalStyleSpec(\n    {\n      type: mark.name as T[\"name\"],\n      propSchema,\n    },\n    {\n      mark,\n    }\n  );\n}\n\nexport function getStyleSchemaFromSpecs<T extends StyleSpecs>(specs: T) {\n  return Object.fromEntries(\n    Object.entries(specs).map(([key, value]) => [key, value.config])\n  ) as StyleSchemaFromSpecs<T>;\n}\n", "import { Mark } from \"@tiptap/core\";\nimport { ParseRule } from \"@tiptap/pm/model\";\nimport {\n  addStyleAttributes,\n  createInternalStyleSpec,\n  stylePropsToAttributes,\n} from \"./internal\";\nimport { StyleConfig, StyleSpec } from \"./types\";\nimport {UnreachableCaseError} from \"../../util/typescript\";\n\nexport type CustomStyleImplementation<T extends StyleConfig> = {\n  render: T[\"propSchema\"] extends \"boolean\"\n    ? () => {\n        dom: HTMLElement;\n        contentDOM?: HTMLElement;\n      }\n    : (value: string) => {\n        dom: HTMLElement;\n        contentDOM?: HTMLElement;\n      };\n};\n\n// TODO: support serialization\n\nexport function getStyleParseRules(config: StyleConfig): ParseRule[] {\n  return [\n    {\n      tag: `[data-style-type=\"${config.type}\"]`,\n      contentElement: (element) => {\n        const htmlElement = element as HTMLElement;\n\n        if (htmlElement.matches(\"[data-editable]\")) {\n          return htmlElement;\n        }\n\n        return htmlElement.querySelector(\"[data-editable]\") || htmlElement;\n      },\n    },\n  ];\n}\n\nexport function createStyleSpec<T extends StyleConfig>(\n  styleConfig: T,\n  styleImplementation: CustomStyleImplementation<T>\n): StyleSpec<T> {\n  const mark = Mark.create({\n    name: styleConfig.type,\n\n    addAttributes() {\n      return stylePropsToAttributes(styleConfig.propSchema);\n    },\n\n    parseHTML() {\n      return getStyleParseRules(styleConfig);\n    },\n\n    renderHTML({ mark }) {\n      let renderResult: {\n        dom: HTMLElement;\n        contentDOM?: HTMLElement;\n      };\n\n      if (styleConfig.propSchema === \"boolean\") {\n        // @ts-ignore not sure why this is complaining\n        renderResult = styleImplementation.render();\n      } else if (styleConfig.propSchema === \"string\") {\n        renderResult = styleImplementation.render(mark.attrs.stringValue);\n      } else {\n        throw new UnreachableCaseError(styleConfig.propSchema);\n      }\n\n      // const renderResult = styleImplementation.render();\n      return addStyleAttributes(\n        renderResult,\n        styleConfig.type,\n        mark.attrs.stringValue,\n        styleConfig.propSchema\n      );\n    },\n  });\n\n  return createInternalStyleSpec(styleConfig, {\n    mark,\n  });\n}\n", "import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { BlockFromConfig, FileBlockConfig } from \"../../schema\";\n\n// Default file preview, displaying a file icon and file name.\nexport const createDefaultFilePreview = (\n  block: BlockFromConfig<FileBlockConfig, any, any>\n): { dom: HTMLElement; destroy?: () => void } => {\n  const file = document.createElement(\"div\");\n  file.className = \"bn-file-default-preview\";\n\n  const icon = document.createElement(\"div\");\n  icon.className = \"bn-file-default-preview-icon\";\n  icon.innerHTML =\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z\"></path></svg>';\n\n  const fileName = document.createElement(\"p\");\n  fileName.className = \"bn-file-default-preview-name\";\n  fileName.textContent = block.props.name || \"\";\n\n  file.appendChild(icon);\n  file.appendChild(fileName);\n\n  return {\n    dom: file,\n  };\n};\n\n// Wrapper element containing file preview and caption.\nexport const createFileAndCaptionWrapper = (\n  block: BlockFromConfig<FileBlockConfig, any, any>,\n  file: HTMLElement\n) => {\n  const fileAndCaptionWrapper = document.createElement(\"div\");\n  fileAndCaptionWrapper.className = \"bn-file-and-caption-wrapper\";\n\n  const caption = document.createElement(\"p\");\n  caption.className = \"bn-file-caption\";\n  caption.textContent = block.props.caption;\n\n  fileAndCaptionWrapper.appendChild(file);\n  fileAndCaptionWrapper.appendChild(caption);\n\n  return {\n    dom: fileAndCaptionWrapper,\n  };\n};\n\n// Button element that acts as a placeholder for files with no src.\nexport const createAddFileButton = (\n  block: BlockFromConfig<FileBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>,\n  buttonText?: string,\n  buttonIcon?: HTMLElement\n) => {\n  const addFileButton = document.createElement(\"div\");\n  addFileButton.className = \"bn-add-file-button\";\n\n  const addFileButtonIcon = document.createElement(\"div\");\n  addFileButtonIcon.className = \"bn-add-file-button-icon\";\n  if (buttonIcon) {\n    addFileButtonIcon.appendChild(buttonIcon);\n  } else {\n    addFileButtonIcon.innerHTML =\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z\"></path></svg>';\n  }\n\n  const addFileButtonText = document.createElement(\"p\");\n  addFileButtonText.className = \"bn-add-file-button-text\";\n  addFileButtonText.innerHTML =\n    buttonText || editor.dictionary.file_blocks.file.add_button_text;\n\n  // Prevents focus from moving to the button.\n  const addFileButtonMouseDownHandler = (event: MouseEvent) => {\n    event.preventDefault();\n  };\n  // Opens the file toolbar.\n  const addFileButtonClickHandler = () => {\n    editor.dispatch(\n      editor._tiptapEditor.state.tr.setMeta(editor.filePanel!.plugin, {\n        block: block,\n      })\n    );\n  };\n\n  addFileButton.appendChild(addFileButtonIcon);\n  addFileButton.appendChild(addFileButtonText);\n\n  addFileButton.addEventListener(\n    \"mousedown\",\n    addFileButtonMouseDownHandler,\n    true\n  );\n  addFileButton.addEventListener(\"click\", addFileButtonClickHandler, true);\n\n  return {\n    dom: addFileButton,\n    destroy: () => {\n      addFileButton.removeEventListener(\n        \"mousedown\",\n        addFileButtonMouseDownHandler,\n        true\n      );\n      addFileButton.removeEventListener(\n        \"click\",\n        addFileButtonClickHandler,\n        true\n      );\n    },\n  };\n};\n\nexport const parseEmbedElement = (embedElement: HTMLEmbedElement) => {\n  const url = embedElement.src || undefined;\n\n  return { url };\n};\n\nexport const parseFigureElement = (\n  figureElement: HTMLElement,\n  targetTag: string\n) => {\n  const targetElement = figureElement.querySelector(\n    targetTag\n  ) as HTMLElement | null;\n  if (!targetElement) {\n    return undefined;\n  }\n\n  const captionElement = figureElement.querySelector(\"figcaption\");\n  const caption = captionElement?.textContent ?? undefined;\n\n  return { targetElement, caption };\n};\n\n// Wrapper figure element to display file link with caption. Used for external\n// HTML\nexport const createLinkWithCaption = (\n  element: HTMLElement,\n  caption: string\n) => {\n  const wrapper = document.createElement(\"div\");\n  const fileCaption = document.createElement(\"p\");\n  fileCaption.textContent = caption;\n\n  wrapper.appendChild(element);\n  wrapper.appendChild(fileCaption);\n\n  return {\n    dom: wrapper,\n  };\n};\n\n// Wrapper figure element to display file preview with caption. Used for\n// external HTML.\nexport const createFigureWithCaption = (\n  element: HTMLElement,\n  caption: string\n) => {\n  const figure = document.createElement(\"figure\");\n  const captionElement = document.createElement(\"figcaption\");\n  captionElement.textContent = caption;\n\n  figure.appendChild(element);\n  figure.appendChild(captionElement);\n\n  return { dom: figure };\n};\n\n// Wrapper element which adds resize handles & logic for visual media file\n// previews.\nexport const createResizeHandlesWrapper = (\n  block: BlockFromConfig<FileBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>,\n  element: HTMLElement,\n  getWidth: () => number,\n  setWidth: (width: number) => void\n): { dom: HTMLElement; destroy: () => void } => {\n  if (!block.props.previewWidth) {\n    throw new Error(\"Block must have a `previewWidth` prop.\");\n  }\n\n  // Wrapper element for rendered element and resize handles.\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"bn-visual-media-wrapper\";\n\n  // Resize handle elements.\n  const leftResizeHandle = document.createElement(\"div\");\n  leftResizeHandle.className = \"bn-visual-media-resize-handle\";\n  leftResizeHandle.style.left = \"4px\";\n  const rightResizeHandle = document.createElement(\"div\");\n  rightResizeHandle.className = \"bn-visual-media-resize-handle\";\n  rightResizeHandle.style.right = \"4px\";\n\n  // Temporary parameters set when the user begins resizing the element, used to\n  // calculate the new width of the element.\n  let resizeParams:\n    | {\n        handleUsed: \"left\" | \"right\";\n        initialWidth: number;\n        initialClientX: number;\n      }\n    | undefined;\n\n  // Updates the element width with an updated width depending on the cursor X\n  // offset from when the resize began, and which resize handle is being used.\n  const windowMouseMoveHandler = (event: MouseEvent) => {\n    if (!resizeParams) {\n      if (\n        !editor.isEditable &&\n        wrapper.contains(leftResizeHandle) &&\n        wrapper.contains(rightResizeHandle)\n      ) {\n        wrapper.removeChild(leftResizeHandle);\n        wrapper.removeChild(rightResizeHandle);\n      }\n\n      return;\n    }\n\n    let newWidth: number;\n\n    if (block.props.textAlignment === \"center\") {\n      if (resizeParams.handleUsed === \"left\") {\n        newWidth =\n          resizeParams.initialWidth +\n          (resizeParams.initialClientX - event.clientX) * 2;\n      } else {\n        newWidth =\n          resizeParams.initialWidth +\n          (event.clientX - resizeParams.initialClientX) * 2;\n      }\n    } else {\n      if (resizeParams.handleUsed === \"left\") {\n        newWidth =\n          resizeParams.initialWidth +\n          resizeParams.initialClientX -\n          event.clientX;\n      } else {\n        newWidth =\n          resizeParams.initialWidth +\n          event.clientX -\n          resizeParams.initialClientX;\n      }\n    }\n\n    // Min element width in px.\n    const minWidth = 64;\n\n    // Ensures the element is not wider than the editor and not smaller than a\n    // predetermined minimum width.\n    if (newWidth < minWidth) {\n      setWidth(minWidth);\n    } else if (newWidth > editor.domElement.firstElementChild!.clientWidth) {\n      setWidth(editor.domElement.firstElementChild!.clientWidth);\n    } else {\n      setWidth(newWidth);\n    }\n  };\n  // Stops mouse movements from resizing the element and updates the block's\n  // `width` prop to the new value.\n  const windowMouseUpHandler = (event: MouseEvent) => {\n    // Hides the drag handles if the cursor is no longer over the element.\n    if (\n      (!event.target ||\n        !wrapper.contains(event.target as Node) ||\n        !editor.isEditable) &&\n      wrapper.contains(leftResizeHandle) &&\n      wrapper.contains(rightResizeHandle)\n    ) {\n      wrapper.removeChild(leftResizeHandle);\n      wrapper.removeChild(rightResizeHandle);\n    }\n\n    if (!resizeParams) {\n      return;\n    }\n\n    resizeParams = undefined;\n\n    editor.updateBlock(block, {\n      props: {\n        previewWidth: getWidth(),\n      },\n    });\n  };\n\n  // Shows the resize handles when hovering over the element with the cursor.\n  const elementMouseEnterHandler = () => {\n    if (editor.isEditable) {\n      wrapper.appendChild(leftResizeHandle);\n      wrapper.appendChild(rightResizeHandle);\n    }\n  };\n  // Hides the resize handles when the cursor leaves the element, unless the\n  // cursor moves to one of the resize handles.\n  const elementMouseLeaveHandler = (event: MouseEvent) => {\n    if (\n      event.relatedTarget === leftResizeHandle ||\n      event.relatedTarget === rightResizeHandle\n    ) {\n      return;\n    }\n\n    if (resizeParams) {\n      return;\n    }\n\n    if (\n      editor.isEditable &&\n      wrapper.contains(leftResizeHandle) &&\n      wrapper.contains(rightResizeHandle)\n    ) {\n      wrapper.removeChild(leftResizeHandle);\n      wrapper.removeChild(rightResizeHandle);\n    }\n  };\n\n  // Sets the resize params, allowing the user to begin resizing the element by\n  // moving the cursor left or right.\n  const leftResizeHandleMouseDownHandler = (event: MouseEvent) => {\n    event.preventDefault();\n\n    wrapper.appendChild(leftResizeHandle);\n    wrapper.appendChild(rightResizeHandle);\n\n    resizeParams = {\n      handleUsed: \"left\",\n      initialWidth: block.props.previewWidth!,\n      initialClientX: event.clientX,\n    };\n  };\n  const rightResizeHandleMouseDownHandler = (event: MouseEvent) => {\n    event.preventDefault();\n\n    wrapper.appendChild(leftResizeHandle);\n    wrapper.appendChild(rightResizeHandle);\n\n    resizeParams = {\n      handleUsed: \"right\",\n      initialWidth: block.props.previewWidth!,\n      initialClientX: event.clientX,\n    };\n  };\n\n  wrapper.appendChild(element);\n\n  window.addEventListener(\"mousemove\", windowMouseMoveHandler);\n  window.addEventListener(\"mouseup\", windowMouseUpHandler);\n  element.addEventListener(\"mouseenter\", elementMouseEnterHandler);\n  element.addEventListener(\"mouseleave\", elementMouseLeaveHandler);\n  leftResizeHandle.addEventListener(\n    \"mousedown\",\n    leftResizeHandleMouseDownHandler\n  );\n  rightResizeHandle.addEventListener(\n    \"mousedown\",\n    rightResizeHandleMouseDownHandler\n  );\n\n  return {\n    dom: wrapper,\n    destroy: () => {\n      window.removeEventListener(\"mousemove\", windowMouseMoveHandler);\n      window.removeEventListener(\"mouseup\", windowMouseUpHandler);\n      element.removeEventListener(\"mouseenter\", elementMouseEnterHandler);\n      element.removeEventListener(\"mouseleave\", elementMouseLeaveHandler);\n      leftResizeHandle.removeEventListener(\n        \"mousedown\",\n        leftResizeHandleMouseDownHandler\n      );\n      rightResizeHandle.removeEventListener(\n        \"mousedown\",\n        rightResizeHandleMouseDownHandler\n      );\n    },\n  };\n};\n", "export const parseAudioElement = (audioElement: HTMLAudioElement) => {\n  const url = audioElement.src || undefined;\n\n  return { url };\n};\n", "import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  createBlockSpec,\n  FileBlockConfig,\n  Props,\n  PropSchema,\n} from \"../../schema\";\nimport { defaultProps } from \"../defaultProps\";\n\nimport {\n  createAddFileButton,\n  createDefaultFilePreview,\n  createFigureWithCaption,\n  createFileAndCaptionWrapper,\n  createLinkWithCaption,\n  parseFigureElement,\n} from \"../FileBlockContent/fileBlockHelpers\";\nimport { parseAudioElement } from \"./audioBlockHelpers\";\n\nexport const audioPropSchema = {\n  backgroundColor: defaultProps.backgroundColor,\n  // File name.\n  name: {\n    default: \"\" as const,\n  },\n  // File url.\n  url: {\n    default: \"\" as const,\n  },\n  // File caption.\n  caption: {\n    default: \"\" as const,\n  },\n\n  showPreview: {\n    default: true,\n  },\n} satisfies PropSchema;\n\nexport const audioBlockConfig = {\n  type: \"audio\" as const,\n  propSchema: audioPropSchema,\n  content: \"none\",\n  isFileBlock: true,\n  fileBlockAccept: [\"audio/*\"],\n} satisfies FileBlockConfig;\n\nexport const audioRender = (\n  block: BlockFromConfig<typeof audioBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>\n) => {\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"bn-file-block-content-wrapper\";\n\n  if (block.props.url === \"\") {\n    const fileBlockAudioIcon = document.createElement(\"div\");\n    fileBlockAudioIcon.innerHTML =\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M2 16.0001H5.88889L11.1834 20.3319C11.2727 20.405 11.3846 20.4449 11.5 20.4449C11.7761 20.4449 12 20.2211 12 19.9449V4.05519C12 3.93977 11.9601 3.8279 11.887 3.73857C11.7121 3.52485 11.3971 3.49335 11.1834 3.66821L5.88889 8.00007H2C1.44772 8.00007 1 8.44778 1 9.00007V15.0001C1 15.5524 1.44772 16.0001 2 16.0001ZM23 12C23 15.292 21.5539 18.2463 19.2622 20.2622L17.8445 18.8444C19.7758 17.1937 21 14.7398 21 12C21 9.26016 19.7758 6.80629 17.8445 5.15557L19.2622 3.73779C21.5539 5.75368 23 8.70795 23 12ZM18 12C18 10.0883 17.106 8.38548 15.7133 7.28673L14.2842 8.71584C15.3213 9.43855 16 10.64 16 12C16 13.36 15.3213 14.5614 14.2842 15.2841L15.7133 16.7132C17.106 15.6145 18 13.9116 18 12Z\"></path></svg>';\n    const addAudioButton = createAddFileButton(\n      block,\n      editor,\n      editor.dictionary.file_blocks.audio.add_button_text,\n      fileBlockAudioIcon.firstElementChild as HTMLElement\n    );\n    wrapper.appendChild(addAudioButton.dom);\n\n    return {\n      dom: wrapper,\n      destroy: () => {\n        addAudioButton?.destroy?.();\n      },\n    };\n  } else if (!block.props.showPreview) {\n    const file = createDefaultFilePreview(block).dom;\n    const element = createFileAndCaptionWrapper(block, file);\n\n    return {\n      dom: element.dom,\n    };\n  } else {\n    const audio = document.createElement(\"audio\");\n    audio.className = \"bn-audio\";\n    editor.resolveFileUrl(block.props.url).then((downloadUrl) => {\n      audio.src = downloadUrl;\n    });\n    audio.controls = true;\n    audio.contentEditable = \"false\";\n    audio.draggable = false;\n\n    const element = createFileAndCaptionWrapper(block, audio);\n    wrapper.appendChild(element.dom);\n\n    return {\n      dom: wrapper,\n    };\n  }\n};\n\nexport const audioParse = (\n  element: HTMLElement\n): Partial<Props<typeof audioBlockConfig.propSchema>> | undefined => {\n  if (element.tagName === \"AUDIO\") {\n    return parseAudioElement(element as HTMLAudioElement);\n  }\n\n  if (element.tagName === \"FIGURE\") {\n    const parsedFigure = parseFigureElement(element, \"audio\");\n    if (!parsedFigure) {\n      return undefined;\n    }\n\n    const { targetElement, caption } = parsedFigure;\n\n    return {\n      ...parseAudioElement(targetElement as HTMLAudioElement),\n      caption,\n    };\n  }\n\n  return undefined;\n};\n\nexport const audioToExternalHTML = (\n  block: BlockFromConfig<typeof audioBlockConfig, any, any>\n) => {\n  if (!block.props.url) {\n    const div = document.createElement(\"p\");\n    div.textContent = \"Add audio\";\n\n    return {\n      dom: div,\n    };\n  }\n\n  let audio;\n  if (block.props.showPreview) {\n    audio = document.createElement(\"audio\");\n    audio.src = block.props.url;\n  } else {\n    audio = document.createElement(\"a\");\n    audio.href = block.props.url;\n    audio.textContent = block.props.name || block.props.url;\n  }\n\n  if (block.props.caption) {\n    if (block.props.showPreview) {\n      return createFigureWithCaption(audio, block.props.caption);\n    } else {\n      return createLinkWithCaption(audio, block.props.caption);\n    }\n  }\n\n  return {\n    dom: audio,\n  };\n};\n\nexport const AudioBlock = createBlockSpec(audioBlockConfig, {\n  render: audioRender,\n  parse: audioParse,\n  toExternalHTML: audioToExternalHTML,\n});\n", "import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  FileBlockConfig,\n  PropSchema,\n  createBlockSpec,\n} from \"../../schema\";\nimport { defaultProps } from \"../defaultProps\";\nimport {\n  createAddFileButton,\n  createDefaultFilePreview,\n  createFileAndCaptionWrapper,\n  createLinkWithCaption,\n  parseEmbedElement,\n  parseFigureElement,\n} from \"./fileBlockHelpers\";\n\nexport const filePropSchema = {\n  backgroundColor: defaultProps.backgroundColor,\n  // File name.\n  name: {\n    default: \"\" as const,\n  },\n  // File url.\n  url: {\n    default: \"\" as const,\n  },\n  // File caption.\n  caption: {\n    default: \"\" as const,\n  },\n} satisfies PropSchema;\n\nexport const fileBlockConfig = {\n  type: \"file\" as const,\n  propSchema: filePropSchema,\n  content: \"none\",\n  isFileBlock: true,\n} satisfies FileBlockConfig;\n\nexport const fileRender = (\n  block: BlockFromConfig<typeof fileBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>\n) => {\n  // Wrapper element to set the file alignment, contains both file/file\n  // upload dashboard and caption.\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"bn-file-block-content-wrapper\";\n\n  if (block.props.url === \"\") {\n    const addFileButton = createAddFileButton(block, editor);\n    wrapper.appendChild(addFileButton.dom);\n\n    return {\n      dom: wrapper,\n      destroy: addFileButton.destroy,\n    };\n  } else {\n    const file = createDefaultFilePreview(block).dom;\n    const element = createFileAndCaptionWrapper(block, file);\n    wrapper.appendChild(element.dom);\n\n    return {\n      dom: wrapper,\n    };\n  }\n};\n\nexport const fileParse = (element: HTMLElement) => {\n  if (element.tagName === \"EMBED\") {\n    return parseEmbedElement(element as HTMLEmbedElement);\n  }\n\n  if (element.tagName === \"FIGURE\") {\n    const parsedFigure = parseFigureElement(element, \"embed\");\n    if (!parsedFigure) {\n      return undefined;\n    }\n\n    const { targetElement, caption } = parsedFigure;\n\n    return {\n      ...parseEmbedElement(targetElement as HTMLEmbedElement),\n      caption,\n    };\n  }\n\n  return undefined;\n};\n\nexport const fileToExternalHTML = (\n  block: BlockFromConfig<typeof fileBlockConfig, any, any>\n) => {\n  if (!block.props.url) {\n    const div = document.createElement(\"p\");\n    div.textContent = \"Add file\";\n\n    return {\n      dom: div,\n    };\n  }\n\n  const fileSrcLink = document.createElement(\"a\");\n  fileSrcLink.href = block.props.url;\n  fileSrcLink.textContent = block.props.name || block.props.url;\n\n  if (block.props.caption) {\n    return createLinkWithCaption(fileSrcLink, block.props.caption);\n  }\n\n  return {\n    dom: fileSrcLink,\n  };\n};\n\nexport const FileBlock = createBlockSpec(fileBlockConfig, {\n  render: fileRender,\n  parse: fileParse,\n  toExternalHTML: fileToExternalHTML,\n});\n", "/**\n * Uploads a file to tmpfiles.org and returns the URL to the uploaded file.\n *\n * @warning This function should only be used for development purposes, replace with your own backend!\n */\nexport const uploadToTmpFilesDotOrg_DEV_ONLY = async (\n  file: File\n): Promise<string> => {\n  const body = new FormData();\n  body.append(\"file\", file);\n\n  const ret = await fetch(\"https://tmpfiles.org/api/v1/upload\", {\n    method: \"POST\",\n    body: body,\n  });\n  return (await ret.json()).data.url.replace(\n    \"tmpfiles.org/\",\n    \"tmpfiles.org/dl/\"\n  );\n};\n", "export const parseImageElement = (imageElement: HTMLImageElement) => {\n  const url = imageElement.src || undefined;\n  const previewWidth = imageElement.width || undefined;\n\n  return { url, previewWidth };\n};\n", "import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  createBlockSpec,\n  FileBlockConfig,\n  Props,\n  PropSchema,\n} from \"../../schema\";\nimport { defaultProps } from \"../defaultProps\";\n\nimport {\n  createAddFileButton,\n  createDefaultFilePreview,\n  createFigureWithCaption,\n  createFileAndCaptionWrapper,\n  createLinkWithCaption,\n  createResizeHandlesWrapper,\n  parseFigureElement,\n} from \"../FileBlockContent/fileBlockHelpers\";\nimport { parseImageElement } from \"./imageBlockHelpers\";\n\nexport const imagePropSchema = {\n  textAlignment: defaultProps.textAlignment,\n  backgroundColor: defaultProps.backgroundColor,\n  // File name.\n  name: {\n    default: \"\" as const,\n  },\n  // File url.\n  url: {\n    default: \"\" as const,\n  },\n  // File caption.\n  caption: {\n    default: \"\" as const,\n  },\n\n  showPreview: {\n    default: true,\n  },\n  // File preview width in px.\n  previewWidth: {\n    default: 512,\n  },\n} satisfies PropSchema;\n\nexport const imageBlockConfig = {\n  type: \"image\" as const,\n  propSchema: imagePropSchema,\n  content: \"none\",\n  isFileBlock: true,\n  fileBlockAccept: [\"image/*\"],\n} satisfies FileBlockConfig;\n\nexport const imageRender = (\n  block: BlockFromConfig<typeof imageBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>\n) => {\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"bn-file-block-content-wrapper\";\n\n  if (block.props.url === \"\") {\n    const fileBlockImageIcon = document.createElement(\"div\");\n    fileBlockImageIcon.innerHTML =\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M5 11.1005L7 9.1005L12.5 14.6005L16 11.1005L19 14.1005V5H5V11.1005ZM4 3H20C20.5523 3 21 3.44772 21 4V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3ZM15.5 10C14.6716 10 14 9.32843 14 8.5C14 7.67157 14.6716 7 15.5 7C16.3284 7 17 7.67157 17 8.5C17 9.32843 16.3284 10 15.5 10Z\"></path></svg>';\n    const addImageButton = createAddFileButton(\n      block,\n      editor,\n      editor.dictionary.file_blocks.image.add_button_text,\n      fileBlockImageIcon.firstElementChild as HTMLElement\n    );\n    wrapper.appendChild(addImageButton.dom);\n\n    return {\n      dom: wrapper,\n      destroy: () => {\n        addImageButton?.destroy?.();\n      },\n    };\n  } else if (!block.props.showPreview) {\n    const file = createDefaultFilePreview(block).dom;\n    const element = createFileAndCaptionWrapper(block, file);\n\n    return {\n      dom: element.dom,\n    };\n  } else {\n    const image = document.createElement(\"img\");\n    image.className = \"bn-visual-media\";\n    editor.resolveFileUrl(block.props.url).then((downloadUrl) => {\n      image.src = downloadUrl;\n    });\n    image.alt = block.props.name || block.props.caption || \"BlockNote image\";\n    image.contentEditable = \"false\";\n    image.draggable = false;\n    image.width = Math.min(\n      block.props.previewWidth,\n      editor.domElement.firstElementChild!.clientWidth\n    );\n\n    const file = createResizeHandlesWrapper(\n      block,\n      editor,\n      image,\n      () => image.width,\n      (width) => (image.width = width)\n    );\n\n    const element = createFileAndCaptionWrapper(block, file.dom);\n    wrapper.appendChild(element.dom);\n\n    return {\n      dom: wrapper,\n      destroy: file.destroy,\n    };\n  }\n};\n\nexport const imageParse = (\n  element: HTMLElement\n): Partial<Props<typeof imageBlockConfig.propSchema>> | undefined => {\n  if (element.tagName === \"IMG\") {\n    return parseImageElement(element as HTMLImageElement);\n  }\n\n  if (element.tagName === \"FIGURE\") {\n    const parsedFigure = parseFigureElement(element, \"img\");\n    if (!parsedFigure) {\n      return undefined;\n    }\n\n    const { targetElement, caption } = parsedFigure;\n\n    return {\n      ...parseImageElement(targetElement as HTMLImageElement),\n      caption,\n    };\n  }\n\n  return undefined;\n};\n\nexport const imageToExternalHTML = (\n  block: BlockFromConfig<typeof imageBlockConfig, any, any>\n) => {\n  if (!block.props.url) {\n    const div = document.createElement(\"p\");\n    div.textContent = \"Add image\";\n\n    return {\n      dom: div,\n    };\n  }\n\n  let image;\n  if (block.props.showPreview) {\n    image = document.createElement(\"img\");\n    image.src = block.props.url;\n    image.alt = block.props.name || block.props.caption || \"BlockNote image\";\n    image.width = block.props.previewWidth;\n  } else {\n    image = document.createElement(\"a\");\n    image.href = block.props.url;\n    image.textContent = block.props.name || block.props.url;\n  }\n\n  if (block.props.caption) {\n    if (block.props.showPreview) {\n      return createFigureWithCaption(image, block.props.caption);\n    } else {\n      return createLinkWithCaption(image, block.props.caption);\n    }\n  }\n\n  return {\n    dom: image,\n  };\n};\n\nexport const ImageBlock = createBlockSpec(imageBlockConfig, {\n  render: imageRender,\n  parse: imageParse,\n  toExternalHTML: imageToExternalHTML,\n});\n", "export const parseVideoElement = (videoElement: HTMLVideoElement) => {\n  const url = videoElement.src || undefined;\n  const previewWidth = videoElement.width || undefined;\n\n  return { url, previewWidth };\n};\n", "import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  createBlockSpec,\n  FileBlockConfig,\n  Props,\n  PropSchema,\n} from \"../../schema\";\nimport { defaultProps } from \"../defaultProps\";\n\nimport {\n  createAddFileButton,\n  createDefaultFilePreview,\n  createFigureWithCaption,\n  createFileAndCaptionWrapper,\n  createLinkWithCaption,\n  createResizeHandlesWrapper,\n  parseFigureElement,\n} from \"../FileBlockContent/fileBlockHelpers\";\nimport { parseVideoElement } from \"./videoBlockHelpers\";\n\nexport const videoPropSchema = {\n  textAlignment: defaultProps.textAlignment,\n  backgroundColor: defaultProps.backgroundColor,\n  // File name.\n  name: {\n    default: \"\" as const,\n  },\n  // File url.\n  url: {\n    default: \"\" as const,\n  },\n  // File caption.\n  caption: {\n    default: \"\" as const,\n  },\n\n  showPreview: {\n    default: true,\n  },\n  // File preview width in px.\n  previewWidth: {\n    default: 512,\n  },\n} satisfies PropSchema;\n\nexport const videoBlockConfig = {\n  type: \"video\" as const,\n  propSchema: videoPropSchema,\n  content: \"none\",\n  isFileBlock: true,\n  fileBlockAccept: [\"video/*\"],\n} satisfies FileBlockConfig;\n\nexport const videoRender = (\n  block: BlockFromConfig<typeof videoBlockConfig, any, any>,\n  editor: BlockNoteEditor<any, any, any>\n) => {\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"bn-file-block-content-wrapper\";\n\n  if (block.props.url === \"\") {\n    const fileBlockVideoIcon = document.createElement(\"div\");\n    fileBlockVideoIcon.innerHTML =\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M2 3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934ZM8 5V19H16V5H8ZM4 5V7H6V5H4ZM18 5V7H20V5H18ZM4 9V11H6V9H4ZM18 9V11H20V9H18ZM4 13V15H6V13H4ZM18 13V15H20V13H18ZM4 17V19H6V17H4ZM18 17V19H20V17H18Z\"></path></svg>';\n    const addVideoButton = createAddFileButton(\n      block,\n      editor,\n      editor.dictionary.file_blocks.video.add_button_text,\n      fileBlockVideoIcon.firstElementChild as HTMLElement\n    );\n    wrapper.appendChild(addVideoButton.dom);\n\n    return {\n      dom: wrapper,\n      destroy: () => {\n        addVideoButton?.destroy?.();\n      },\n    };\n  } else if (!block.props.showPreview) {\n    const file = createDefaultFilePreview(block).dom;\n    const element = createFileAndCaptionWrapper(block, file);\n\n    return {\n      dom: element.dom,\n    };\n  } else {\n    const video = document.createElement(\"video\");\n    video.className = \"bn-visual-media\";\n    video.src = block.props.url;\n    video.controls = true;\n    video.contentEditable = \"false\";\n    video.draggable = false;\n    video.width = Math.min(\n      block.props.previewWidth,\n      editor.domElement.firstElementChild!.clientWidth\n    );\n\n    const file = createResizeHandlesWrapper(\n      block,\n      editor,\n      video,\n      () => video.width,\n      (width) => (video.width = width)\n    );\n\n    const element = createFileAndCaptionWrapper(block, file.dom);\n    wrapper.appendChild(element.dom);\n\n    return {\n      dom: wrapper,\n      destroy: file.destroy,\n    };\n  }\n};\n\nexport const videoParse = (\n  element: HTMLElement\n): Partial<Props<typeof videoBlockConfig.propSchema>> | undefined => {\n  if (element.tagName === \"VIDEO\") {\n    return parseVideoElement(element as HTMLVideoElement);\n  }\n\n  if (element.tagName === \"FIGURE\") {\n    const parsedFigure = parseFigureElement(element, \"video\");\n    if (!parsedFigure) {\n      return undefined;\n    }\n\n    const { targetElement, caption } = parsedFigure;\n\n    return {\n      ...parseVideoElement(targetElement as HTMLVideoElement),\n      caption,\n    };\n  }\n\n  return undefined;\n};\n\nexport const videoToExternalHTML = (\n  block: BlockFromConfig<typeof videoBlockConfig, any, any>\n) => {\n  if (!block.props.url) {\n    const div = document.createElement(\"p\");\n    div.textContent = \"Add video\";\n\n    return {\n      dom: div,\n    };\n  }\n\n  let video;\n  if (block.props.showPreview) {\n    video = document.createElement(\"video\");\n    video.src = block.props.url;\n    video.width = block.props.previewWidth;\n  } else {\n    video = document.createElement(\"a\");\n    video.href = block.props.url;\n    video.textContent = block.props.name || block.props.url;\n  }\n\n  if (block.props.caption) {\n    if (block.props.showPreview) {\n      return createFigureWithCaption(video, block.props.caption);\n    } else {\n      return createLinkWithCaption(video, block.props.caption);\n    }\n  }\n\n  return {\n    dom: video,\n  };\n};\n\nexport const VideoBlock = createBlockSpec(videoBlockConfig, {\n  render: videoRender,\n  parse: videoParse,\n  toExternalHTML: videoToExternalHTML,\n});\n", "import { Mark } from \"@tiptap/core\";\nimport { createStyleSpecFromTipTapMark } from \"../../schema\";\n\nconst BackgroundColorMark = Mark.create({\n  name: \"backgroundColor\",\n\n  addAttributes() {\n    return {\n      stringValue: {\n        default: undefined,\n        parseHTML: (element) => element.getAttribute(\"data-background-color\"),\n        renderHTML: (attributes) => ({\n          \"data-background-color\": attributes.stringValue,\n        }),\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if (element.hasAttribute(\"data-background-color\")) {\n            return {\n              stringValue: element.getAttribute(\"data-background-color\"),\n            };\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"span\", HTMLAttributes, 0];\n  },\n});\n\nexport const BackgroundColor = createStyleSpecFromTipTapMark(\n  BackgroundColorMark,\n  \"string\"\n);\n", "import { Mark } from \"@tiptap/core\";\nimport { createStyleSpecFromTipTapMark } from \"../../schema\";\n\nconst TextColorMark = Mark.create({\n  name: \"textColor\",\n\n  addAttributes() {\n    return {\n      stringValue: {\n        default: undefined,\n        parseHTML: (element) => element.getAttribute(\"data-text-color\"),\n        renderHTML: (attributes) => ({\n          \"data-text-color\": attributes.stringValue,\n        }),\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if (element.hasAttribute(\"data-text-color\")) {\n            return { stringValue: element.getAttribute(\"data-text-color\") };\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"span\", HTMLAttributes, 0];\n  },\n});\n\nexport const TextColor = createStyleSpecFromTipTapMark(TextColorMark, \"string\");\n", "import { InputRule } from \"@tiptap/core\";\nimport {\n  PropSchema,\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../defaultBlockHelpers\";\nimport { defaultProps } from \"../defaultProps\";\nimport { getCurrentBlockContentType } from \"../../api/getCurrentBlockContentType\";\n\nexport const headingPropSchema = {\n  ...defaultProps,\n  level: { default: 1, values: [1, 2, 3] as const },\n} satisfies PropSchema;\n\nconst HeadingBlockContent = createStronglyTypedTiptapNode({\n  name: \"heading\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        // instead of \"level\" attributes, use \"data-level\"\n        parseHTML: (element) => {\n          const attr = element.getAttribute(\"data-level\")!;\n          const parsed = parseInt(attr);\n          if (isFinite(parsed)) {\n            return parsed;\n          }\n          return undefined;\n        },\n        renderHTML: (attributes) => {\n          return {\n            \"data-level\": (attributes.level as number).toString(),\n          };\n        },\n      },\n    };\n  },\n\n  addInputRules() {\n    return [\n      ...[1, 2, 3].map((level) => {\n        // Creates a heading of appropriate level when starting with \"#\", \"##\", or \"###\".\n        return new InputRule({\n          find: new RegExp(`^(#{${level}})\\\\s$`),\n          handler: ({ state, chain, range }) => {\n            if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n              return;\n            }\n\n            chain()\n              .BNUpdateBlock(state.selection.from, {\n                type: \"heading\",\n                props: {\n                  level: level as any,\n                },\n              })\n              // Removes the \"#\" character(s) used to set the heading.\n              .deleteRange({ from: range.from, to: range.to });\n          },\n        });\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      \"Mod-Alt-1\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"heading\",\n            props: {\n              level: 1 as any,\n            },\n          }\n        );\n      },\n      \"Mod-Alt-2\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"heading\",\n            props: {\n              level: 2 as any,\n            },\n          }\n        );\n      },\n      \"Mod-Alt-3\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"heading\",\n            props: {\n              level: 3 as any,\n            },\n          }\n        );\n      },\n    };\n  },\n  parseHTML() {\n    return [\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          return {\n            level: element.getAttribute(\"data-level\"),\n          };\n        },\n      },\n      {\n        tag: \"h1\",\n        attrs: { level: 1 },\n        node: \"heading\",\n      },\n      {\n        tag: \"h2\",\n        attrs: { level: 2 },\n        node: \"heading\",\n      },\n      {\n        tag: \"h3\",\n        attrs: { level: 3 },\n        node: \"heading\",\n      },\n    ];\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    return createDefaultBlockDOMOutputSpec(\n      this.name,\n      `h${node.attrs.level}`,\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n  },\n});\n\nexport const Heading = createBlockSpecFromStronglyTypedTiptapNode(\n  HeadingBlockContent,\n  headingPropSchema\n);\n", "import { Editor } from \"@tiptap/core\";\nimport { getBlockInfoFromPos } from \"../../api/getBlockInfoFromPos\";\n\nexport const handleEnter = (editor: Editor) => {\n  const { contentNode, contentType } = getBlockInfoFromPos(\n    editor.state.doc,\n    editor.state.selection.from\n  )!;\n\n  const selectionEmpty =\n    editor.state.selection.anchor === editor.state.selection.head;\n\n  if (\n    !(\n      contentType.name === \"bulletListItem\" ||\n      contentType.name === \"numberedListItem\" ||\n      contentType.name === \"checkListItem\"\n    ) ||\n    !selectionEmpty\n  ) {\n    return false;\n  }\n\n  return editor.commands.first(({ state, chain, commands }) => [\n    () =>\n      // Changes list item block to a paragraph block if the content is empty.\n      commands.command(() => {\n        if (contentNode.childCount === 0) {\n          return commands.BNUpdateBlock(state.selection.from, {\n            type: \"paragraph\",\n            props: {},\n          });\n        }\n\n        return false;\n      }),\n\n    () =>\n      // Splits the current block, moving content inside that's after the cursor\n      // to a new block of the same type below.\n      commands.command(() => {\n        if (contentNode.childCount > 0) {\n          chain()\n            .deleteSelection()\n            .BNSplitBlock(state.selection.from, true)\n            .run();\n\n          return true;\n        }\n\n        return false;\n      }),\n  ]);\n};\n", "import { InputRule } from \"@tiptap/core\";\nimport {\n  PropSchema,\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../../defaultBlockHelpers\";\nimport { defaultProps } from \"../../defaultProps\";\nimport { handleEnter } from \"../ListItemKeyboardShortcuts\";\nimport { getCurrentBlockContentType } from \"../../../api/getCurrentBlockContentType\";\n\nexport const bulletListItemPropSchema = {\n  ...defaultProps,\n} satisfies PropSchema;\n\nconst BulletListItemBlockContent = createStronglyTypedTiptapNode({\n  name: \"bulletListItem\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  // This is to make sure that check list parse rules run before, since they\n  // both parse `li` elements but check lists are more specific.\n  priority: 90,\n  addInputRules() {\n    return [\n      // Creates an unordered list when starting with \"-\", \"+\", or \"*\".\n      new InputRule({\n        find: new RegExp(`^[-+*]\\\\s$`),\n        handler: ({ state, chain, range }) => {\n          if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n            return;\n          }\n\n          chain()\n            .BNUpdateBlock(state.selection.from, {\n              type: \"bulletListItem\",\n              props: {},\n            })\n            // Removes the \"-\", \"+\", or \"*\" character used to set the list.\n            .deleteRange({ from: range.from, to: range.to });\n        },\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => handleEnter(this.editor),\n      \"Mod-Shift-8\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"bulletListItem\",\n            props: {},\n          }\n        );\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      // Case for regular HTML list structure.\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\", // TODO: remove if we can't come up with test case that needs this\n      },\n      {\n        tag: \"li\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (\n            parent.tagName === \"UL\" ||\n            (parent.tagName === \"DIV\" && parent.parentElement!.tagName === \"UL\")\n          ) {\n            return {};\n          }\n\n          return false;\n        },\n        node: \"bulletListItem\",\n      },\n      // Case for BlockNote list structure.\n      {\n        tag: \"p\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (parent.getAttribute(\"data-content-type\") === \"bulletListItem\") {\n            return {};\n          }\n\n          return false;\n        },\n        priority: 300,\n        node: \"bulletListItem\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return createDefaultBlockDOMOutputSpec(\n      this.name,\n      // We use a <p> tag, because for <li> tags we'd need a <ul> element to put\n      // them in to be semantically correct, which we can't have due to the\n      // schema.\n      \"p\",\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n  },\n});\n\nexport const BulletListItem = createBlockSpecFromStronglyTypedTiptapNode(\n  BulletListItemBlockContent,\n  bulletListItemPropSchema\n);\n", "import { Plugin, PluginKey } from \"prosemirror-state\";\nimport { getBlockInfoFromPos } from \"../../../api/getBlockInfoFromPos\";\n\n// ProseMirror Plugin which automatically assigns indices to ordered list items per nesting level.\nconst PLUGIN_KEY = new PluginKey(`numbered-list-indexing`);\nexport const NumberedListIndexingPlugin = () => {\n  return new Plugin({\n    key: PLUGIN_KEY,\n    appendTransaction: (_transactions, _oldState, newState) => {\n      const tr = newState.tr;\n      tr.setMeta(\"numberedListIndexing\", true);\n\n      let modified = false;\n\n      // Traverses each node the doc using DFS, so blocks which are on the same nesting level will be traversed in the\n      // same order they appear. This means the index of each list item block can be calculated by incrementing the\n      // index of the previous list item block.\n      newState.doc.descendants((node, pos) => {\n        if (\n          node.type.name === \"blockContainer\" &&\n          node.firstChild!.type.name === \"numberedListItem\"\n        ) {\n          let newIndex = \"1\";\n          const isFirstBlockInDoc = pos === 1;\n\n          const blockInfo = getBlockInfoFromPos(tr.doc, pos + 1)!;\n          if (blockInfo === undefined) {\n            return;\n          }\n\n          // Checks if this block is the start of a new ordered list, i.e. if it's the first block in the document, the\n          // first block in its nesting level, or the previous block is not an ordered list item.\n          if (!isFirstBlockInDoc) {\n            const prevBlockInfo = getBlockInfoFromPos(tr.doc, pos - 2)!;\n            if (prevBlockInfo === undefined) {\n              return;\n            }\n\n            const isFirstBlockInNestingLevel =\n              blockInfo.depth !== prevBlockInfo.depth;\n\n            if (!isFirstBlockInNestingLevel) {\n              const prevBlockContentNode = prevBlockInfo.contentNode;\n              const prevBlockContentType = prevBlockInfo.contentType;\n\n              const isPrevBlockOrderedListItem =\n                prevBlockContentType.name === \"numberedListItem\";\n\n              if (isPrevBlockOrderedListItem) {\n                const prevBlockIndex = prevBlockContentNode.attrs[\"index\"];\n\n                newIndex = (parseInt(prevBlockIndex) + 1).toString();\n              }\n            }\n          }\n\n          const contentNode = blockInfo.contentNode;\n          const index = contentNode.attrs[\"index\"];\n\n          if (index !== newIndex) {\n            modified = true;\n\n            tr.setNodeMarkup(pos + 1, undefined, {\n              index: newIndex,\n            });\n          }\n        }\n      });\n\n      return modified ? tr : null;\n    },\n  });\n};\n", "import { InputRule } from \"@tiptap/core\";\nimport {\n  PropSchema,\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../../defaultBlockHelpers\";\nimport { defaultProps } from \"../../defaultProps\";\nimport { handleEnter } from \"../ListItemKeyboardShortcuts\";\nimport { NumberedListIndexingPlugin } from \"./NumberedListIndexingPlugin\";\nimport { getCurrentBlockContentType } from \"../../../api/getCurrentBlockContentType\";\n\nexport const numberedListItemPropSchema = {\n  ...defaultProps,\n} satisfies PropSchema;\n\nconst NumberedListItemBlockContent = createStronglyTypedTiptapNode({\n  name: \"numberedListItem\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  priority: 90,\n  addAttributes() {\n    return {\n      index: {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"data-index\"),\n        renderHTML: (attributes) => {\n          return {\n            \"data-index\": attributes.index,\n          };\n        },\n      },\n    };\n  },\n\n  addInputRules() {\n    return [\n      // Creates an ordered list when starting with \"1.\".\n      new InputRule({\n        find: new RegExp(`^1\\\\.\\\\s$`),\n        handler: ({ state, chain, range }) => {\n          if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n            return;\n          }\n\n          chain()\n            .BNUpdateBlock(state.selection.from, {\n              type: \"numberedListItem\",\n              props: {},\n            })\n            // Removes the \"1.\" characters used to set the list.\n            .deleteRange({ from: range.from, to: range.to });\n        },\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => handleEnter(this.editor),\n      \"Mod-Shift-7\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"numberedListItem\",\n            props: {},\n          }\n        );\n      },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [NumberedListIndexingPlugin()];\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\", // TODO: remove if we can't come up with test case that needs this\n      },\n      // Case for regular HTML list structure.\n      // (e.g.: when pasting from other apps)\n      {\n        tag: \"li\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (\n            parent.tagName === \"OL\" ||\n            (parent.tagName === \"DIV\" && parent.parentElement!.tagName === \"OL\")\n          ) {\n            return {};\n          }\n\n          return false;\n        },\n        node: \"numberedListItem\",\n      },\n      // Case for BlockNote list structure.\n      // (e.g.: when pasting from blocknote)\n      {\n        tag: \"p\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (parent.getAttribute(\"data-content-type\") === \"numberedListItem\") {\n            return {};\n          }\n\n          return false;\n        },\n        priority: 300,\n        node: \"numberedListItem\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return createDefaultBlockDOMOutputSpec(\n      this.name,\n      // We use a <p> tag, because for <li> tags we'd need an <ol> element to\n      // put them in to be semantically correct, which we can't have due to the\n      // schema.\n      \"p\",\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n  },\n});\n\nexport const NumberedListItem = createBlockSpecFromStronglyTypedTiptapNode(\n  NumberedListItemBlockContent,\n  numberedListItemPropSchema\n);\n", "import { InputRule } from \"@tiptap/core\";\nimport {\n  PropSchema,\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../../defaultBlockHelpers\";\nimport { defaultProps } from \"../../defaultProps\";\nimport { handleEnter } from \"../ListItemKeyboardShortcuts\";\nimport { getCurrentBlockContentType } from \"../../../api/getCurrentBlockContentType\";\n\nexport const checkListItemPropSchema = {\n  ...defaultProps,\n  checked: {\n    default: false,\n  },\n} satisfies PropSchema;\n\nconst checkListItemBlockContent = createStronglyTypedTiptapNode({\n  name: \"checkListItem\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  addAttributes() {\n    return {\n      checked: {\n        default: false,\n        // instead of \"checked\" attributes, use \"data-checked\"\n        parseHTML: (element) =>\n          element.getAttribute(\"data-checked\") === \"true\" || undefined,\n        renderHTML: (attributes) => {\n          return attributes.checked\n            ? {\n                \"data-checked\": (attributes.checked as boolean).toString(),\n              }\n            : {};\n        },\n      },\n    };\n  },\n\n  addInputRules() {\n    return [\n      // Creates a checklist when starting with \"[]\" or \"[X]\".\n      new InputRule({\n        find: new RegExp(`\\\\[\\\\s*\\\\]\\\\s$`),\n        handler: ({ state, chain, range }) => {\n          if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n            return;\n          }\n\n          chain()\n            .BNUpdateBlock(state.selection.from, {\n              type: \"checkListItem\",\n              props: {\n                checked: false as any,\n              },\n            })\n            // Removes the characters used to set the list.\n            .deleteRange({ from: range.from, to: range.to });\n        },\n      }),\n      new InputRule({\n        find: new RegExp(`\\\\[[Xx]\\\\]\\\\s$`),\n        handler: ({ state, chain, range }) => {\n          if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n            return;\n          }\n\n          chain()\n            .BNUpdateBlock(state.selection.from, {\n              type: \"checkListItem\",\n              props: {\n                checked: true as any,\n              },\n            })\n            // Removes the characters used to set the list.\n            .deleteRange({ from: range.from, to: range.to });\n        },\n      }),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => handleEnter(this.editor),\n      \"Mod-Shift-9\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"checkListItem\",\n            props: {},\n          }\n        );\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\", // TODO: remove if we can't come up with test case that needs this\n      },\n      // Checkbox only.\n      {\n        tag: \"input\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if ((element as HTMLInputElement).type === \"checkbox\") {\n            return { checked: (element as HTMLInputElement).checked };\n          }\n\n          return false;\n        },\n        node: \"checkListItem\",\n      },\n      // Container element for checkbox + label.\n      {\n        tag: \"li\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (\n            parent.tagName === \"UL\" ||\n            (parent.tagName === \"DIV\" && parent.parentElement!.tagName === \"UL\")\n          ) {\n            const checkbox =\n              (element.querySelector(\n                \"input[type=checkbox]\"\n              ) as HTMLInputElement) || null;\n\n            if (checkbox === null) {\n              return false;\n            }\n\n            return { checked: checkbox.checked };\n          }\n\n          return false;\n        },\n        node: \"checkListItem\",\n      },\n    ];\n  },\n\n  // Since there is no HTML checklist element, there isn't really any\n  // standardization for what checklists should look like in the DOM. GDocs'\n  // and Notion's aren't cross compatible, for example. This implementation\n  // has a semantically correct DOM structure (though missing a label for the\n  // checkbox) which is also converted correctly to Markdown by remark.\n  renderHTML({ node, HTMLAttributes }) {\n    const checkbox = document.createElement(\"input\");\n    checkbox.type = \"checkbox\";\n    checkbox.checked = node.attrs.checked;\n    if (node.attrs.checked) {\n      checkbox.setAttribute(\"checked\", \"\");\n    }\n\n    const { dom, contentDOM } = createDefaultBlockDOMOutputSpec(\n      this.name,\n      \"p\",\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n\n    dom.insertBefore(checkbox, contentDOM);\n\n    return { dom, contentDOM };\n  },\n\n  // Need to render node view since the checkbox needs to be able to update the\n  // node. This is only possible with a node view as it exposes `getPos`.\n  addNodeView() {\n    return ({ node, getPos, editor, HTMLAttributes }) => {\n      // Need to wrap certain elements in a div or keyboard navigation gets\n      // confused.\n      const wrapper = document.createElement(\"div\");\n      const checkboxWrapper = document.createElement(\"div\");\n      checkboxWrapper.contentEditable = \"false\";\n\n      const checkbox = document.createElement(\"input\");\n      checkbox.type = \"checkbox\";\n      checkbox.checked = node.attrs.checked;\n      if (node.attrs.checked) {\n        checkbox.setAttribute(\"checked\", \"\");\n      }\n\n      const changeHandler = () => {\n        if (!editor.isEditable) {\n          // This seems like the most effective way of blocking the checkbox\n          // from being toggled, as event.preventDefault() does not stop it for\n          // \"click\" or \"change\" events.\n          checkbox.checked = !checkbox.checked;\n          return;\n        }\n\n        if (typeof getPos !== \"boolean\") {\n          this.editor.commands.BNUpdateBlock(getPos(), {\n            type: \"checkListItem\",\n            props: {\n              checked: checkbox.checked as any,\n            },\n          });\n        }\n      };\n      checkbox.addEventListener(\"change\", changeHandler);\n\n      const { dom, contentDOM } = createDefaultBlockDOMOutputSpec(\n        this.name,\n        \"p\",\n        {\n          ...(this.options.domAttributes?.blockContent || {}),\n          ...HTMLAttributes,\n        },\n        this.options.domAttributes?.inlineContent || {}\n      );\n\n      if (typeof getPos !== \"boolean\") {\n        // Since `node` is a blockContent node, we have to get the block ID from\n        // the parent blockContainer node. This means we can't add the label in\n        // `renderHTML` as we can't use `getPos` and therefore can't get the\n        // parent blockContainer node.\n        const blockID = this.editor.state.doc.resolve(getPos()).node().attrs.id;\n        const label = \"label-\" + blockID;\n        checkbox.setAttribute(\"aria-labelledby\", label);\n        contentDOM.id = label;\n      }\n\n      dom.removeChild(contentDOM);\n      dom.appendChild(wrapper);\n      wrapper.appendChild(checkboxWrapper);\n      wrapper.appendChild(contentDOM);\n      checkboxWrapper.appendChild(checkbox);\n\n      return {\n        dom,\n        contentDOM,\n        destroy: () => {\n          checkbox.removeEventListener(\"change\", changeHandler);\n        },\n      };\n    };\n  },\n});\n\nexport const CheckListItem = createBlockSpecFromStronglyTypedTiptapNode(\n  checkListItemBlockContent,\n  checkListItemPropSchema\n);\n", "import {\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../defaultBlockHelpers\";\nimport { defaultProps } from \"../defaultProps\";\nimport { getCurrentBlockContentType } from \"../../api/getCurrentBlockContentType\";\n\nexport const paragraphPropSchema = {\n  ...defaultProps,\n};\n\nexport const ParagraphBlockContent = createStronglyTypedTiptapNode({\n  name: \"paragraph\",\n  content: \"inline*\",\n  group: \"blockContent\",\n\n  addKeyboardShortcuts() {\n    return {\n      \"Mod-Alt-0\": () => {\n        if (getCurrentBlockContentType(this.editor) !== \"inline*\") {\n          return true;\n        }\n\n        return this.editor.commands.BNUpdateBlock(\n          this.editor.state.selection.anchor,\n          {\n            type: \"paragraph\",\n            props: {},\n          }\n        );\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      { tag: \"div[data-content-type=\" + this.name + \"]\" },\n      {\n        tag: \"p\",\n        priority: 200,\n        getAttrs: (element) => {\n          if (typeof element === \"string\" || !element.textContent?.trim()) {\n            return false;\n          }\n\n          return {};\n        },\n        node: \"paragraph\",\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return createDefaultBlockDOMOutputSpec(\n      this.name,\n      \"p\",\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n  },\n});\n\nexport const Paragraph = createBlockSpecFromStronglyTypedTiptapNode(\n  ParagraphBlockContent,\n  paragraphPropSchema\n);\n", "import { callOrReturn, Extension, getExtensionField } from \"@tiptap/core\";\nimport { columnResizing, tableEditing } from \"prosemirror-tables\";\n\nexport const TableExtension = Extension.create({\n  name: \"BlockNoteTableExtension\",\n\n  addProseMirrorPlugins: () => {\n    return [\n      columnResizing({\n        cellMinWidth: 100,\n      }),\n      tableEditing(),\n    ];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      // Makes enter create a new line within the cell.\n      Enter: () => {\n        if (\n          this.editor.state.selection.empty &&\n          this.editor.state.selection.$head.parent.type.name ===\n            \"tableParagraph\"\n        ) {\n          this.editor.commands.setHardBreak();\n\n          return true;\n        }\n\n        return false;\n      },\n      // Ensures that backspace won't delete the table if the text cursor is at\n      // the start of a cell and the selection is empty.\n      Backspace: () => {\n        const selection = this.editor.state.selection;\n        const selectionIsEmpty = selection.empty;\n        const selectionIsAtStartOfNode = selection.$head.parentOffset === 0;\n        const selectionIsInTableParagraphNode =\n          selection.$head.node().type.name === \"tableParagraph\";\n\n        return (\n          selectionIsEmpty &&\n          selectionIsAtStartOfNode &&\n          selectionIsInTableParagraphNode\n        );\n      },\n    };\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    };\n\n    return {\n      tableRole: callOrReturn(\n        getExtensionField(extension, \"tableRole\", context)\n      ),\n    };\n  },\n});\n", "import { mergeAttributes, Node } from \"@tiptap/core\";\nimport { TableCell } from \"@tiptap/extension-table-cell\";\nimport { TableHeader } from \"@tiptap/extension-table-header\";\nimport { TableRow } from \"@tiptap/extension-table-row\";\nimport {\n  createBlockSpecFromStronglyTypedTiptapNode,\n  createStronglyTypedTiptapNode,\n} from \"../../schema\";\nimport { createDefaultBlockDOMOutputSpec } from \"../defaultBlockHelpers\";\nimport { defaultProps } from \"../defaultProps\";\nimport { TableExtension } from \"./TableExtension\";\n\nexport const tablePropSchema = {\n  ...defaultProps,\n};\n\nexport const TableBlockContent = createStronglyTypedTiptapNode({\n  name: \"table\",\n  content: \"tableRow+\",\n  group: \"blockContent\",\n  tableRole: \"table\",\n\n  isolating: true,\n\n  parseHTML() {\n    return [{ tag: \"table\" }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return createDefaultBlockDOMOutputSpec(\n      this.name,\n      \"table\",\n      {\n        ...(this.options.domAttributes?.blockContent || {}),\n        ...HTMLAttributes,\n      },\n      this.options.domAttributes?.inlineContent || {}\n    );\n  },\n});\n\nconst TableParagraph = Node.create({\n  name: \"tableParagraph\",\n  group: \"tableContent\",\n  content: \"inline*\",\n\n  parseHTML() {\n    return [\n      { tag: \"td\" },\n      {\n        tag: \"p\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\" || !element.textContent) {\n            return false;\n          }\n\n          const parent = element.parentElement;\n\n          if (parent === null) {\n            return false;\n          }\n\n          if (parent.tagName === \"TD\") {\n            return {};\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      \"p\",\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n      0,\n    ];\n  },\n});\n\nexport const Table = createBlockSpecFromStronglyTypedTiptapNode(\n  TableBlockContent,\n  tablePropSchema,\n  [\n    TableExtension,\n    TableParagraph,\n    TableHeader.extend({\n      content: \"tableContent\",\n    }),\n    TableCell.extend({\n      content: \"tableContent\",\n    }),\n    TableRow,\n  ]\n);\n", "import Bold from \"@tiptap/extension-bold\";\nimport Code from \"@tiptap/extension-code\";\nimport Italic from \"@tiptap/extension-italic\";\nimport Strike from \"@tiptap/extension-strike\";\nimport Underline from \"@tiptap/extension-underline\";\nimport { BackgroundColor } from \"../extensions/BackgroundColor/BackgroundColorMark\";\nimport { TextColor } from \"../extensions/TextColor/TextColorMark\";\nimport {\n  BlockNoDefaults,\n  BlockSchema,\n  BlockSpecs,\n  InlineContentSchema,\n  InlineContentSpecs,\n  PartialBlockNoDefaults,\n  StyleSchema,\n  StyleSpecs,\n  createStyleSpecFromTipTapMark,\n  getBlockSchemaFromSpecs,\n  getInlineContentSchemaFromSpecs,\n  getStyleSchemaFromSpecs,\n} from \"../schema\";\n\nimport { Heading } from \"./HeadingBlockContent/HeadingBlockContent\";\nimport { BulletListItem } from \"./ListItemBlockContent/BulletListItemBlockContent/BulletListItemBlockContent\";\nimport { NumberedListItem } from \"./ListItemBlockContent/NumberedListItemBlockContent/NumberedListItemBlockContent\";\nimport { CheckListItem } from \"./ListItemBlockContent/CheckListItemBlockContent/CheckListItemBlockContent\";\nimport { Paragraph } from \"./ParagraphBlockContent/ParagraphBlockContent\";\nimport { Table } from \"./TableBlockContent/TableBlockContent\";\nimport { FileBlock } from \"./FileBlockContent/FileBlockContent\";\nimport { ImageBlock } from \"./ImageBlockContent/ImageBlockContent\";\nimport { VideoBlock } from \"./VideoBlockContent/VideoBlockContent\";\nimport { AudioBlock } from \"./AudioBlockContent/AudioBlockContent\";\n\nexport const defaultBlockSpecs = {\n  paragraph: Paragraph,\n  heading: Heading,\n  bulletListItem: BulletListItem,\n  numberedListItem: NumberedListItem,\n  checkListItem: CheckListItem,\n  table: Table,\n  file: FileBlock,\n  image: ImageBlock,\n  video: VideoBlock,\n  audio: AudioBlock,\n} satisfies BlockSpecs;\n\nexport const defaultBlockSchema = getBlockSchemaFromSpecs(defaultBlockSpecs);\n\n// underscore is used that in case a user overrides DefaultBlockSchema,\n// they can still access the original default block schema\nexport type _DefaultBlockSchema = typeof defaultBlockSchema;\nexport type DefaultBlockSchema = _DefaultBlockSchema;\n\nexport const defaultStyleSpecs = {\n  bold: createStyleSpecFromTipTapMark(Bold, \"boolean\"),\n  italic: createStyleSpecFromTipTapMark(Italic, \"boolean\"),\n  underline: createStyleSpecFromTipTapMark(Underline, \"boolean\"),\n  strike: createStyleSpecFromTipTapMark(Strike, \"boolean\"),\n  code: createStyleSpecFromTipTapMark(Code, \"boolean\"),\n  textColor: TextColor,\n  backgroundColor: BackgroundColor,\n} satisfies StyleSpecs;\n\nexport const defaultStyleSchema = getStyleSchemaFromSpecs(defaultStyleSpecs);\n\n// underscore is used that in case a user overrides DefaultStyleSchema,\n// they can still access the original default style schema\nexport type _DefaultStyleSchema = typeof defaultStyleSchema;\nexport type DefaultStyleSchema = _DefaultStyleSchema;\n\nexport const defaultInlineContentSpecs = {\n  text: { config: \"text\", implementation: {} as any },\n  link: { config: \"link\", implementation: {} as any },\n} satisfies InlineContentSpecs;\n\nexport const defaultInlineContentSchema = getInlineContentSchemaFromSpecs(\n  defaultInlineContentSpecs\n);\n\n// underscore is used that in case a user overrides DefaultInlineContentSchema,\n// they can still access the original default inline content schema\nexport type _DefaultInlineContentSchema = typeof defaultInlineContentSchema;\nexport type DefaultInlineContentSchema = _DefaultInlineContentSchema;\n\nexport type PartialBlock<\n  BSchema extends BlockSchema = DefaultBlockSchema,\n  I extends InlineContentSchema = DefaultInlineContentSchema,\n  S extends StyleSchema = DefaultStyleSchema\n> = PartialBlockNoDefaults<BSchema, I, S>;\n\nexport type Block<\n  BSchema extends BlockSchema = DefaultBlockSchema,\n  I extends InlineContentSchema = DefaultInlineContentSchema,\n  S extends StyleSchema = DefaultStyleSchema\n> = BlockNoDefaults<BSchema, I, S>;\n", "import type { BlockNoteEditor } from \"../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfig,\n  BlockSchema,\n  FileBlockConfig,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../schema\";\nimport {\n  Block,\n  DefaultBlockSchema,\n  defaultBlockSchema,\n  defaultInlineContentSchema,\n  DefaultInlineContentSchema,\n} from \"./defaultBlocks\";\nimport { defaultProps } from \"./defaultProps\";\n\nexport function checkDefaultBlockTypeInSchema<\n  BlockType extends keyof DefaultBlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blockType: BlockType,\n  editor: BlockNoteEditor<any, I, S>\n): editor is BlockNoteEditor<{ Type: DefaultBlockSchema[BlockType] }, I, S> {\n  return (\n    blockType in editor.schema.blockSchema &&\n    editor.schema.blockSchema[blockType] === defaultBlockSchema[blockType]\n  );\n}\n\nexport function checkDefaultInlineContentTypeInSchema<\n  InlineContentType extends keyof DefaultInlineContentSchema,\n  B extends BlockSchema,\n  S extends StyleSchema\n>(\n  inlineContentType: InlineContentType,\n  editor: BlockNoteEditor<B, any, S>\n): editor is BlockNoteEditor<\n  B,\n  { Type: DefaultInlineContentSchema[InlineContentType] },\n  S\n> {\n  return (\n    inlineContentType in editor.schema.inlineContentSchema &&\n    editor.schema.inlineContentSchema[inlineContentType] ===\n      defaultInlineContentSchema[inlineContentType]\n  );\n}\n\nexport function checkBlockIsDefaultType<\n  BlockType extends keyof DefaultBlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blockType: BlockType,\n  block: Block<any, I, S>,\n  editor: BlockNoteEditor<any, I, S>\n): block is BlockFromConfig<DefaultBlockSchema[BlockType], I, S> {\n  return (\n    block.type === blockType &&\n    block.type in editor.schema.blockSchema &&\n    checkDefaultBlockTypeInSchema(block.type, editor)\n  );\n}\n\nexport function checkBlockIsFileBlock<\n  B extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  block: Block<any, I, S>,\n  editor: BlockNoteEditor<B, I, S>\n): block is BlockFromConfig<FileBlockConfig, I, S> {\n  return (\n    (block.type in editor.schema.blockSchema &&\n      editor.schema.blockSchema[block.type].isFileBlock) ||\n    false\n  );\n}\n\nexport function checkBlockIsFileBlockWithPreview<\n  B extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  block: Block<any, I, S>,\n  editor: BlockNoteEditor<B, I, S>\n): block is BlockFromConfig<\n  FileBlockConfig & {\n    propSchema: Required<FileBlockConfig[\"propSchema\"]>;\n  },\n  I,\n  S\n> {\n  return (\n    (block.type in editor.schema.blockSchema &&\n      editor.schema.blockSchema[block.type].isFileBlock &&\n      \"showPreview\" in editor.schema.blockSchema[block.type].propSchema) ||\n    false\n  );\n}\n\nexport function checkBlockIsFileBlockWithPlaceholder<\n  B extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(block: Block<B, I, S>, editor: BlockNoteEditor<B, I, S>) {\n  const config = editor.schema.blockSchema[block.type];\n  return config.isFileBlock && !block.props.url;\n}\n\nexport function checkBlockTypeHasDefaultProp<\n  Prop extends keyof typeof defaultProps,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  prop: Prop,\n  blockType: string,\n  editor: BlockNoteEditor<any, I, S>\n): editor is BlockNoteEditor<\n  {\n    [BT in string]: {\n      type: BT;\n      propSchema: {\n        [P in Prop]: (typeof defaultProps)[P];\n      };\n      content: \"table\" | \"inline\" | \"none\";\n    };\n  },\n  I,\n  S\n> {\n  return (\n    blockType in editor.schema.blockSchema &&\n    prop in editor.schema.blockSchema[blockType].propSchema &&\n    editor.schema.blockSchema[blockType].propSchema[prop] === defaultProps[prop]\n  );\n}\n\nexport function checkBlockHasDefaultProp<\n  Prop extends keyof typeof defaultProps,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  prop: Prop,\n  block: Block<any, I, S>,\n  editor: BlockNoteEditor<any, I, S>\n): block is BlockFromConfig<\n  {\n    type: string;\n    propSchema: {\n      [P in Prop]: (typeof defaultProps)[P];\n    };\n    content: \"table\" | \"inline\" | \"none\";\n  },\n  I,\n  S\n> {\n  return checkBlockTypeHasDefaultProp(prop, block.type, editor);\n}\n", "import { Node } from \"prosemirror-model\";\n\n/**\n * Get a TipTap node by id\n */\nexport function getNodeById(\n  id: string,\n  doc: Node\n): { node: Node; posBeforeNode: number } {\n  let targetNode: Node | undefined = undefined;\n  let posBeforeNode: number | undefined = undefined;\n\n  doc.firstChild!.descendants((node, pos) => {\n    // Skips traversing nodes after node with target ID has been found.\n    if (targetNode) {\n      return false;\n    }\n\n    // Keeps traversing nodes if block with target ID has not been found.\n    if (node.type.name !== \"blockContainer\" || node.attrs.id !== id) {\n      return true;\n    }\n\n    targetNode = node;\n    posBeforeNode = pos + 1;\n\n    return false;\n  });\n\n  if (targetNode === undefined || posBeforeNode === undefined) {\n    throw Error(\"Could not find block in the editor with matching ID.\");\n  }\n\n  return {\n    node: targetNode,\n    posBeforeNode: posBeforeNode,\n  };\n}\n", "import { Node } from \"prosemirror-model\";\n\nimport { selectionToInsertionEnd } from \"@tiptap/core\";\nimport { Transaction } from \"prosemirror-state\";\nimport { Block, PartialBlock } from \"../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockIdentifier,\n  BlockSchema,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../../schema\";\nimport { blockToNode, nodeToBlock } from \"../nodeConversions/nodeConversions\";\nimport { getNodeById } from \"../nodeUtil\";\n\nexport function insertBlocks<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blocksToInsert: PartialBlock<BSchema, I, S>[],\n  referenceBlock: BlockIdentifier,\n  placement: \"before\" | \"after\" | \"nested\" = \"before\",\n  editor: BlockNoteEditor<BSchema, I, S>\n): Block<BSchema, I, S>[] {\n  const id =\n    typeof referenceBlock === \"string\" ? referenceBlock : referenceBlock.id;\n\n  const nodesToInsert: Node[] = [];\n  for (const blockSpec of blocksToInsert) {\n    nodesToInsert.push(\n      blockToNode(blockSpec, editor.pmSchema, editor.schema.styleSchema)\n    );\n  }\n\n  const { node, posBeforeNode } = getNodeById(\n    id,\n    editor._tiptapEditor.state.doc\n  );\n\n  if (placement === \"before\") {\n    editor.dispatch(\n      editor._tiptapEditor.state.tr.insert(posBeforeNode, nodesToInsert)\n    );\n  }\n\n  if (placement === \"after\") {\n    editor.dispatch(\n      editor._tiptapEditor.state.tr.insert(\n        posBeforeNode + node.nodeSize,\n        nodesToInsert\n      )\n    );\n  }\n\n  if (placement === \"nested\") {\n    // Case if block doesn't already have children.\n    if (node.childCount < 2) {\n      const blockGroupNode = editor._tiptapEditor.state.schema.nodes[\n        \"blockGroup\"\n      ].create({}, nodesToInsert);\n\n      editor.dispatch(\n        editor._tiptapEditor.state.tr.insert(\n          posBeforeNode + node.firstChild!.nodeSize + 1,\n          blockGroupNode\n        )\n      );\n    }\n  }\n\n  // Now that the `PartialBlock`s have been converted to nodes, we can\n  // re-convert them into full `Block`s.\n  const insertedBlocks: Block<BSchema, I, S>[] = [];\n  for (const node of nodesToInsert) {\n    insertedBlocks.push(\n      nodeToBlock(\n        node,\n        editor.schema.blockSchema,\n        editor.schema.inlineContentSchema,\n        editor.schema.styleSchema,\n        editor.blockCache\n      )\n    );\n  }\n\n  return insertedBlocks;\n}\n\nexport function updateBlock<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blockToUpdate: BlockIdentifier,\n  update: PartialBlock<BSchema, I, S>,\n  editor: BlockNoteEditor<BSchema, I, S>\n): Block<BSchema, I, S> {\n  const ttEditor = editor._tiptapEditor;\n\n  const id =\n    typeof blockToUpdate === \"string\" ? blockToUpdate : blockToUpdate.id;\n  const { posBeforeNode } = getNodeById(id, ttEditor.state.doc);\n\n  ttEditor.commands.BNUpdateBlock(posBeforeNode + 1, update);\n\n  const blockContainerNode = ttEditor.state.doc\n    .resolve(posBeforeNode + 1)\n    .node();\n\n  return nodeToBlock(\n    blockContainerNode,\n    editor.schema.blockSchema,\n    editor.schema.inlineContentSchema,\n    editor.schema.styleSchema,\n    editor.blockCache\n  );\n}\n\nfunction removeBlocksWithCallback<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blocksToRemove: BlockIdentifier[],\n  editor: BlockNoteEditor<BSchema, I, S>,\n  // Should return new removedSize.\n  callback?: (\n    node: Node,\n    pos: number,\n    tr: Transaction,\n    removedSize: number\n  ) => number\n): Block<BSchema, I, S>[] {\n  const ttEditor = editor._tiptapEditor;\n  const tr = ttEditor.state.tr;\n\n  const idsOfBlocksToRemove = new Set<string>(\n    blocksToRemove.map((block) =>\n      typeof block === \"string\" ? block : block.id\n    )\n  );\n  const removedBlocks: Block<BSchema, I, S>[] = [];\n  let removedSize = 0;\n\n  ttEditor.state.doc.descendants((node, pos) => {\n    // Skips traversing nodes after all target blocks have been removed.\n    if (idsOfBlocksToRemove.size === 0) {\n      return false;\n    }\n\n    // Keeps traversing nodes if block with target ID has not been found.\n    if (\n      node.type.name !== \"blockContainer\" ||\n      !idsOfBlocksToRemove.has(node.attrs.id)\n    ) {\n      return true;\n    }\n\n    // Saves the block that is being deleted.\n    removedBlocks.push(\n      nodeToBlock(\n        node,\n        editor.schema.blockSchema,\n        editor.schema.inlineContentSchema,\n        editor.schema.styleSchema,\n        editor.blockCache\n      )\n    );\n    idsOfBlocksToRemove.delete(node.attrs.id);\n\n    // Removes the block and calculates the change in document size.\n    removedSize = callback?.(node, pos, tr, removedSize) || removedSize;\n    const oldDocSize = tr.doc.nodeSize;\n    tr.delete(pos - removedSize - 1, pos - removedSize + node.nodeSize + 1);\n    const newDocSize = tr.doc.nodeSize;\n    removedSize += oldDocSize - newDocSize;\n\n    return false;\n  });\n\n  // Throws an error if now all blocks could be found.\n  if (idsOfBlocksToRemove.size > 0) {\n    const notFoundIds = [...idsOfBlocksToRemove].join(\"\\n\");\n\n    throw Error(\n      \"Blocks with the following IDs could not be found in the editor: \" +\n        notFoundIds\n    );\n  }\n\n  editor.dispatch(tr);\n\n  return removedBlocks;\n}\n\nexport function removeBlocks<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blocksToRemove: BlockIdentifier[],\n  editor: BlockNoteEditor<BSchema, I, S>\n): Block<BSchema, I, S>[] {\n  return removeBlocksWithCallback(blocksToRemove, editor);\n}\n\nexport function replaceBlocks<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blocksToRemove: BlockIdentifier[],\n  blocksToInsert: PartialBlock<BSchema, I, S>[],\n  editor: BlockNoteEditor<BSchema, I, S>\n): {\n  insertedBlocks: Block<BSchema, I, S>[];\n  removedBlocks: Block<BSchema, I, S>[];\n} {\n  const nodesToInsert: Node[] = [];\n  for (const block of blocksToInsert) {\n    nodesToInsert.push(\n      blockToNode(block, editor.pmSchema, editor.schema.styleSchema)\n    );\n  }\n\n  const idOfFirstBlock =\n    typeof blocksToRemove[0] === \"string\"\n      ? blocksToRemove[0]\n      : blocksToRemove[0].id;\n  const removedBlocks = removeBlocksWithCallback(\n    blocksToRemove,\n    editor,\n    (node, pos, tr, removedSize) => {\n      if (node.attrs.id === idOfFirstBlock) {\n        const oldDocSize = tr.doc.nodeSize;\n        tr.insert(pos, nodesToInsert);\n        const newDocSize = tr.doc.nodeSize;\n\n        return removedSize + oldDocSize - newDocSize;\n      }\n\n      return removedSize;\n    }\n  );\n\n  // Now that the `PartialBlock`s have been converted to nodes, we can\n  // re-convert them into full `Block`s.\n  const insertedBlocks: Block<BSchema, I, S>[] = [];\n  for (const node of nodesToInsert) {\n    insertedBlocks.push(\n      nodeToBlock(\n        node,\n        editor.schema.blockSchema,\n        editor.schema.inlineContentSchema,\n        editor.schema.styleSchema,\n        editor.blockCache\n      )\n    );\n  }\n\n  return { insertedBlocks, removedBlocks };\n}\n\n// similar to tiptap insertContentAt\nexport function insertContentAt<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  position: any,\n  nodes: Node[],\n  editor: BlockNoteEditor<BSchema, I, S>,\n  options: {\n    updateSelection: boolean;\n  } = { updateSelection: true }\n) {\n  const tr = editor._tiptapEditor.state.tr;\n\n  // don’t dispatch an empty fragment because this can lead to strange errors\n  // if (content.toString() === \"<>\") {\n  //   return true;\n  // }\n\n  let { from, to } =\n    typeof position === \"number\"\n      ? { from: position, to: position }\n      : { from: position.from, to: position.to };\n\n  let isOnlyTextContent = true;\n  let isOnlyBlockContent = true;\n  // const nodes = isFragment(content) ? content : [content];\n\n  let text = \"\";\n\n  nodes.forEach((node) => {\n    // check if added node is valid\n    node.check();\n\n    if (isOnlyTextContent && node.isText && node.marks.length === 0) {\n      text += node.text;\n    } else {\n      isOnlyTextContent = false;\n    }\n\n    isOnlyBlockContent = isOnlyBlockContent ? node.isBlock : false;\n  });\n\n  // check if we can replace the wrapping node by\n  // the newly inserted content\n  // example:\n  // replace an empty paragraph by an inserted image\n  // instead of inserting the image below the paragraph\n  if (from === to && isOnlyBlockContent) {\n    const { parent } = tr.doc.resolve(from);\n    const isEmptyTextBlock =\n      parent.isTextblock && !parent.type.spec.code && !parent.childCount;\n\n    if (isEmptyTextBlock) {\n      from -= 1;\n      to += 1;\n    }\n  }\n\n  // if there is only plain text we have to use `insertText`\n  // because this will keep the current marks\n  if (isOnlyTextContent) {\n    // if value is string, we can use it directly\n    // otherwise if it is an array, we have to join it\n    // if (Array.isArray(value)) {\n    //   tr.insertText(value.map((v) => v.text || \"\").join(\"\"), from, to);\n    // } else if (typeof value === \"object\" && !!value && !!value.text) {\n    //   tr.insertText(value.text, from, to);\n    // } else {\n    //   tr.insertText(value as string, from, to);\n    // }\n    tr.insertText(text, from, to);\n  } else {\n    tr.replaceWith(from, to, nodes);\n  }\n\n  // set cursor at end of inserted content\n  if (options.updateSelection) {\n    selectionToInsertionEnd(tr, tr.steps.length - 1, -1);\n  }\n\n  editor.dispatch(tr);\n\n  return true;\n}\n", "import { Element as HASTElement, Parent as HASTParent } from \"hast\";\n\n/**\n * Rehype plugin which removes <u> tags. Used to remove underlines before converting HTML to markdown, as Markdown\n * doesn't support underlines.\n */\nexport function removeUnderlines() {\n  const removeUnderlinesHelper = (tree: HASTParent) => {\n    let numChildElements = tree.children.length;\n\n    for (let i = 0; i < numChildElements; i++) {\n      const node = tree.children[i];\n\n      if (node.type === \"element\") {\n        // Recursively removes underlines from child elements.\n        removeUnderlinesHelper(node);\n\n        if ((node as HASTElement).tagName === \"u\") {\n          // Lifts child nodes outside underline element, deletes the underline element, and updates current index &\n          // the number of child elements.\n          if (node.children.length > 0) {\n            tree.children.splice(i, 1, ...node.children);\n\n            const numElementsAdded = node.children.length - 1;\n            numChildElements += numElementsAdded;\n            i += numElementsAdded;\n          } else {\n            tree.children.splice(i, 1);\n\n            numChildElements--;\n            i--;\n          }\n        }\n      }\n    }\n  };\n\n  return removeUnderlinesHelper;\n}\n", "import { Element as HASTElement, Parent as HASTParent } from \"hast\";\nimport { esmDependencies } from \"../../../../util/esmDependencies\";\n\n/**\n * Rehype plugin which adds a space after each checkbox input element. This is\n * because remark doesn't add any spaces between the checkbox input and the text\n * itself, but these are needed for correct Markdown syntax.\n */\nexport function addSpacesToCheckboxes() {\n  const deps = esmDependencies;\n\n  if (!deps) {\n    throw new Error(\n      \"simplifyBlocks requires ESM dependencies to be initialized\"\n    );\n  }\n\n  const helper = (tree: HASTParent) => {\n    if (tree.children && \"length\" in tree.children && tree.children.length) {\n      for (let i = tree.children.length - 1; i >= 0; i--) {\n        const child = tree.children[i];\n        const nextChild =\n          i + 1 < tree.children.length ? tree.children[i + 1] : undefined;\n\n        // Checks for paragraph element after checkbox input element.\n        if (\n          child.type === \"element\" &&\n          child.tagName === \"input\" &&\n          child.properties?.type === \"checkbox\" &&\n          nextChild?.type === \"element\" &&\n          nextChild.tagName === \"p\"\n        ) {\n          // Converts paragraph to span, otherwise remark will think it needs to\n          // be on a new line.\n          nextChild.tagName = \"span\";\n          // Adds a space after the checkbox input element.\n          nextChild.children.splice(\n            0,\n            0,\n            deps.hastUtilFromDom.fromDom(\n              document.createTextNode(\" \")\n            ) as HASTElement\n          );\n        } else {\n          helper(child as HASTParent);\n        }\n      }\n    }\n  };\n\n  return helper;\n}\n", "import { Schema } from \"prosemirror-model\";\nimport { PartialBlock } from \"../../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport {\n  esmDependencies,\n  initializeESMDependencies,\n} from \"../../../util/esmDependencies\";\nimport { createExternalHTMLExporter } from \"../html/externalHTMLExporter\";\nimport { removeUnderlines } from \"./removeUnderlinesRehypePlugin\";\nimport { addSpacesToCheckboxes } from \"./util/addSpacesToCheckboxesRehypePlugin\";\n\n// Needs to be sync because it's used in drag handler event (SideMenuPlugin)\n// Ideally, call `await initializeESMDependencies()` before calling this function\nexport function cleanHTMLToMarkdown(cleanHTMLString: string) {\n  const deps = esmDependencies;\n\n  if (!deps) {\n    throw new Error(\n      \"cleanHTMLToMarkdown requires ESM dependencies to be initialized\"\n    );\n  }\n\n  const markdownString = deps.unified\n    .unified()\n    .use(deps.rehypeParse.default, { fragment: true })\n    .use(removeUnderlines)\n    .use(addSpacesToCheckboxes)\n    .use(deps.rehypeRemark.default)\n    .use(deps.remarkGfm.default)\n    .use(deps.remarkStringify.default, {\n      handlers: { text: (node) => node.value },\n    })\n    .processSync(cleanHTMLString);\n\n  return markdownString.value as string;\n}\n\nexport async function blocksToMarkdown<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  blocks: PartialBlock<BSchema, I, S>[],\n  schema: Schema,\n  editor: BlockNoteEditor<BSchema, I, S>,\n  options: { document?: Document }\n): Promise<string> {\n  await initializeESMDependencies();\n  const exporter = createExternalHTMLExporter(schema, editor);\n  const externalHTML = exporter.exportBlocks(blocks, options);\n\n  return cleanHTMLToMarkdown(externalHTML);\n}\n", "function getChildIndex(node: Element) {\n  return Array.prototype.indexOf.call(node.parentElement!.childNodes, node);\n}\n\nfunction isWhitespaceNode(node: Node) {\n  return node.nodeType === 3 && !/\\S/.test(node.nodeValue || \"\");\n}\n\n/**\n * Step 1, Turns:\n *\n * <ul>\n *  <li>item</li>\n *  <li>\n *   <ul>\n *      <li>...</li>\n *      <li>...</li>\n *   </ul>\n * </li>\n *\n * Into:\n * <ul>\n *  <li>item</li>\n *  <ul>\n *      <li>...</li>\n *      <li>...</li>\n *  </ul>\n * </ul>\n *\n */\nfunction liftNestedListsToParent(element: HTMLElement) {\n  element.querySelectorAll(\"li > ul, li > ol\").forEach((list) => {\n    const index = getChildIndex(list);\n    const parentListItem = list.parentElement!;\n    const siblingsAfter = Array.from(parentListItem.childNodes).slice(\n      index + 1\n    );\n    list.remove();\n    siblingsAfter.forEach((sibling) => {\n      sibling.remove();\n    });\n\n    parentListItem.insertAdjacentElement(\"afterend\", list);\n\n    siblingsAfter.reverse().forEach((sibling) => {\n      if (isWhitespaceNode(sibling)) {\n        return;\n      }\n      const siblingContainer = document.createElement(\"li\");\n      siblingContainer.append(sibling);\n      list.insertAdjacentElement(\"afterend\", siblingContainer);\n    });\n    if (parentListItem.childNodes.length === 0) {\n      parentListItem.remove();\n    }\n  });\n}\n\n/**\n * Step 2, Turns (output of liftNestedListsToParent):\n *\n * <li>item</li>\n * <ul>\n *   <li>...</li>\n *   <li>...</li>\n * </ul>\n *\n * Into:\n * <div>\n *  <li>item</li>\n *  <div data-node-type=\"blockGroup\">\n *      <ul>\n *          <li>...</li>\n *          <li>...</li>\n *      </ul>\n *  </div>\n * </div>\n *\n * This resulting format is parsed\n */\nfunction createGroups(element: HTMLElement) {\n  element.querySelectorAll(\"li + ul, li + ol\").forEach((list) => {\n    const listItem = list.previousElementSibling as HTMLElement;\n    const blockContainer = document.createElement(\"div\");\n\n    listItem.insertAdjacentElement(\"afterend\", blockContainer);\n    blockContainer.append(listItem);\n\n    const blockGroup = document.createElement(\"div\");\n    blockGroup.setAttribute(\"data-node-type\", \"blockGroup\");\n    blockContainer.append(blockGroup);\n\n    while (\n      blockContainer.nextElementSibling?.nodeName === \"UL\" ||\n      blockContainer.nextElementSibling?.nodeName === \"OL\"\n    ) {\n      blockGroup.append(blockContainer.nextElementSibling);\n    }\n  });\n}\n\n// prevent XSS, similar to https://github.com/ProseMirror/prosemirror-view/blob/1251b2b412656a2a06263e4187574beb43651273/src/clipboard.ts#L204\n// https://github.com/TypeCellOS/BlockNote/issues/601\nlet _detachedDoc: Document | null = null;\nfunction detachedDoc() {\n  return (\n    _detachedDoc ||\n    (_detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n  );\n}\n\nexport function nestedListsToBlockNoteStructure(\n  elementOrHTML: HTMLElement | string\n) {\n  if (typeof elementOrHTML === \"string\") {\n    const element = detachedDoc().createElement(\"div\");\n    element.innerHTML = elementOrHTML;\n    elementOrHTML = element;\n  }\n  liftNestedListsToParent(elementOrHTML);\n  createGroups(elementOrHTML);\n  return elementOrHTML;\n}\n", "import { DOMParser, Schema } from \"prosemirror-model\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\n\nimport { Block } from \"../../../blocks/defaultBlocks\";\nimport { nodeToBlock } from \"../../nodeConversions/nodeConversions\";\nimport { nestedListsToBlockNoteStructure } from \"./util/nestedLists\";\nexport async function HTMLToBlocks<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  html: string,\n  blockSchema: BSchema,\n  icSchema: I,\n  styleSchema: S,\n  pmSchema: Schema\n): Promise<Block<BSchema, I, S>[]> {\n  const htmlNode = nestedListsToBlockNoteStructure(html);\n  const parser = DOMParser.fromSchema(pmSchema);\n\n  // Other approach might be to use\n  // const doc = pmSchema.nodes[\"doc\"].createAndFill()!;\n  // and context: doc.resolve(3),\n\n  const parentNode = parser.parse(htmlNode, {\n    topNode: pmSchema.nodes[\"blockGroup\"].create(),\n  });\n\n  const blocks: Block<BSchema, I, S>[] = [];\n\n  for (let i = 0; i < parentNode.childCount; i++) {\n    blocks.push(\n      nodeToBlock(parentNode.child(i), blockSchema, icSchema, styleSchema)\n    );\n  }\n\n  return blocks;\n}\n", "import { Schema } from \"prosemirror-model\";\n\nimport { Block } from \"../../../blocks/defaultBlocks\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../../schema\";\nimport { initializeESMDependencies } from \"../../../util/esmDependencies\";\nimport { HTMLToBlocks } from \"../html/parseHTML\";\n\n// modified version of https://github.com/syntax-tree/mdast-util-to-hast/blob/main/lib/handlers/code.js\n// that outputs a data-language attribute instead of a CSS class (e.g.: language-typescript)\nfunction code(state: any, node: any) {\n  const value = node.value ? node.value + \"\\n\" : \"\";\n  /** @type {Properties} */\n  const properties: any = {};\n\n  if (node.lang) {\n    // changed line\n    properties[\"data-language\"] = node.lang;\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result: any = {\n    type: \"element\",\n    tagName: \"code\",\n    properties,\n    children: [{ type: \"text\", value }],\n  };\n\n  if (node.meta) {\n    result.data = { meta: node.meta };\n  }\n\n  state.patch(node, result);\n  result = state.applyData(node, result);\n\n  // Create `<pre>`.\n  result = {\n    type: \"element\",\n    tagName: \"pre\",\n    properties: {},\n    children: [result],\n  };\n  state.patch(node, result);\n  return result;\n}\n\nexport async function markdownToBlocks<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  markdown: string,\n  blockSchema: BSchema,\n  icSchema: I,\n  styleSchema: S,\n  pmSchema: Schema\n): Promise<Block<BSchema, I, S>[]> {\n  const deps = await initializeESMDependencies();\n  const htmlString = deps.unified\n    .unified()\n    .use(deps.remarkParse.default)\n    .use(deps.remarkGfm.default)\n    .use(deps.remarkRehype.default, {\n      handlers: {\n        ...(deps.remarkRehype.defaultHandlers as any),\n        code,\n      },\n    })\n    .use(deps.rehypeStringify.default)\n    .processSync(markdown);\n\n  return HTMLToBlocks(\n    htmlString.value as string,\n    blockSchema,\n    icSchema,\n    styleSchema,\n    pmSchema\n  );\n}\n", "// from https://raw.githubusercontent.com/ueberdosis/tiptap/develop/packages/core/src/EventEmitter.ts (MIT)\n\ntype StringKeyOf<T> = Extract<keyof T, string>;\ntype CallbackType<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>\n> = T[EventName] extends any[] ? T[EventName] : [T[EventName]];\ntype CallbackFunction<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>\n> = (...props: CallbackType<T, EventName>) => any;\n\nexport class EventEmitter<T extends Record<string, any>> {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private callbacks: { [key: string]: Function[] } = {};\n\n  public on<EventName extends StringKeyOf<T>>(\n    event: EventName,\n    fn: CallbackFunction<T, EventName>\n  ) {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = [];\n    }\n\n    this.callbacks[event].push(fn);\n\n    return () => this.off(event, fn);\n  }\n\n  protected emit<EventName extends StringKeyOf<T>>(\n    event: EventName,\n    ...args: CallbackType<T, EventName>\n  ) {\n    const callbacks = this.callbacks[event];\n\n    if (callbacks) {\n      callbacks.forEach((callback) => callback.apply(this, args));\n    }\n  }\n\n  public off<EventName extends StringKeyOf<T>>(\n    event: EventName,\n    fn?: CallbackFunction<T, EventName>\n  ) {\n    const callbacks = this.callbacks[event];\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter((callback) => callback !== fn);\n      } else {\n        delete this.callbacks[event];\n      }\n    }\n  }\n\n  protected removeAllListeners(): void {\n    this.callbacks = {};\n  }\n}\n", "import { EditorState, Plugin, PluginKey, PluginView } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\n\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { UiElementPosition } from \"../../extensions-shared/UiElementPosition\";\nimport type {\n  BlockFromConfig,\n  FileBlockConfig,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\n\nexport type FilePanelState<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> = UiElementPosition & {\n  // TODO: This typing is not quite right (children should be from BSchema)\n  block: BlockFromConfig<FileBlockConfig, I, S>;\n};\n\nexport class FilePanelView<I extends InlineContentSchema, S extends StyleSchema>\n  implements PluginView\n{\n  public state?: FilePanelState<I, S>;\n  public emitUpdate: () => void;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<\n      Record<string, FileBlockConfig>,\n      I,\n      S\n    >,\n    private readonly pluginKey: PluginKey,\n    private readonly pmView: EditorView,\n    emitUpdate: (state: FilePanelState<I, S>) => void\n  ) {\n    this.emitUpdate = () => {\n      if (!this.state) {\n        throw new Error(\"Attempting to update uninitialized file panel\");\n      }\n\n      emitUpdate(this.state);\n    };\n\n    pmView.dom.addEventListener(\"mousedown\", this.mouseDownHandler);\n    pmView.dom.addEventListener(\"dragstart\", this.dragstartHandler);\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    pmView.root.addEventListener(\"scroll\", this.scrollHandler, true);\n  }\n\n  mouseDownHandler = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  // For dragging the whole editor.\n  dragstartHandler = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  scrollHandler = () => {\n    if (this.state?.show) {\n      const blockElement = this.pmView.root.querySelector(\n        `[data-node-type=\"blockContainer\"][data-id=\"${this.state.block.id}\"]`\n      )!;\n\n      this.state.referencePos = blockElement.getBoundingClientRect();\n      this.emitUpdate();\n    }\n  };\n\n  update(view: EditorView, prevState: EditorState) {\n    const pluginState: {\n      block: BlockFromConfig<FileBlockConfig, I, S>;\n    } = this.pluginKey.getState(view.state);\n\n    if (!this.state?.show && pluginState.block && this.editor.isEditable) {\n      const blockElement = this.pmView.root.querySelector(\n        `[data-node-type=\"blockContainer\"][data-id=\"${pluginState.block.id}\"]`\n      )!;\n\n      this.state = {\n        show: true,\n        referencePos: blockElement.getBoundingClientRect(),\n        block: pluginState.block,\n      };\n\n      this.emitUpdate();\n\n      return;\n    }\n\n    if (\n      !view.state.selection.eq(prevState.selection) ||\n      !view.state.doc.eq(prevState.doc) ||\n      !this.editor.isEditable\n    ) {\n      if (this.state?.show) {\n        this.state.show = false;\n\n        this.emitUpdate();\n      }\n    }\n  }\n\n  closeMenu = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousedown\", this.mouseDownHandler);\n\n    this.pmView.dom.removeEventListener(\"dragstart\", this.dragstartHandler);\n\n    this.pmView.root.removeEventListener(\"scroll\", this.scrollHandler, true);\n  }\n}\n\nconst filePanelPluginKey = new PluginKey(\"FilePanelPlugin\");\n\nexport class FilePanelProsemirrorPlugin<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> extends EventEmitter<any> {\n  private view: FilePanelView<I, S> | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(editor: BlockNoteEditor<Record<string, FileBlockConfig>, I, S>) {\n    super();\n    this.plugin = new Plugin<{\n      block: BlockFromConfig<FileBlockConfig, I, S> | undefined;\n    }>({\n      key: filePanelPluginKey,\n      view: (editorView) => {\n        this.view = new FilePanelView<I, S>(\n          editor,\n          filePanelPluginKey,\n          editorView,\n          (state) => {\n            this.emit(\"update\", state);\n          }\n        );\n        return this.view;\n      },\n      props: {\n        handleKeyDown: (_view, event: KeyboardEvent) => {\n          if (event.key === \"Escape\" && this.shown) {\n            this.view!.closeMenu();\n            return true;\n          }\n          return false;\n        },\n      },\n      state: {\n        init: () => {\n          return {\n            block: undefined,\n          };\n        },\n        apply: (transaction) => {\n          const block: BlockFromConfig<FileBlockConfig, I, S> | undefined =\n            transaction.getMeta(filePanelPluginKey)?.block;\n\n          return {\n            block,\n          };\n        },\n      },\n    });\n  }\n\n  public get shown() {\n    return this.view?.state?.show || false;\n  }\n\n  public onUpdate(callback: (state: FilePanelState<I, S>) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  public closeMenu = () => this.view!.closeMenu();\n}\n", "import { isNodeSelection, isTextSelection, posToDOMRect } from \"@tiptap/core\";\nimport { EditorState, Plugin, PluginKey, PluginView } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\n\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { UiElementPosition } from \"../../extensions-shared/UiElementPosition\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\n\nexport type FormattingToolbarState = UiElementPosition;\n\nexport class FormattingToolbarView implements PluginView {\n  public state?: FormattingToolbarState;\n  public emitUpdate: () => void;\n\n  public preventHide = false;\n  public preventShow = false;\n\n  public shouldShow: (props: {\n    view: EditorView;\n    state: EditorState;\n    from: number;\n    to: number;\n  }) => boolean = ({ state, from, to, view }) => {\n    const { doc, selection } = state;\n    const { empty } = selection;\n\n    // Sometime check for `empty` is not enough.\n    // Doubleclick an empty paragraph returns a node size of 2.\n    // So we check also for an empty text size.\n    const isEmptyTextBlock =\n      !doc.textBetween(from, to).length && isTextSelection(state.selection);\n\n    // check view.hasFocus so that the toolbar doesn't show up when the editor is not focused or when for example a code block is focused\n    return !(!view.hasFocus() || empty || isEmptyTextBlock);\n  };\n\n  constructor(\n    private readonly editor: BlockNoteEditor<\n      BlockSchema,\n      InlineContentSchema,\n      StyleSchema\n    >,\n    private readonly pmView: EditorView,\n    emitUpdate: (state: FormattingToolbarState) => void\n  ) {\n    this.emitUpdate = () => {\n      if (!this.state) {\n        throw new Error(\n          \"Attempting to update uninitialized formatting toolbar\"\n        );\n      }\n\n      emitUpdate(this.state);\n    };\n\n    pmView.dom.addEventListener(\"mousedown\", this.viewMousedownHandler);\n    pmView.dom.addEventListener(\"mouseup\", this.viewMouseupHandler);\n    pmView.dom.addEventListener(\"dragstart\", this.dragHandler);\n    pmView.dom.addEventListener(\"dragover\", this.dragHandler);\n    pmView.dom.addEventListener(\"blur\", this.blurHandler);\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    pmView.root.addEventListener(\"scroll\", this.scrollHandler, true);\n  }\n\n  blurHandler = (event: FocusEvent) => {\n    if (this.preventHide) {\n      this.preventHide = false;\n\n      return;\n    }\n\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    // Checks if the focus is moving to an element outside the editor. If it is,\n    // the toolbar is hidden.\n    if (\n      // An element is clicked.\n      event &&\n      event.relatedTarget &&\n      // Element is inside the editor.\n      (editorWrapper === (event.relatedTarget as Node) ||\n        editorWrapper.contains(event.relatedTarget as Node) ||\n        (event.relatedTarget as HTMLElement).matches(\n          \".bn-ui-container, .bn-ui-container *\"\n        ))\n    ) {\n      return;\n    }\n\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  viewMousedownHandler = () => {\n    this.preventShow = true;\n  };\n\n  viewMouseupHandler = () => {\n    this.preventShow = false;\n    setTimeout(() => this.update(this.pmView));\n  };\n\n  // For dragging the whole editor.\n  dragHandler = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  scrollHandler = () => {\n    if (this.state?.show) {\n      this.state.referencePos = this.getSelectionBoundingBox();\n      this.emitUpdate();\n    }\n  };\n\n  update(view: EditorView, oldState?: EditorState) {\n    // Delays the update to handle edge case with drag and drop, where the view\n    // is blurred asynchronously and happens only after the state update.\n    // Wrapping in a setTimeout gives enough time to wait for the blur event to\n    // occur before updating the toolbar.\n    const { state, composing } = view;\n    const { doc, selection } = state;\n    const isSame =\n      oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection);\n\n    if (composing || isSame) {\n      return;\n    }\n\n    // support for CellSelections\n    const { ranges } = selection;\n    const from = Math.min(...ranges.map((range) => range.$from.pos));\n    const to = Math.max(...ranges.map((range) => range.$to.pos));\n\n    const shouldShow = this.shouldShow?.({\n      view,\n      state,\n      from,\n      to,\n    });\n\n    // Checks if menu should be shown/updated.\n    if (!this.preventShow && (shouldShow || this.preventHide)) {\n      // Unlike other UI elements, we don't prevent the formatting toolbar from\n      // showing when the editor is not editable. This is because some buttons,\n      // e.g. the download file button, should still be accessible. Therefore,\n      // logic for hiding when the editor is non-editable is handled\n      // individually in each button.\n      this.state = {\n        show: true,\n        referencePos: this.getSelectionBoundingBox(),\n      };\n\n      this.emitUpdate();\n\n      return;\n    }\n\n    // Checks if menu should be hidden.\n    if (\n      this.state?.show &&\n      !this.preventHide &&\n      (!shouldShow || this.preventShow || !this.editor.isEditable)\n    ) {\n      this.state.show = false;\n      this.emitUpdate();\n\n      return;\n    }\n  }\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousedown\", this.viewMousedownHandler);\n    this.pmView.dom.removeEventListener(\"mouseup\", this.viewMouseupHandler);\n    this.pmView.dom.removeEventListener(\"dragstart\", this.dragHandler);\n    this.pmView.dom.removeEventListener(\"dragover\", this.dragHandler);\n    this.pmView.dom.removeEventListener(\"blur\", this.blurHandler);\n\n    this.pmView.root.removeEventListener(\"scroll\", this.scrollHandler, true);\n  }\n\n  closeMenu = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  getSelectionBoundingBox() {\n    const { state } = this.pmView;\n    const { selection } = state;\n\n    // support for CellSelections\n    const { ranges } = selection;\n    const from = Math.min(...ranges.map((range) => range.$from.pos));\n    const to = Math.max(...ranges.map((range) => range.$to.pos));\n\n    if (isNodeSelection(selection)) {\n      const node = this.pmView.nodeDOM(from) as HTMLElement;\n\n      if (node) {\n        return node.getBoundingClientRect();\n      }\n    }\n\n    return posToDOMRect(this.pmView, from, to);\n  }\n}\n\nexport const formattingToolbarPluginKey = new PluginKey(\n  \"FormattingToolbarPlugin\"\n);\n\nexport class FormattingToolbarProsemirrorPlugin extends EventEmitter<any> {\n  private view: FormattingToolbarView | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(editor: BlockNoteEditor<any, any, any>) {\n    super();\n    this.plugin = new Plugin({\n      key: formattingToolbarPluginKey,\n      view: (editorView) => {\n        this.view = new FormattingToolbarView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n      props: {\n        handleKeyDown: (_view, event: KeyboardEvent) => {\n          if (event.key === \"Escape\" && this.shown) {\n            this.view!.closeMenu();\n            return true;\n          }\n          return false;\n        },\n      },\n    });\n  }\n\n  public get shown() {\n    return this.view?.state?.show || false;\n  }\n\n  public onUpdate(callback: (state: FormattingToolbarState) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  public closeMenu = () => this.view!.closeMenu();\n}\n", "import { getMarkRange, posToDOMRect, Range } from \"@tiptap/core\";\nimport { EditorView } from \"@tiptap/pm/view\";\nimport { Mark } from \"prosemirror-model\";\nimport { Plugin, PluginKey, PluginView } from \"prosemirror-state\";\n\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { UiElementPosition } from \"../../extensions-shared/UiElementPosition\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\n\nexport type LinkToolbarState = UiElementPosition & {\n  // The hovered link's URL, and the text it's displayed with in the\n  // editor.\n  url: string;\n  text: string;\n};\n\nclass LinkToolbarView implements PluginView {\n  public state?: LinkToolbarState;\n  public emitUpdate: () => void;\n\n  menuUpdateTimer: ReturnType<typeof setTimeout> | undefined;\n  startMenuUpdateTimer: () => void;\n  stopMenuUpdateTimer: () => void;\n\n  mouseHoveredLinkMark: Mark | undefined;\n  mouseHoveredLinkMarkRange: Range | undefined;\n\n  keyboardHoveredLinkMark: Mark | undefined;\n  keyboardHoveredLinkMarkRange: Range | undefined;\n\n  linkMark: Mark | undefined;\n  linkMarkRange: Range | undefined;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<any, any, any>,\n    private readonly pmView: EditorView,\n    emitUpdate: (state: LinkToolbarState) => void\n  ) {\n    this.emitUpdate = () => {\n      if (!this.state) {\n        throw new Error(\"Attempting to update uninitialized link toolbar\");\n      }\n\n      emitUpdate(this.state);\n    };\n\n    this.startMenuUpdateTimer = () => {\n      this.menuUpdateTimer = setTimeout(() => {\n        this.update();\n      }, 250);\n    };\n\n    this.stopMenuUpdateTimer = () => {\n      if (this.menuUpdateTimer) {\n        clearTimeout(this.menuUpdateTimer);\n        this.menuUpdateTimer = undefined;\n      }\n\n      return false;\n    };\n\n    this.pmView.dom.addEventListener(\"mouseover\", this.mouseOverHandler);\n    this.pmView.root.addEventListener(\n      \"click\",\n      this.clickHandler as EventListener,\n      true\n    );\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    this.pmView.root.addEventListener(\"scroll\", this.scrollHandler, true);\n  }\n\n  mouseOverHandler = (event: MouseEvent) => {\n    // Resets the link mark currently hovered by the mouse cursor.\n    this.mouseHoveredLinkMark = undefined;\n    this.mouseHoveredLinkMarkRange = undefined;\n\n    this.stopMenuUpdateTimer();\n\n    if (\n      event.target instanceof HTMLAnchorElement &&\n      event.target.nodeName === \"A\"\n    ) {\n      // Finds link mark at the hovered element's position to update mouseHoveredLinkMark and\n      // mouseHoveredLinkMarkRange.\n      const hoveredLinkElement = event.target;\n      const posInHoveredLinkMark =\n        this.pmView.posAtDOM(hoveredLinkElement, 0) + 1;\n      const resolvedPosInHoveredLinkMark =\n        this.pmView.state.doc.resolve(posInHoveredLinkMark);\n      const marksAtPos = resolvedPosInHoveredLinkMark.marks();\n\n      for (const mark of marksAtPos) {\n        if (\n          mark.type.name === this.pmView.state.schema.mark(\"link\").type.name\n        ) {\n          this.mouseHoveredLinkMark = mark;\n          this.mouseHoveredLinkMarkRange =\n            getMarkRange(resolvedPosInHoveredLinkMark, mark.type, mark.attrs) ||\n            undefined;\n\n          break;\n        }\n      }\n    }\n\n    this.startMenuUpdateTimer();\n\n    return false;\n  };\n\n  clickHandler = (event: MouseEvent) => {\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    if (\n      // Toolbar is open.\n      this.linkMark &&\n      // An element is clicked.\n      event &&\n      event.target &&\n      // The clicked element is not the editor.\n      !(\n        editorWrapper === (event.target as Node) ||\n        editorWrapper.contains(event.target as Node)\n      )\n    ) {\n      if (this.state?.show) {\n        this.state.show = false;\n        this.emitUpdate();\n      }\n    }\n  };\n\n  scrollHandler = () => {\n    if (this.linkMark !== undefined) {\n      if (this.state?.show) {\n        this.state.referencePos = posToDOMRect(\n          this.pmView,\n          this.linkMarkRange!.from,\n          this.linkMarkRange!.to\n        );\n        this.emitUpdate();\n      }\n    }\n  };\n\n  editLink(url: string, text: string) {\n    const tr = this.pmView.state.tr.insertText(\n      text,\n      this.linkMarkRange!.from,\n      this.linkMarkRange!.to\n    );\n    tr.addMark(\n      this.linkMarkRange!.from,\n      this.linkMarkRange!.from + text.length,\n      this.pmView.state.schema.mark(\"link\", { href: url })\n    );\n    this.editor.dispatch(tr);\n    this.pmView.focus();\n\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  }\n\n  deleteLink() {\n    this.editor.dispatch(\n      this.pmView.state.tr\n        .removeMark(\n          this.linkMarkRange!.from,\n          this.linkMarkRange!.to,\n          this.linkMark!.type\n        )\n        .setMeta(\"preventAutolink\", true)\n    );\n    this.pmView.focus();\n\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  }\n\n  update() {\n    if (!this.pmView.hasFocus()) {\n      return;\n    }\n\n    // Saves the currently hovered link mark before it's updated.\n    const prevLinkMark = this.linkMark;\n\n    // Resets the currently hovered link mark.\n    this.linkMark = undefined;\n    this.linkMarkRange = undefined;\n\n    // Resets the link mark currently hovered by the keyboard cursor.\n    this.keyboardHoveredLinkMark = undefined;\n    this.keyboardHoveredLinkMarkRange = undefined;\n\n    // Finds link mark at the editor selection's position to update keyboardHoveredLinkMark and\n    // keyboardHoveredLinkMarkRange.\n    if (this.pmView.state.selection.empty) {\n      const marksAtPos = this.pmView.state.selection.$from.marks();\n\n      for (const mark of marksAtPos) {\n        if (\n          mark.type.name === this.pmView.state.schema.mark(\"link\").type.name\n        ) {\n          this.keyboardHoveredLinkMark = mark;\n          this.keyboardHoveredLinkMarkRange =\n            getMarkRange(\n              this.pmView.state.selection.$from,\n              mark.type,\n              mark.attrs\n            ) || undefined;\n\n          break;\n        }\n      }\n    }\n\n    if (this.mouseHoveredLinkMark) {\n      this.linkMark = this.mouseHoveredLinkMark;\n      this.linkMarkRange = this.mouseHoveredLinkMarkRange;\n    }\n\n    // Keyboard cursor position takes precedence over mouse hovered link.\n    if (this.keyboardHoveredLinkMark) {\n      this.linkMark = this.keyboardHoveredLinkMark;\n      this.linkMarkRange = this.keyboardHoveredLinkMarkRange;\n    }\n\n    if (this.linkMark && this.editor.isEditable) {\n      this.state = {\n        show: true,\n        referencePos: posToDOMRect(\n          this.pmView,\n          this.linkMarkRange!.from,\n          this.linkMarkRange!.to\n        ),\n        url: this.linkMark!.attrs.href,\n        text: this.pmView.state.doc.textBetween(\n          this.linkMarkRange!.from,\n          this.linkMarkRange!.to\n        ),\n      };\n      this.emitUpdate();\n\n      return;\n    }\n\n    // Hides menu.\n    if (\n      this.state?.show &&\n      prevLinkMark &&\n      (!this.linkMark || !this.editor.isEditable)\n    ) {\n      this.state.show = false;\n      this.emitUpdate();\n\n      return;\n    }\n  }\n\n  closeMenu = () => {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate();\n    }\n  };\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mouseover\", this.mouseOverHandler);\n    this.pmView.root.removeEventListener(\"scroll\", this.scrollHandler, true);\n    this.pmView.root.removeEventListener(\n      \"click\",\n      this.clickHandler as EventListener,\n      true\n    );\n  }\n}\n\nexport const linkToolbarPluginKey = new PluginKey(\"LinkToolbarPlugin\");\n\nexport class LinkToolbarProsemirrorPlugin<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> extends EventEmitter<any> {\n  private view: LinkToolbarView | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(editor: BlockNoteEditor<BSchema, I, S>) {\n    super();\n    this.plugin = new Plugin({\n      key: linkToolbarPluginKey,\n      view: (editorView) => {\n        this.view = new LinkToolbarView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n      props: {\n        handleKeyDown: (_view, event: KeyboardEvent) => {\n          if (event.key === \"Escape\" && this.shown) {\n            this.view!.closeMenu();\n            return true;\n          }\n          return false;\n        },\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: LinkToolbarState) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  /**\n   * Edit the currently hovered link.\n   */\n  public editLink = (url: string, text: string) => {\n    this.view!.editLink(url, text);\n  };\n\n  /**\n   * Delete the currently hovered link.\n   */\n  public deleteLink = () => {\n    this.view!.deleteLink();\n  };\n\n  /**\n   * When hovering on/off links using the mouse cursor, the link toolbar will\n   * open & close with a delay.\n   *\n   * This function starts the delay timer, and should be used for when the mouse\n   * cursor enters the link toolbar.\n   */\n  public startHideTimer = () => {\n    this.view!.startMenuUpdateTimer();\n  };\n\n  /**\n   * When hovering on/off links using the mouse cursor, the link toolbar will\n   * open & close with a delay.\n   *\n   * This function stops the delay timer, and should be used for when the mouse\n   * cursor exits the link toolbar.\n   */\n  public stopHideTimer = () => {\n    this.view!.stopMenuUpdateTimer();\n  };\n\n  public get shown() {\n    return this.view?.state?.show || false;\n  }\n\n  public closeMenu = () => this.view!.closeMenu();\n}\n", "import { Fragment, Node, ResolvedPos, Slice } from \"prosemirror-model\";\nimport { Selection } from \"prosemirror-state\";\nimport { Mappable } from \"prosemirror-transform\";\n\n/**\n * This class represents an editor selection which spans multiple nodes/blocks. It's currently only used to allow users\n * to drag multiple blocks at the same time. Expects the selection anchor and head to be between nodes, i.e. just before\n * the first target node and just after the last, and that anchor and head are at the same nesting level.\n *\n * Partially based on ProseMirror's NodeSelection implementation:\n * (https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.ts)\n * MultipleNodeSelection differs from NodeSelection in the following ways:\n * 1. Stores which nodes are included in the selection instead of just a single node.\n * 2. Already expects the selection to start just before the first target node and ends just after the last, while a\n * NodeSelection automatically sets both anchor and head to just before the single target node.\n */\nexport class MultipleNodeSelection extends Selection {\n  nodes: Array<Node>;\n\n  constructor($anchor: ResolvedPos, $head: ResolvedPos) {\n    super($anchor, $head);\n\n    // Parent is at the same nesting level as anchor/head since they are just before/ just after target nodes.\n    const parentNode = $anchor.node();\n\n    this.nodes = [];\n    $anchor.doc.nodesBetween($anchor.pos, $head.pos, (node, _pos, parent) => {\n      if (parent !== null && parent.eq(parentNode)) {\n        this.nodes.push(node);\n        return false;\n      }\n      return;\n    });\n  }\n\n  static create(doc: Node, from: number, to = from): MultipleNodeSelection {\n    return new MultipleNodeSelection(doc.resolve(from), doc.resolve(to));\n  }\n\n  content(): Slice {\n    return new Slice(Fragment.from(this.nodes), 0, 0);\n  }\n\n  eq(selection: Selection): boolean {\n    if (!(selection instanceof MultipleNodeSelection)) {\n      return false;\n    }\n\n    if (this.nodes.length !== selection.nodes.length) {\n      return false;\n    }\n\n    if (this.from !== selection.from || this.to !== selection.to) {\n      return false;\n    }\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      if (!this.nodes[i].eq(selection.nodes[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  map(doc: Node, mapping: Mappable): Selection {\n    const fromResult = mapping.mapResult(this.from);\n    const toResult = mapping.mapResult(this.to);\n\n    if (toResult.deleted) {\n      return Selection.near(doc.resolve(fromResult.pos));\n    }\n\n    if (fromResult.deleted) {\n      return Selection.near(doc.resolve(toResult.pos));\n    }\n\n    return new MultipleNodeSelection(\n      doc.resolve(fromResult.pos),\n      doc.resolve(toResult.pos)\n    );\n  }\n\n  toJSON(): any {\n    return { type: \"node\", anchor: this.anchor, head: this.head };\n  }\n}\n", "import { PluginView } from \"@tiptap/pm/state\";\nimport { Node } from \"prosemirror-model\";\nimport { NodeSelection, Plugin, PluginKey, Selection } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\n\nimport { createExternalHTMLExporter } from \"../../api/exporters/html/externalHTMLExporter\";\nimport { createInternalHTMLSerializer } from \"../../api/exporters/html/internalHTMLSerializer\";\nimport { cleanHTMLToMarkdown } from \"../../api/exporters/markdown/markdownExporter\";\nimport { getBlockInfoFromPos } from \"../../api/getBlockInfoFromPos\";\nimport { Block } from \"../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { UiElementPosition } from \"../../extensions-shared/UiElementPosition\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\nimport { initializeESMDependencies } from \"../../util/esmDependencies\";\nimport { MultipleNodeSelection } from \"./MultipleNodeSelection\";\n\nlet dragImageElement: Element | undefined;\n\nexport type SideMenuState<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> = UiElementPosition & {\n  // The block that the side menu is attached to.\n  block: Block<BSchema, I, S>;\n};\n\nexport function getDraggableBlockFromElement(\n  element: Element,\n  view: EditorView\n) {\n  while (\n    element &&\n    element.parentElement &&\n    element.parentElement !== view.dom &&\n    element.getAttribute?.(\"data-node-type\") !== \"blockContainer\"\n  ) {\n    element = element.parentElement;\n  }\n  if (element.getAttribute?.(\"data-node-type\") !== \"blockContainer\") {\n    return undefined;\n  }\n  return { node: element as HTMLElement, id: element.getAttribute(\"data-id\")! };\n}\n\nfunction blockPositionFromElement(element: Element, view: EditorView) {\n  const block = getDraggableBlockFromElement(element, view);\n\n  if (block && block.node.nodeType === 1) {\n    // TODO: this uses undocumented PM APIs? do we need this / let's add docs?\n    const docView = (view as any).docView;\n    const desc = docView.nearestDesc(block.node, true);\n    if (!desc || desc === docView) {\n      return null;\n    }\n    return desc.posBefore;\n  }\n  return null;\n}\n\nfunction blockPositionsFromSelection(selection: Selection, doc: Node) {\n  // Absolute positions just before the first block spanned by the selection, and just after the last block. Having the\n  // selection start and end just before and just after the target blocks ensures no whitespace/line breaks are left\n  // behind after dragging & dropping them.\n  let beforeFirstBlockPos: number;\n  let afterLastBlockPos: number;\n\n  // Even the user starts dragging blocks but drops them in the same place, the selection will still be moved just\n  // before & just after the blocks spanned by the selection, and therefore doesn't need to change if they try to drag\n  // the same blocks again. If this happens, the anchor & head move out of the block content node they were originally\n  // in. If the anchor should update but the head shouldn't and vice versa, it means the user selection is outside a\n  // block content node, which should never happen.\n  const selectionStartInBlockContent =\n    doc.resolve(selection.from).node().type.spec.group === \"blockContent\";\n  const selectionEndInBlockContent =\n    doc.resolve(selection.to).node().type.spec.group === \"blockContent\";\n\n  // Ensures that entire outermost nodes are selected if the selection spans multiple nesting levels.\n  const minDepth = Math.min(selection.$anchor.depth, selection.$head.depth);\n\n  if (selectionStartInBlockContent && selectionEndInBlockContent) {\n    // Absolute positions at the start of the first block in the selection and at the end of the last block. User\n    // selections will always start and end in block content nodes, but we want the start and end positions of their\n    // parent block nodes, which is why minDepth - 1 is used.\n    const startFirstBlockPos = selection.$from.start(minDepth - 1);\n    const endLastBlockPos = selection.$to.end(minDepth - 1);\n\n    // Shifting start and end positions by one moves them just outside the first and last selected blocks.\n    beforeFirstBlockPos = doc.resolve(startFirstBlockPos - 1).pos;\n    afterLastBlockPos = doc.resolve(endLastBlockPos + 1).pos;\n  } else {\n    beforeFirstBlockPos = selection.from;\n    afterLastBlockPos = selection.to;\n  }\n\n  return { from: beforeFirstBlockPos, to: afterLastBlockPos };\n}\n\nfunction setDragImage(view: EditorView, from: number, to = from) {\n  if (from === to) {\n    // Moves to position to be just after the first (and only) selected block.\n    to += view.state.doc.resolve(from + 1).node().nodeSize;\n  }\n\n  // Parent element is cloned to remove all unselected children without affecting the editor content.\n  const parentClone = view.domAtPos(from).node.cloneNode(true) as Element;\n  const parent = view.domAtPos(from).node as Element;\n\n  const getElementIndex = (parentElement: Element, targetElement: Element) =>\n    Array.prototype.indexOf.call(parentElement.children, targetElement);\n\n  const firstSelectedBlockIndex = getElementIndex(\n    parent,\n    // Expects from position to be just before the first selected block.\n    view.domAtPos(from + 1).node.parentElement!\n  );\n  const lastSelectedBlockIndex = getElementIndex(\n    parent,\n    // Expects to position to be just after the last selected block.\n    view.domAtPos(to - 1).node.parentElement!\n  );\n\n  for (let i = parent.childElementCount - 1; i >= 0; i--) {\n    if (i > lastSelectedBlockIndex || i < firstSelectedBlockIndex) {\n      parentClone.removeChild(parentClone.children[i]);\n    }\n  }\n\n  // dataTransfer.setDragImage(element) only works if element is attached to the DOM.\n  unsetDragImage(view.root);\n  dragImageElement = parentClone;\n\n  // TODO: This is hacky, need a better way of assigning classes to the editor so that they can also be applied to the\n  //  drag preview.\n  const classes = view.dom.className.split(\" \");\n  const inheritedClasses = classes\n    .filter(\n      (className) =>\n        className !== \"ProseMirror\" &&\n        className !== \"bn-root\" &&\n        className !== \"bn-editor\"\n    )\n    .join(\" \");\n\n  dragImageElement.className =\n    dragImageElement.className + \" bn-drag-preview \" + inheritedClasses;\n\n  if (view.root instanceof ShadowRoot) {\n    view.root.appendChild(dragImageElement);\n  } else {\n    view.root.body.appendChild(dragImageElement);\n  }\n}\n\nfunction unsetDragImage(rootEl: Document | ShadowRoot) {\n  if (dragImageElement !== undefined) {\n    if (rootEl instanceof ShadowRoot) {\n      rootEl.removeChild(dragImageElement);\n    } else {\n      rootEl.body.removeChild(dragImageElement);\n    }\n\n    dragImageElement = undefined;\n  }\n}\n\nfunction dragStart<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  e: { dataTransfer: DataTransfer | null; clientY: number },\n  editor: BlockNoteEditor<BSchema, I, S>\n) {\n  if (!e.dataTransfer) {\n    return;\n  }\n\n  const view = editor.prosemirrorView;\n\n  const editorBoundingBox = view.dom.getBoundingClientRect();\n\n  const coords = {\n    left: editorBoundingBox.left + editorBoundingBox.width / 2, // take middle of editor\n    top: e.clientY,\n  };\n\n  const elements = view.root.elementsFromPoint(coords.left, coords.top);\n  let blockEl = undefined;\n\n  for (const element of elements) {\n    if (view.dom.contains(element)) {\n      blockEl = getDraggableBlockFromElement(element, view);\n      break;\n    }\n  }\n\n  if (!blockEl) {\n    return;\n  }\n\n  const pos = blockPositionFromElement(blockEl.node, view);\n  if (pos != null) {\n    const selection = view.state.selection;\n    const doc = view.state.doc;\n\n    const { from, to } = blockPositionsFromSelection(selection, doc);\n\n    const draggedBlockInSelection = from <= pos && pos < to;\n    const multipleBlocksSelected =\n      selection.$anchor.node() !== selection.$head.node() ||\n      selection instanceof MultipleNodeSelection;\n\n    if (draggedBlockInSelection && multipleBlocksSelected) {\n      view.dispatch(\n        view.state.tr.setSelection(MultipleNodeSelection.create(doc, from, to))\n      );\n      setDragImage(view, from, to);\n    } else {\n      view.dispatch(\n        view.state.tr.setSelection(NodeSelection.create(view.state.doc, pos))\n      );\n      setDragImage(view, pos);\n    }\n\n    const selectedSlice = view.state.selection.content();\n    const schema = editor.pmSchema;\n\n    const internalHTMLSerializer = createInternalHTMLSerializer(schema, editor);\n    const internalHTML = internalHTMLSerializer.serializeProseMirrorFragment(\n      selectedSlice.content,\n      {}\n    );\n\n    const externalHTMLExporter = createExternalHTMLExporter(schema, editor);\n    const externalHTML = externalHTMLExporter.exportProseMirrorFragment(\n      selectedSlice.content,\n      {}\n    );\n\n    const plainText = cleanHTMLToMarkdown(externalHTML);\n\n    e.dataTransfer.clearData();\n    e.dataTransfer.setData(\"blocknote/html\", internalHTML);\n    e.dataTransfer.setData(\"text/html\", externalHTML);\n    e.dataTransfer.setData(\"text/plain\", plainText);\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setDragImage(dragImageElement!, 0, 0);\n    view.dragging = { slice: selectedSlice, move: true };\n  }\n}\n\nexport class SideMenuView<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> implements PluginView\n{\n  public state?: SideMenuState<BSchema, I, S>;\n  public readonly emitUpdate: (state: SideMenuState<BSchema, I, S>) => void;\n\n  private needUpdate = false;\n  private mousePos: { x: number; y: number } | undefined;\n\n  // When true, the drag handle with be anchored at the same level as root elements\n  // When false, the drag handle with be just to the left of the element\n  // TODO: Is there any case where we want this to be false?\n  private horizontalPosAnchoredAtRoot: boolean;\n  private horizontalPosAnchor: number;\n\n  private hoveredBlock: HTMLElement | undefined;\n\n  // Used to check if currently dragged content comes from this editor instance.\n  public isDragging = false;\n\n  public menuFrozen = false;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<BSchema, I, S>,\n    private readonly pmView: EditorView,\n    emitUpdate: (state: SideMenuState<BSchema, I, S>) => void\n  ) {\n    this.emitUpdate = () => {\n      if (!this.state) {\n        throw new Error(\"Attempting to update uninitialized side menu\");\n      }\n\n      emitUpdate(this.state);\n    };\n\n    this.horizontalPosAnchoredAtRoot = true;\n    this.horizontalPosAnchor = (\n      this.pmView.dom.firstChild! as HTMLElement\n    ).getBoundingClientRect().x;\n\n    this.pmView.root.addEventListener(\n      \"drop\",\n      this.onDrop as EventListener,\n      true\n    );\n    this.pmView.root.addEventListener(\n      \"dragover\",\n      this.onDragOver as EventListener\n    );\n    initializeESMDependencies();\n    this.pmView.dom.addEventListener(\"dragstart\", this.onDragStart);\n\n    // Shows or updates menu position whenever the cursor moves, if the menu isn't frozen.\n    this.pmView.root.addEventListener(\n      \"mousemove\",\n      this.onMouseMove as EventListener,\n      true\n    );\n\n    // Unfreezes the menu whenever the user clicks.\n    this.pmView.dom.addEventListener(\"mousedown\", this.onMouseDown);\n    // Hides and unfreezes the menu whenever the user presses a key.\n    this.pmView.root.addEventListener(\n      \"keydown\",\n      this.onKeyDown as EventListener,\n      true\n    );\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    this.pmView.root.addEventListener(\"scroll\", this.onScroll, true);\n  }\n\n  updateState = () => {\n    if (this.menuFrozen || !this.mousePos) {\n      return;\n    }\n\n    // Editor itself may have padding or other styling which affects\n    // size/position, so we get the boundingRect of the first child (i.e. the\n    // blockGroup that wraps all blocks in the editor) for more accurate side\n    // menu placement.\n    const editorBoundingBox = (\n      this.pmView.dom.firstChild! as HTMLElement\n    ).getBoundingClientRect();\n\n    this.horizontalPosAnchor = editorBoundingBox.x;\n\n    // Gets block at mouse cursor's vertical position.\n    const coords = {\n      left: editorBoundingBox.left + editorBoundingBox.width / 2, // take middle of editor\n      top: this.mousePos.y,\n    };\n\n    const elements = this.pmView.root.elementsFromPoint(\n      coords.left,\n      coords.top\n    );\n    let block = undefined;\n\n    for (const element of elements) {\n      if (this.pmView.dom.contains(element)) {\n        block = getDraggableBlockFromElement(element, this.pmView);\n        break;\n      }\n    }\n\n    // Closes the menu if the mouse cursor is beyond the editor vertically.\n    if (!block || !this.editor.isEditable) {\n      if (this.state?.show) {\n        this.state.show = false;\n        this.needUpdate = true;\n      }\n\n      return;\n    }\n\n    // Doesn't update if the menu is already open and the mouse cursor is still hovering the same block.\n    if (\n      this.state?.show &&\n      this.hoveredBlock?.hasAttribute(\"data-id\") &&\n      this.hoveredBlock?.getAttribute(\"data-id\") === block.id\n    ) {\n      return;\n    }\n\n    this.hoveredBlock = block.node;\n\n    // Gets the block's content node, which lets to ignore child blocks when determining the block menu's position.\n    const blockContent = block.node.firstChild as HTMLElement;\n\n    if (!blockContent) {\n      return;\n    }\n\n    // Shows or updates elements.\n    if (this.editor.isEditable) {\n      const blockContentBoundingBox = blockContent.getBoundingClientRect();\n\n      this.state = {\n        show: true,\n        referencePos: new DOMRect(\n          this.horizontalPosAnchoredAtRoot\n            ? this.horizontalPosAnchor\n            : blockContentBoundingBox.x,\n          blockContentBoundingBox.y,\n          blockContentBoundingBox.width,\n          blockContentBoundingBox.height\n        ),\n        block: this.editor.getBlock(\n          this.hoveredBlock!.getAttribute(\"data-id\")!\n        )!,\n      };\n      this.needUpdate = true;\n    }\n  };\n\n  /**\n   * Sets isDragging when dragging text.\n   */\n  onDragStart = () => {\n    this.isDragging = true;\n  };\n\n  /**\n   * If the event is outside the editor contents,\n   * we dispatch a fake event, so that we can still drop the content\n   * when dragging / dropping to the side of the editor\n   */\n  onDrop = (event: DragEvent) => {\n    this.editor._tiptapEditor.commands.blur();\n\n    if ((event as any).synthetic || !this.isDragging) {\n      return;\n    }\n\n    const pos = this.pmView.posAtCoords({\n      left: event.clientX,\n      top: event.clientY,\n    });\n\n    this.isDragging = false;\n\n    if (!pos || pos.inside === -1) {\n      const evt = new Event(\"drop\", event) as any;\n      const editorBoundingBox = (\n        this.pmView.dom.firstChild! as HTMLElement\n      ).getBoundingClientRect();\n      evt.clientX =\n        event.clientX < editorBoundingBox.left ||\n        event.clientX > editorBoundingBox.left + editorBoundingBox.width\n          ? editorBoundingBox.left + editorBoundingBox.width / 2\n          : event.clientX;\n      evt.clientY = Math.min(\n        Math.max(event.clientY, editorBoundingBox.top),\n        editorBoundingBox.top + editorBoundingBox.height\n      );\n      evt.dataTransfer = event.dataTransfer;\n      evt.preventDefault = () => event.preventDefault();\n      evt.synthetic = true; // prevent recursion\n      // console.log(\"dispatch fake drop\");\n      this.pmView.dom.dispatchEvent(evt);\n    }\n  };\n\n  /**\n   * If the event is outside the editor contents,\n   * we dispatch a fake event, so that we can still drop the content\n   * when dragging / dropping to the side of the editor\n   */\n  onDragOver = (event: DragEvent) => {\n    if ((event as any).synthetic || !this.isDragging) {\n      return;\n    }\n    const pos = this.pmView.posAtCoords({\n      left: event.clientX,\n      top: event.clientY,\n    });\n\n    if (!pos || pos.inside === -1) {\n      const evt = new Event(\"dragover\", event) as any;\n      const editorBoundingBox = (\n        this.pmView.dom.firstChild! as HTMLElement\n      ).getBoundingClientRect();\n      evt.clientX = editorBoundingBox.left + editorBoundingBox.width / 2;\n      evt.clientY = event.clientY;\n      evt.dataTransfer = event.dataTransfer;\n      evt.preventDefault = () => event.preventDefault();\n      evt.synthetic = true; // prevent recursion\n      // console.log(\"dispatch fake dragover\");\n      this.pmView.dom.dispatchEvent(evt);\n    }\n  };\n\n  onKeyDown = (_event: KeyboardEvent) => {\n    if (this.state?.show && this.editor.isFocused()) {\n      // Typing in editor should hide side menu\n      this.state.show = false;\n      this.emitUpdate(this.state);\n      this.menuFrozen = false;\n    }\n  };\n\n  onMouseDown = () => {\n    if (this.state && this.state.show && this.menuFrozen) {\n      this.menuFrozen = false;\n      this.state.show = false;\n      this.emitUpdate(this.state);\n    }\n  };\n\n  onMouseMove = (event: MouseEvent) => {\n    if (this.menuFrozen) {\n      return;\n    }\n\n    this.mousePos = { x: event.clientX, y: event.clientY };\n\n    // We want the full area of the editor to check if the cursor is hovering\n    // above it though.\n    const editorOuterBoundingBox = this.pmView.dom.getBoundingClientRect();\n    const cursorWithinEditor =\n      this.mousePos.x > editorOuterBoundingBox.left &&\n      this.mousePos.x < editorOuterBoundingBox.right &&\n      this.mousePos.y > editorOuterBoundingBox.top &&\n      this.mousePos.y < editorOuterBoundingBox.bottom;\n\n    const editorWrapper = this.pmView.dom.parentElement!;\n\n    // Doesn't update if the mouse hovers an element that's over the editor but\n    // isn't a part of it or the side menu.\n    if (\n      // Cursor is within the editor area\n      cursorWithinEditor &&\n      // An element is hovered\n      event &&\n      event.target &&\n      // Element is outside the editor\n      !(\n        editorWrapper === event.target ||\n        editorWrapper.contains(event.target as HTMLElement)\n      )\n    ) {\n      if (this.state?.show) {\n        this.state.show = false;\n        this.emitUpdate(this.state);\n      }\n\n      return;\n    }\n\n    this.updateState();\n\n    if (this.needUpdate) {\n      this.emitUpdate(this.state!);\n      this.needUpdate = false;\n    }\n  };\n\n  onScroll = () => {\n    if (this.state?.show) {\n      const blockContent = this.hoveredBlock!.firstChild as HTMLElement;\n      const blockContentBoundingBox = blockContent.getBoundingClientRect();\n\n      this.state.referencePos = new DOMRect(\n        this.horizontalPosAnchoredAtRoot\n          ? this.horizontalPosAnchor\n          : blockContentBoundingBox.x,\n        blockContentBoundingBox.y,\n        blockContentBoundingBox.width,\n        blockContentBoundingBox.height\n      );\n      this.emitUpdate(this.state);\n    }\n  };\n\n  // Needed in cases where the editor state updates without the mouse cursor\n  // moving, as some state updates can require a side menu update. For example,\n  // adding a button to the side menu which removes the block can cause the\n  // block below to jump up into the place of the removed block when clicked,\n  // allowing the user to click the button again without moving the cursor. This\n  // would otherwise not update the side menu, and so clicking the button again\n  // would attempt to remove the same block again, causing an error.\n  update() {\n    const prevBlockId = this.state?.block.id;\n\n    this.updateState();\n\n    if (this.needUpdate && this.state && prevBlockId !== this.state.block.id) {\n      this.emitUpdate(this.state);\n      this.needUpdate = false;\n    }\n  }\n\n  destroy() {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate(this.state);\n    }\n    this.pmView.root.removeEventListener(\n      \"mousemove\",\n      this.onMouseMove as EventListener,\n      true\n    );\n    this.pmView.root.removeEventListener(\n      \"dragover\",\n      this.onDragOver as EventListener\n    );\n    this.pmView.dom.removeEventListener(\"dragstart\", this.onDragStart);\n    this.pmView.root.removeEventListener(\n      \"drop\",\n      this.onDrop as EventListener,\n      true\n    );\n    this.pmView.root.removeEventListener(\"scroll\", this.onScroll, true);\n    this.pmView.dom.removeEventListener(\"mousedown\", this.onMouseDown);\n    this.pmView.root.removeEventListener(\n      \"keydown\",\n      this.onKeyDown as EventListener,\n      true\n    );\n  }\n\n  addBlock() {\n    if (this.state?.show) {\n      this.state.show = false;\n      this.emitUpdate(this.state);\n    }\n\n    const blockContent = this.hoveredBlock!.firstChild! as HTMLElement;\n    const blockContentBoundingBox = blockContent.getBoundingClientRect();\n\n    const pos = this.pmView.posAtCoords({\n      left: blockContentBoundingBox.left + blockContentBoundingBox.width / 2,\n      top: blockContentBoundingBox.top + blockContentBoundingBox.height / 2,\n    });\n    if (!pos) {\n      return;\n    }\n\n    const blockInfo = getBlockInfoFromPos(\n      this.editor._tiptapEditor.state.doc,\n      pos.pos\n    );\n    if (blockInfo === undefined) {\n      return;\n    }\n\n    const { contentNode, startPos, endPos } = blockInfo;\n\n    // Creates a new block if current one is not empty for the suggestion menu to open in.\n    if (\n      contentNode.type.spec.content !== \"inline*\" ||\n      contentNode.textContent.length !== 0\n    ) {\n      const newBlockInsertionPos = endPos + 1;\n      const newBlockContentPos = newBlockInsertionPos + 2;\n\n      this.editor._tiptapEditor\n        .chain()\n        .BNCreateBlock(newBlockInsertionPos)\n        // .BNUpdateBlock(newBlockContentPos, { type: \"paragraph\", props: {} })\n        .setTextSelection(newBlockContentPos)\n        .run();\n    } else {\n      this.editor._tiptapEditor.commands.setTextSelection(startPos + 1);\n    }\n\n    // Focuses and activates the slash menu.\n    this.editor.openSuggestionMenu(\"/\");\n  }\n}\n\nexport const sideMenuPluginKey = new PluginKey(\"SideMenuPlugin\");\n\nexport class SideMenuProsemirrorPlugin<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> extends EventEmitter<any> {\n  public view: SideMenuView<BSchema, I, S> | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(private readonly editor: BlockNoteEditor<BSchema, I, S>) {\n    super();\n    this.plugin = new Plugin({\n      key: sideMenuPluginKey,\n      view: (editorView) => {\n        this.view = new SideMenuView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: SideMenuState<BSchema, I, S>) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  /**\n   * If the block is empty, opens the slash menu. If the block has content,\n   * creates a new block below and opens the slash menu in it.\n   */\n  addBlock = () => this.view!.addBlock();\n\n  /**\n   * Handles drag & drop events for blocks.\n   */\n  blockDragStart = (event: {\n    dataTransfer: DataTransfer | null;\n    clientY: number;\n  }) => {\n    this.view!.isDragging = true;\n    dragStart(event, this.editor);\n  };\n\n  /**\n   * Handles drag & drop events for blocks.\n   */\n  blockDragEnd = () => unsetDragImage(this.editor.prosemirrorView.root);\n  /**\n   * Freezes the side menu. When frozen, the side menu will stay\n   * attached to the same block regardless of which block is hovered by the\n   * mouse cursor.\n   */\n  freezeMenu = () => (this.view!.menuFrozen = true);\n  /**\n   * Unfreezes the side menu. When frozen, the side menu will stay\n   * attached to the same block regardless of which block is hovered by the\n   * mouse cursor.\n   */\n  unfreezeMenu = () => {\n    this.view!.menuFrozen = false;\n    this.view!.state!.show = false;\n    this.view!.emitUpdate(this.view!.state!);\n  };\n}\n", "import { findParentNode } from \"@tiptap/core\";\nimport { EditorState, Plugin, PluginKey } from \"prosemirror-state\";\nimport { Decoration, DecorationSet, EditorView } from \"prosemirror-view\";\n\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { UiElementPosition } from \"../../extensions-shared/UiElementPosition\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\n\nconst findBlock = findParentNode((node) => node.type.name === \"blockContainer\");\n\nexport type SuggestionMenuState = UiElementPosition & {\n  query: string;\n  ignoreQueryLength?: boolean;\n};\n\nclass SuggestionMenuView<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> {\n  public state?: SuggestionMenuState;\n  public emitUpdate: (triggerCharacter: string) => void;\n  private rootEl?: Document | ShadowRoot;\n  pluginState: SuggestionPluginState;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<BSchema, I, S>,\n    emitUpdate: (menuName: string, state: SuggestionMenuState) => void\n  ) {\n    this.pluginState = undefined;\n\n    this.emitUpdate = (menuName: string) => {\n      if (!this.state) {\n        throw new Error(\"Attempting to update uninitialized suggestions menu\");\n      }\n\n      emitUpdate(menuName, {\n        ...this.state,\n        ignoreQueryLength: this.pluginState?.ignoreQueryLength,\n      });\n    };\n\n    this.rootEl = this.editor._tiptapEditor.view.root;\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    this.rootEl.addEventListener(\"scroll\", this.handleScroll, true);\n  }\n\n  handleScroll = () => {\n    if (this.state?.show) {\n      const decorationNode = this.rootEl?.querySelector(\n        `[data-decoration-id=\"${this.pluginState!.decorationId}\"]`\n      );\n      this.state.referencePos = decorationNode!.getBoundingClientRect();\n      this.emitUpdate(this.pluginState!.triggerCharacter!);\n    }\n  };\n\n  update(view: EditorView, prevState: EditorState) {\n    const prev: SuggestionPluginState =\n      suggestionMenuPluginKey.getState(prevState);\n    const next: SuggestionPluginState = suggestionMenuPluginKey.getState(\n      view.state\n    );\n\n    // See how the state changed\n    const started = prev === undefined && next !== undefined;\n    const stopped = prev !== undefined && next === undefined;\n    const changed = prev !== undefined && next !== undefined;\n\n    // Cancel when suggestion isn't active\n    if (!started && !changed && !stopped) {\n      return;\n    }\n\n    this.pluginState = stopped ? prev : next;\n\n    if (stopped || !this.editor.isEditable) {\n      this.state!.show = false;\n      this.emitUpdate(this.pluginState!.triggerCharacter);\n\n      return;\n    }\n\n    const decorationNode = this.rootEl?.querySelector(\n      `[data-decoration-id=\"${this.pluginState!.decorationId}\"]`\n    );\n\n    if (this.editor.isEditable) {\n      this.state = {\n        show: true,\n        referencePos: decorationNode!.getBoundingClientRect(),\n        query: this.pluginState!.query,\n      };\n\n      this.emitUpdate(this.pluginState!.triggerCharacter!);\n    }\n  }\n\n  destroy() {\n    this.rootEl?.removeEventListener(\"scroll\", this.handleScroll, true);\n  }\n\n  closeMenu = () => {\n    this.editor.dispatch(\n      this.editor._tiptapEditor.view.state.tr.setMeta(\n        suggestionMenuPluginKey,\n        null\n      )\n    );\n  };\n\n  clearQuery = () => {\n    if (this.pluginState === undefined) {\n      return;\n    }\n\n    this.editor._tiptapEditor\n      .chain()\n      .focus()\n      .deleteRange({\n        from:\n          this.pluginState.queryStartPos! -\n          (this.pluginState.deleteTriggerCharacter\n            ? this.pluginState.triggerCharacter!.length\n            : 0),\n        to: this.editor._tiptapEditor.state.selection.from,\n      })\n      .run();\n  };\n}\n\ntype SuggestionPluginState =\n  | {\n      triggerCharacter: string;\n      deleteTriggerCharacter: boolean;\n      queryStartPos: number;\n      query: string;\n      decorationId: string;\n      ignoreQueryLength?: boolean;\n    }\n  | undefined;\n\nconst suggestionMenuPluginKey = new PluginKey(\"SuggestionMenuPlugin\");\n\n/**\n * A ProseMirror plugin for suggestions, designed to make '/'-commands possible as well as mentions.\n *\n * This is basically a simplified version of TipTap's [Suggestions](https://github.com/ueberdosis/tiptap/tree/db92a9b313c5993b723c85cd30256f1d4a0b65e1/packages/suggestion) plugin.\n *\n * This version is adapted from the aforementioned version in the following ways:\n * - This version supports generic items instead of only strings (to allow for more advanced filtering for example)\n * - This version hides some unnecessary complexity from the user of the plugin.\n * - This version handles key events differently\n */\nexport class SuggestionMenuProseMirrorPlugin<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> extends EventEmitter<any> {\n  private view: SuggestionMenuView<BSchema, I, S> | undefined;\n  public readonly plugin: Plugin;\n\n  private triggerCharacters: string[] = [];\n\n  constructor(editor: BlockNoteEditor<BSchema, I, S>) {\n    super();\n    const triggerCharacters = this.triggerCharacters;\n    this.plugin = new Plugin({\n      key: suggestionMenuPluginKey,\n\n      view: () => {\n        this.view = new SuggestionMenuView<BSchema, I, S>(\n          editor,\n          (triggerCharacter, state) => {\n            this.emit(`update ${triggerCharacter}`, state);\n          }\n        );\n        return this.view;\n      },\n\n      state: {\n        // Initialize the plugin's internal state.\n        init(): SuggestionPluginState {\n          return undefined;\n        },\n\n        // Apply changes to the plugin state from an editor transaction.\n        apply(transaction, prev, _oldState, newState): SuggestionPluginState {\n          // TODO: More clearly define which transactions should be ignored.\n          if (transaction.getMeta(\"orderedListIndexing\") !== undefined) {\n            return prev;\n          }\n\n          // Either contains the trigger character if the menu should be shown,\n          // or null if it should be hidden.\n          const suggestionPluginTransactionMeta: {\n            triggerCharacter: string;\n            deleteTriggerCharacter?: boolean;\n            ignoreQueryLength?: boolean;\n          } | null = transaction.getMeta(suggestionMenuPluginKey);\n\n          // Only opens a menu of no menu is already open\n          if (\n            typeof suggestionPluginTransactionMeta === \"object\" &&\n            suggestionPluginTransactionMeta !== null &&\n            prev === undefined\n          ) {\n            return {\n              triggerCharacter:\n                suggestionPluginTransactionMeta.triggerCharacter,\n              deleteTriggerCharacter:\n                suggestionPluginTransactionMeta.deleteTriggerCharacter !==\n                false,\n              queryStartPos: newState.selection.from,\n              query: \"\",\n              decorationId: `id_${Math.floor(Math.random() * 0xffffffff)}`,\n              ignoreQueryLength:\n                suggestionPluginTransactionMeta?.ignoreQueryLength,\n            };\n          }\n\n          // Checks if the menu is hidden, in which case it doesn't need to be hidden or updated.\n          if (prev === undefined) {\n            return prev;\n          }\n\n          // Checks if the menu should be hidden.\n          if (\n            // Highlighting text should hide the menu.\n            newState.selection.from !== newState.selection.to ||\n            // Transactions with plugin metadata should hide the menu.\n            suggestionPluginTransactionMeta === null ||\n            // Certain mouse events should hide the menu.\n            // TODO: Change to global mousedown listener.\n            transaction.getMeta(\"focus\") ||\n            transaction.getMeta(\"blur\") ||\n            transaction.getMeta(\"pointer\") ||\n            // Moving the caret before the character which triggered the menu should hide it.\n            (prev.triggerCharacter !== undefined &&\n              newState.selection.from < prev.queryStartPos!)\n          ) {\n            return undefined;\n          }\n\n          const next = { ...prev };\n\n          // Updates the current query.\n          next.query = newState.doc.textBetween(\n            prev.queryStartPos!,\n            newState.selection.from\n          );\n\n          return next;\n        },\n      },\n\n      props: {\n        handleTextInput(view, _from, _to, text) {\n          const suggestionPluginState: SuggestionPluginState = (\n            this as Plugin\n          ).getState(view.state);\n\n          if (\n            triggerCharacters.includes(text) &&\n            suggestionPluginState === undefined\n          ) {\n            view.dispatch(\n              view.state.tr\n                .insertText(text)\n                .scrollIntoView()\n                .setMeta(suggestionMenuPluginKey, {\n                  triggerCharacter: text,\n                })\n            );\n\n            return true;\n          }\n          return false;\n        },\n\n        // Setup decorator on the currently active suggestion.\n        decorations(state) {\n          const suggestionPluginState: SuggestionPluginState = (\n            this as Plugin\n          ).getState(state);\n\n          if (suggestionPluginState === undefined) {\n            return null;\n          }\n\n          // If the menu was opened programmatically by another extension, it may not use a trigger character. In this\n          // case, the decoration is set on the whole block instead, as the decoration range would otherwise be empty.\n          if (!suggestionPluginState.deleteTriggerCharacter) {\n            const blockNode = findBlock(state.selection);\n            if (blockNode) {\n              return DecorationSet.create(state.doc, [\n                Decoration.node(\n                  blockNode.pos,\n                  blockNode.pos + blockNode.node.nodeSize,\n                  {\n                    nodeName: \"span\",\n                    class: \"bn-suggestion-decorator\",\n                    \"data-decoration-id\": suggestionPluginState.decorationId,\n                  }\n                ),\n              ]);\n            }\n          }\n          // Creates an inline decoration around the trigger character.\n          return DecorationSet.create(state.doc, [\n            Decoration.inline(\n              suggestionPluginState.queryStartPos! -\n                suggestionPluginState.triggerCharacter!.length,\n              suggestionPluginState.queryStartPos!,\n              {\n                nodeName: \"span\",\n                class: \"bn-suggestion-decorator\",\n                \"data-decoration-id\": suggestionPluginState.decorationId,\n              }\n            ),\n          ]);\n        },\n      },\n    });\n  }\n\n  public onUpdate(\n    triggerCharacter: string,\n    callback: (state: SuggestionMenuState) => void\n  ) {\n    if (!this.triggerCharacters.includes(triggerCharacter)) {\n      this.addTriggerCharacter(triggerCharacter);\n    }\n    // TODO: be able to remove the triggerCharacter\n    return this.on(`update ${triggerCharacter}`, callback);\n  }\n\n  addTriggerCharacter = (triggerCharacter: string) => {\n    this.triggerCharacters.push(triggerCharacter);\n  };\n\n  // TODO: Should this be called automatically when listeners are removed?\n  removeTriggerCharacter = (triggerCharacter: string) => {\n    this.triggerCharacters = this.triggerCharacters.filter(\n      (c) => c !== triggerCharacter\n    );\n  };\n\n  closeMenu = () => this.view!.closeMenu();\n\n  clearQuery = () => this.view!.clearQuery();\n\n  public get shown() {\n    return this.view?.state?.show || false;\n  }\n}\n\nexport function createSuggestionMenu<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(editor: BlockNoteEditor<BSchema, I, S>, triggerCharacter: string) {\n  editor.suggestionMenus.addTriggerCharacter(triggerCharacter);\n}\n", "import { Plugin, PluginKey, PluginView } from \"prosemirror-state\";\nimport { Decoration, DecorationSet, EditorView } from \"prosemirror-view\";\nimport { nodeToBlock } from \"../../api/nodeConversions/nodeConversions\";\nimport { checkBlockIsDefaultType } from \"../../blocks/defaultBlockTypeGuards\";\nimport { Block, DefaultBlockSchema } from \"../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport {\n  BlockFromConfigNoChildren,\n  BlockSchemaWithBlock,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../../schema\";\nimport { EventEmitter } from \"../../util/EventEmitter\";\nimport { getDraggableBlockFromElement } from \"../SideMenu/SideMenuPlugin\";\n\nlet dragImageElement: HTMLElement | undefined;\n\nexport type TableHandlesState<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> = {\n  show: boolean;\n  referencePosCell: DOMRect;\n  referencePosTable: DOMRect;\n\n  block: BlockFromConfigNoChildren<DefaultBlockSchema[\"table\"], I, S>;\n  colIndex: number;\n  rowIndex: number;\n\n  draggingState:\n    | {\n        draggedCellOrientation: \"row\" | \"col\";\n        originalIndex: number;\n        mousePos: number;\n      }\n    | undefined;\n};\n\nfunction setHiddenDragImage(rootEl: Document | ShadowRoot) {\n  if (dragImageElement) {\n    return;\n  }\n\n  dragImageElement = document.createElement(\"div\");\n  dragImageElement.innerHTML = \"_\";\n  dragImageElement.style.opacity = \"0\";\n  dragImageElement.style.height = \"1px\";\n  dragImageElement.style.width = \"1px\";\n  if (rootEl instanceof Document) {\n    rootEl.body.appendChild(dragImageElement);\n  } else {\n    rootEl.appendChild(dragImageElement);\n  }\n}\n\nfunction unsetHiddenDragImage(rootEl: Document | ShadowRoot) {\n  if (dragImageElement) {\n    if (rootEl instanceof Document) {\n      rootEl.body.removeChild(dragImageElement);\n    } else {\n      rootEl.removeChild(dragImageElement);\n    }\n    dragImageElement = undefined;\n  }\n}\n\nfunction getChildIndex(node: Element) {\n  return Array.prototype.indexOf.call(node.parentElement!.childNodes, node);\n}\n\n// Finds the DOM element corresponding to the table cell that the target element\n// is currently in. If the target element is not in a table cell, returns null.\nfunction domCellAround(target: Element | null): Element | null {\n  while (target && target.nodeName !== \"TD\" && target.nodeName !== \"TH\") {\n    target =\n      target.classList && target.classList.contains(\"ProseMirror\")\n        ? null\n        : (target.parentNode as Element);\n  }\n  return target;\n}\n\n// Hides elements in the DOMwith the provided class names.\nfunction hideElementsWithClassNames(\n  classNames: string[],\n  rootEl: Document | ShadowRoot\n) {\n  classNames.forEach((className) => {\n    const elementsToHide = rootEl.querySelectorAll(className);\n\n    for (let i = 0; i < elementsToHide.length; i++) {\n      (elementsToHide[i] as HTMLElement).style.visibility = \"hidden\";\n    }\n  });\n}\n\nexport class TableHandlesView<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> implements PluginView\n{\n  public state?: TableHandlesState<I, S>;\n  public emitUpdate: () => void;\n\n  public tableId: string | undefined;\n  public tablePos: number | undefined;\n\n  public menuFrozen = false;\n\n  public prevWasEditable: boolean | null = null;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<\n      BlockSchemaWithBlock<\"table\", DefaultBlockSchema[\"table\"]>,\n      I,\n      S\n    >,\n    private readonly pmView: EditorView,\n    emitUpdate: (state: TableHandlesState<I, S>) => void\n  ) {\n    this.emitUpdate = () => {\n      if (!this.state) {\n        throw new Error(\"Attempting to update uninitialized image toolbar\");\n      }\n\n      emitUpdate(this.state);\n    };\n\n    pmView.dom.addEventListener(\"mousemove\", this.mouseMoveHandler);\n\n    pmView.root.addEventListener(\n      \"dragover\",\n      this.dragOverHandler as EventListener\n    );\n    pmView.root.addEventListener(\"drop\", this.dropHandler as EventListener);\n\n    // Setting capture=true ensures that any parent container of the editor that\n    // gets scrolled will trigger the scroll event. Scroll events do not bubble\n    // and so won't propagate to the document by default.\n    pmView.root.addEventListener(\"scroll\", this.scrollHandler, true);\n  }\n\n  mouseMoveHandler = (event: MouseEvent) => {\n    if (this.menuFrozen) {\n      return;\n    }\n\n    const target = domCellAround(event.target as HTMLElement);\n\n    if (!target || !this.editor.isEditable) {\n      if (this.state?.show) {\n        this.state.show = false;\n        this.emitUpdate();\n      }\n      return;\n    }\n\n    const colIndex = getChildIndex(target);\n    const rowIndex = getChildIndex(target.parentElement!);\n    const cellRect = target.getBoundingClientRect();\n    const tableRect =\n      target.parentElement!.parentElement!.getBoundingClientRect();\n\n    const blockEl = getDraggableBlockFromElement(target, this.pmView);\n    if (!blockEl) {\n      return;\n    }\n\n    let tableBlock: Block<any, any, any> | undefined = undefined;\n\n    // Copied from `getBlock`. We don't use `getBlock` since we also need the PM\n    // node for the table, so we would effectively be doing the same work twice.\n    this.editor._tiptapEditor.state.doc.descendants((node, pos) => {\n      if (typeof tableBlock !== \"undefined\") {\n        return false;\n      }\n\n      if (node.type.name !== \"blockContainer\" || node.attrs.id !== blockEl.id) {\n        return true;\n      }\n\n      const block = nodeToBlock(\n        node,\n        this.editor.schema.blockSchema,\n        this.editor.schema.inlineContentSchema,\n        this.editor.schema.styleSchema,\n        this.editor.blockCache\n      );\n\n      if (checkBlockIsDefaultType(\"table\", block, this.editor)) {\n        this.tablePos = pos + 1;\n        tableBlock = block;\n      }\n\n      return false;\n    });\n\n    if (!tableBlock) {\n      return;\n    }\n\n    this.tableId = blockEl.id;\n\n    if (\n      this.state !== undefined &&\n      this.state.show &&\n      this.tableId === blockEl.id &&\n      this.state.rowIndex === rowIndex &&\n      this.state.colIndex === colIndex\n    ) {\n      return;\n    }\n\n    this.state = {\n      show: true,\n      referencePosCell: cellRect,\n      referencePosTable: tableRect,\n\n      block: tableBlock,\n      colIndex: colIndex,\n      rowIndex: rowIndex,\n\n      draggingState: undefined,\n    };\n    this.emitUpdate();\n\n    return false;\n  };\n\n  dragOverHandler = (event: DragEvent) => {\n    if (this.state?.draggingState === undefined) {\n      return;\n    }\n\n    event.preventDefault();\n    event.dataTransfer!.dropEffect = \"move\";\n\n    hideElementsWithClassNames(\n      [\n        \"column-resize-handle\",\n        \"prosemirror-dropcursor-block\",\n        \"prosemirror-dropcursor-inline\",\n      ],\n      this.pmView.root\n    );\n\n    // The mouse cursor coordinates, bounded to the table's bounding box. The\n    // bounding box is shrunk by 1px on each side to ensure that the bounded\n    // coordinates are always inside a table cell.\n    const boundedMouseCoords = {\n      left: Math.min(\n        Math.max(event.clientX, this.state.referencePosTable.left + 1),\n        this.state.referencePosTable.right - 1\n      ),\n      top: Math.min(\n        Math.max(event.clientY, this.state.referencePosTable.top + 1),\n        this.state.referencePosTable.bottom - 1\n      ),\n    };\n\n    // Gets the table cell element that the bounded mouse cursor coordinates lie\n    // in.\n    const tableCellElements = this.pmView.root\n      .elementsFromPoint(boundedMouseCoords.left, boundedMouseCoords.top)\n      .filter(\n        (element) => element.tagName === \"TD\" || element.tagName === \"TH\"\n      );\n    if (tableCellElements.length === 0) {\n      throw new Error(\n        \"Could not find table cell element that the mouse cursor is hovering over.\"\n      );\n    }\n    const tableCellElement = tableCellElements[0];\n\n    let emitStateUpdate = false;\n\n    // Gets current row and column index.\n    const rowIndex = getChildIndex(tableCellElement.parentElement!);\n    const colIndex = getChildIndex(tableCellElement);\n\n    // Checks if the drop cursor needs to be updated. This affects decorations\n    // only so it doesn't trigger a state update.\n    const oldIndex =\n      this.state.draggingState.draggedCellOrientation === \"row\"\n        ? this.state.rowIndex\n        : this.state.colIndex;\n    const newIndex =\n      this.state.draggingState.draggedCellOrientation === \"row\"\n        ? rowIndex\n        : colIndex;\n    const dispatchDecorationsTransaction = newIndex !== oldIndex;\n\n    // Checks if either the hovered cell has changed and updates the row and\n    // column index. Also updates the reference DOMRect.\n    if (this.state.rowIndex !== rowIndex || this.state.colIndex !== colIndex) {\n      this.state.rowIndex = rowIndex;\n      this.state.colIndex = colIndex;\n\n      this.state.referencePosCell = tableCellElement.getBoundingClientRect();\n\n      emitStateUpdate = true;\n    }\n\n    // Checks if the mouse cursor position along the axis that the user is\n    // dragging on has changed and updates it.\n    const mousePos =\n      this.state.draggingState.draggedCellOrientation === \"row\"\n        ? boundedMouseCoords.top\n        : boundedMouseCoords.left;\n    if (this.state.draggingState.mousePos !== mousePos) {\n      this.state.draggingState.mousePos = mousePos;\n\n      emitStateUpdate = true;\n    }\n\n    // Emits a state update if any of the fields have changed.\n    if (emitStateUpdate) {\n      this.emitUpdate();\n    }\n\n    // Dispatches a dummy transaction to force a decorations update if\n    // necessary.\n    if (dispatchDecorationsTransaction) {\n      this.editor.dispatch(\n        this.pmView.state.tr.setMeta(tableHandlesPluginKey, true)\n      );\n    }\n  };\n\n  dropHandler = (event: DragEvent) => {\n    if (this.state === undefined || this.state.draggingState === undefined) {\n      return;\n    }\n\n    event.preventDefault();\n\n    const rows = this.state.block.content.rows;\n\n    if (this.state.draggingState.draggedCellOrientation === \"row\") {\n      const rowToMove = rows[this.state.draggingState.originalIndex];\n      rows.splice(this.state.draggingState.originalIndex, 1);\n      rows.splice(this.state.rowIndex, 0, rowToMove);\n    } else {\n      const cellsToMove = rows.map(\n        (row) => row.cells[this.state!.draggingState!.originalIndex]\n      );\n      rows.forEach((row, rowIndex) => {\n        row.cells.splice(this.state!.draggingState!.originalIndex, 1);\n        row.cells.splice(this.state!.colIndex, 0, cellsToMove[rowIndex]);\n      });\n    }\n\n    this.editor.updateBlock(this.state.block, {\n      type: \"table\",\n      content: {\n        type: \"tableContent\",\n        rows: rows,\n      },\n    });\n  };\n\n  scrollHandler = () => {\n    if (this.state?.show) {\n      const tableElement = this.pmView.root.querySelector(\n        `[data-node-type=\"blockContainer\"][data-id=\"${this.tableId}\"] table`\n      )!;\n      const cellElement = tableElement.querySelector(\n        `tr:nth-child(${this.state.rowIndex + 1}) > td:nth-child(${\n          this.state.colIndex + 1\n        })`\n      )!;\n\n      this.state.referencePosTable = tableElement.getBoundingClientRect();\n      this.state.referencePosCell = cellElement.getBoundingClientRect();\n      this.emitUpdate();\n    }\n  };\n\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousemove\", this.mouseMoveHandler);\n    this.pmView.root.removeEventListener(\n      \"dragover\",\n      this.dragOverHandler as EventListener\n    );\n    this.pmView.root.removeEventListener(\n      \"drop\",\n      this.dropHandler as EventListener\n    );\n    this.pmView.root.removeEventListener(\"scroll\", this.scrollHandler, true);\n  }\n}\n\nexport const tableHandlesPluginKey = new PluginKey(\"TableHandlesPlugin\");\n\nexport class TableHandlesProsemirrorPlugin<\n  I extends InlineContentSchema,\n  S extends StyleSchema\n> extends EventEmitter<any> {\n  private view: TableHandlesView<I, S> | undefined;\n  public readonly plugin: Plugin;\n\n  constructor(\n    private readonly editor: BlockNoteEditor<\n      BlockSchemaWithBlock<\"table\", DefaultBlockSchema[\"table\"]>,\n      I,\n      S\n    >\n  ) {\n    super();\n    this.plugin = new Plugin({\n      key: tableHandlesPluginKey,\n      view: (editorView) => {\n        this.view = new TableHandlesView(editor, editorView, (state) => {\n          this.emit(\"update\", state);\n        });\n        return this.view;\n      },\n      // We use decorations to render the drop cursor when dragging a table row\n      // or column. The decorations are updated in the `dragOverHandler` method.\n      props: {\n        decorations: (state) => {\n          if (\n            this.view === undefined ||\n            this.view.state === undefined ||\n            this.view.state.draggingState === undefined ||\n            this.view.tablePos === undefined\n          ) {\n            return;\n          }\n\n          const newIndex =\n            this.view.state.draggingState.draggedCellOrientation === \"row\"\n              ? this.view.state.rowIndex\n              : this.view.state.colIndex;\n\n          const decorations: Decoration[] = [];\n\n          if (newIndex === this.view.state.draggingState.originalIndex) {\n            return DecorationSet.create(state.doc, decorations);\n          }\n\n          // Gets the table to show the drop cursor in.\n          const tableResolvedPos = state.doc.resolve(this.view.tablePos + 1);\n          const tableNode = tableResolvedPos.node();\n\n          if (this.view.state.draggingState.draggedCellOrientation === \"row\") {\n            // Gets the row at the new index.\n            const rowResolvedPos = state.doc.resolve(\n              tableResolvedPos.posAtIndex(newIndex) + 1\n            );\n            const rowNode = rowResolvedPos.node();\n\n            // Iterates over all cells in the row.\n            for (let i = 0; i < rowNode.childCount; i++) {\n              // Gets each cell in the row.\n              const cellResolvedPos = state.doc.resolve(\n                rowResolvedPos.posAtIndex(i) + 1\n              );\n              const cellNode = cellResolvedPos.node();\n\n              // Creates a decoration at the start or end of each cell,\n              // depending on whether the new index is before or after the\n              // original index.\n              const decorationPos =\n                cellResolvedPos.pos +\n                (newIndex > this.view.state.draggingState.originalIndex\n                  ? cellNode.nodeSize - 2\n                  : 0);\n              decorations.push(\n                // The widget is a small bar which spans the width of the cell.\n                Decoration.widget(decorationPos, () => {\n                  const widget = document.createElement(\"div\");\n                  widget.className = \"bn-table-drop-cursor\";\n                  widget.style.left = \"0\";\n                  widget.style.right = \"0\";\n                  // This is only necessary because the drop indicator's height\n                  // is an even number of pixels, whereas the border between\n                  // table cells is an odd number of pixels. So this makes the\n                  // positioning slightly more consistent regardless of where\n                  // the row is being dropped.\n                  if (\n                    newIndex > this.view!.state!.draggingState!.originalIndex\n                  ) {\n                    widget.style.bottom = \"-2px\";\n                  } else {\n                    widget.style.top = \"-3px\";\n                  }\n                  widget.style.height = \"4px\";\n\n                  return widget;\n                })\n              );\n            }\n          } else {\n            // Iterates over all rows in the table.\n            for (let i = 0; i < tableNode.childCount; i++) {\n              // Gets each row in the table.\n              const rowResolvedPos = state.doc.resolve(\n                tableResolvedPos.posAtIndex(i) + 1\n              );\n\n              // Gets the cell at the new index in the row.\n              const cellResolvedPos = state.doc.resolve(\n                rowResolvedPos.posAtIndex(newIndex) + 1\n              );\n              const cellNode = cellResolvedPos.node();\n\n              // Creates a decoration at the start or end of each cell,\n              // depending on whether the new index is before or after the\n              // original index.\n              const decorationPos =\n                cellResolvedPos.pos +\n                (newIndex > this.view.state.draggingState.originalIndex\n                  ? cellNode.nodeSize - 2\n                  : 0);\n              decorations.push(\n                // The widget is a small bar which spans the height of the cell.\n                Decoration.widget(decorationPos, () => {\n                  const widget = document.createElement(\"div\");\n                  widget.className = \"bn-table-drop-cursor\";\n                  widget.style.top = \"0\";\n                  widget.style.bottom = \"0\";\n                  // This is only necessary because the drop indicator's width\n                  // is an even number of pixels, whereas the border between\n                  // table cells is an odd number of pixels. So this makes the\n                  // positioning slightly more consistent regardless of where\n                  // the column is being dropped.\n                  if (\n                    newIndex > this.view!.state!.draggingState!.originalIndex\n                  ) {\n                    widget.style.right = \"-2px\";\n                  } else {\n                    widget.style.left = \"-3px\";\n                  }\n                  widget.style.width = \"4px\";\n\n                  return widget;\n                })\n              );\n            }\n          }\n\n          return DecorationSet.create(state.doc, decorations);\n        },\n      },\n    });\n  }\n\n  public onUpdate(callback: (state: TableHandlesState<I, S>) => void) {\n    return this.on(\"update\", callback);\n  }\n\n  /**\n   * Callback that should be set on the `dragStart` event for whichever element\n   * is used as the column drag handle.\n   */\n  colDragStart = (event: {\n    dataTransfer: DataTransfer | null;\n    clientX: number;\n  }) => {\n    if (this.view!.state === undefined) {\n      throw new Error(\n        \"Attempted to drag table column, but no table block was hovered prior.\"\n      );\n    }\n\n    this.view!.state.draggingState = {\n      draggedCellOrientation: \"col\",\n      originalIndex: this.view!.state.colIndex,\n      mousePos: event.clientX,\n    };\n    this.view!.emitUpdate();\n\n    this.editor.dispatch(\n      this.editor._tiptapEditor.state.tr.setMeta(tableHandlesPluginKey, {\n        draggedCellOrientation:\n          this.view!.state.draggingState.draggedCellOrientation,\n        originalIndex: this.view!.state.colIndex,\n        newIndex: this.view!.state.colIndex,\n        tablePos: this.view!.tablePos,\n      })\n    );\n\n    setHiddenDragImage(this.editor._tiptapEditor.view.root);\n    event.dataTransfer!.setDragImage(dragImageElement!, 0, 0);\n    event.dataTransfer!.effectAllowed = \"move\";\n  };\n\n  /**\n   * Callback that should be set on the `dragStart` event for whichever element\n   * is used as the row drag handle.\n   */\n  rowDragStart = (event: {\n    dataTransfer: DataTransfer | null;\n    clientY: number;\n  }) => {\n    if (this.view!.state === undefined) {\n      throw new Error(\n        \"Attempted to drag table row, but no table block was hovered prior.\"\n      );\n    }\n\n    this.view!.state.draggingState = {\n      draggedCellOrientation: \"row\",\n      originalIndex: this.view!.state.rowIndex,\n      mousePos: event.clientY,\n    };\n    this.view!.emitUpdate();\n\n    this.editor.dispatch(\n      this.editor._tiptapEditor.state.tr.setMeta(tableHandlesPluginKey, {\n        draggedCellOrientation:\n          this.view!.state.draggingState.draggedCellOrientation,\n        originalIndex: this.view!.state.rowIndex,\n        newIndex: this.view!.state.rowIndex,\n        tablePos: this.view!.tablePos,\n      })\n    );\n\n    setHiddenDragImage(this.editor._tiptapEditor.view.root);\n    event.dataTransfer!.setDragImage(dragImageElement!, 0, 0);\n    event.dataTransfer!.effectAllowed = \"copyMove\";\n  };\n\n  /**\n   * Callback that should be set on the `dragEnd` event for both the element\n   * used as the row drag handle, and the one used as the column drag handle.\n   */\n  dragEnd = () => {\n    if (this.view!.state === undefined) {\n      throw new Error(\n        \"Attempted to drag table row, but no table block was hovered prior.\"\n      );\n    }\n\n    this.view!.state.draggingState = undefined;\n    this.view!.emitUpdate();\n\n    this.editor.dispatch(\n      this.editor._tiptapEditor.state.tr.setMeta(tableHandlesPluginKey, null)\n    );\n\n    unsetHiddenDragImage(this.editor._tiptapEditor.view.root);\n  };\n\n  /**\n   * Freezes the drag handles. When frozen, they will stay attached to the same\n   * cell regardless of which cell is hovered by the mouse cursor.\n   */\n  freezeHandles = () => {\n    this.view!.menuFrozen = true;\n  };\n\n  /**\n   * Unfreezes the drag handles. When frozen, they will stay attached to the\n   * same cell regardless of which cell is hovered by the mouse cursor.\n   */\n  unfreezeHandles = () => {\n    this.view!.menuFrozen = false;\n  };\n}\n", "import { Extension } from \"@tiptap/core\";\nimport { Node } from \"prosemirror-model\";\nimport { NodeSelection, Plugin } from \"prosemirror-state\";\n\nimport { EditorView } from \"prosemirror-view\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { initializeESMDependencies } from \"../../util/esmDependencies\";\nimport { createExternalHTMLExporter } from \"./html/externalHTMLExporter\";\nimport { createInternalHTMLSerializer } from \"./html/internalHTMLSerializer\";\nimport { cleanHTMLToMarkdown } from \"./markdown/markdownExporter\";\n\nasync function selectedFragmentToHTML<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  view: EditorView,\n  editor: BlockNoteEditor<BSchema, I, S>\n): Promise<{\n  internalHTML: string;\n  externalHTML: string;\n  plainText: string;\n}> {\n  const selectedFragment = view.state.selection.content().content;\n\n  const internalHTMLSerializer = await createInternalHTMLSerializer(\n    view.state.schema,\n    editor\n  );\n  const internalHTML = internalHTMLSerializer.serializeProseMirrorFragment(\n    selectedFragment,\n    {}\n  );\n\n  await initializeESMDependencies();\n  const externalHTMLExporter = createExternalHTMLExporter(\n    view.state.schema,\n    editor\n  );\n  const externalHTML = externalHTMLExporter.exportProseMirrorFragment(\n    selectedFragment,\n    {}\n  );\n\n  const plainText = await cleanHTMLToMarkdown(externalHTML);\n\n  return { internalHTML, externalHTML, plainText };\n}\n\nexport const createCopyToClipboardExtension = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>\n) =>\n  Extension.create<{ editor: BlockNoteEditor<BSchema, I, S> }, undefined>({\n    name: \"copyToClipboard\",\n    addProseMirrorPlugins() {\n      return [\n        new Plugin({\n          props: {\n            handleDOMEvents: {\n              copy(view, event) {\n                // Stops the default browser copy behaviour.\n                event.preventDefault();\n                event.clipboardData!.clearData();\n\n                // Checks if a `blockContent` node is being copied and expands\n                // the selection to the parent `blockContainer` node. This is\n                // for the use-case in which only a block without content is\n                // selected, e.g. an image block.\n                if (\n                  \"node\" in view.state.selection &&\n                  (view.state.selection.node as Node).type.spec.group ===\n                    \"blockContent\"\n                ) {\n                  editor.dispatch(\n                    editor._tiptapEditor.state.tr.setSelection(\n                      new NodeSelection(\n                        view.state.doc.resolve(view.state.selection.from - 1)\n                      )\n                    )\n                  );\n                }\n\n                (async () => {\n                  const { internalHTML, externalHTML, plainText } =\n                    await selectedFragmentToHTML(view, editor);\n\n                  // TODO: Writing to other MIME types not working in Safari for\n                  //  some reason.\n                  event.clipboardData!.setData(\"blocknote/html\", internalHTML);\n                  event.clipboardData!.setData(\"text/html\", externalHTML);\n                  event.clipboardData!.setData(\"text/plain\", plainText);\n                })();\n                // Prevent default PM handler to be called\n                return true;\n              },\n              // This is for the use-case in which only a block without content\n              // is selected, e.g. an image block, and dragged (not using the\n              // drag handle).\n              dragstart(view, event) {\n                // Checks if a `NodeSelection` is active.\n                if (!(\"node\" in view.state.selection)) {\n                  return;\n                }\n\n                // Checks if a `blockContent` node is being dragged.\n                if (\n                  (view.state.selection.node as Node).type.spec.group !==\n                  \"blockContent\"\n                ) {\n                  return;\n                }\n\n                // Expands the selection to the parent `blockContainer` node.\n                editor.dispatch(\n                  editor._tiptapEditor.state.tr.setSelection(\n                    new NodeSelection(\n                      view.state.doc.resolve(view.state.selection.from - 1)\n                    )\n                  )\n                );\n\n                // Stops the default browser drag start behaviour.\n                event.preventDefault();\n                event.dataTransfer!.clearData();\n\n                (async () => {\n                  const { internalHTML, externalHTML, plainText } =\n                    await selectedFragmentToHTML(view, editor);\n\n                  // TODO: Writing to other MIME types not working in Safari for\n                  //  some reason.\n                  event.dataTransfer!.setData(\"blocknote/html\", internalHTML);\n                  event.dataTransfer!.setData(\"text/html\", externalHTML);\n                  event.dataTransfer!.setData(\"text/plain\", plainText);\n                })();\n                // Prevent default PM handler to be called\n                return true;\n              },\n            },\n          },\n        }),\n      ];\n    },\n  });\n", "export const acceptedMIMETypes = [\n  \"blocknote/html\",\n  \"Files\",\n  \"text/html\",\n  \"text/plain\",\n] as const;\n", "import type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { PartialBlock } from \"../../blocks/defaultBlocks\";\nimport {\n  BlockSchema,\n  FileBlockConfig,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../../schema\";\nimport { getBlockInfoFromPos } from \"../getBlockInfoFromPos\";\nimport { acceptedMIMETypes } from \"./acceptedMIMETypes\";\n\nfunction checkFileExtensionsMatch(\n  fileExtension1: string,\n  fileExtension2: string\n) {\n  if (!fileExtension1.startsWith(\".\") || !fileExtension2.startsWith(\".\")) {\n    throw new Error(`The strings provided are not valid file extensions.`);\n  }\n\n  return fileExtension1 === fileExtension2;\n}\n\nfunction checkMIMETypesMatch(mimeType1: string, mimeType2: string) {\n  const types1 = mimeType1.split(\"/\");\n  const types2 = mimeType2.split(\"/\");\n\n  if (types1.length !== 2) {\n    throw new Error(`The string ${mimeType1} is not a valid MIME type.`);\n  }\n  if (types2.length !== 2) {\n    throw new Error(`The string ${mimeType2} is not a valid MIME type.`);\n  }\n\n  if (types1[1] === \"*\" || types2[1] === \"*\") {\n    return types1[0] === types2[0];\n  }\n  if (types1[0] === \"*\" || types2[0] === \"*\") {\n    return types1[1] === types2[1];\n  }\n\n  return types1[0] === types2[0] && types1[1] === types2[1];\n}\n\nexport async function handleFileInsertion<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(event: DragEvent | ClipboardEvent, editor: BlockNoteEditor<BSchema, I, S>) {\n  if (!editor.uploadFile) {\n    return;\n  }\n\n  const dataTransfer =\n    \"dataTransfer\" in event ? event.dataTransfer : event.clipboardData;\n  if (dataTransfer === null) {\n    return;\n  }\n\n  let format: (typeof acceptedMIMETypes)[number] | null = null;\n  for (const mimeType of acceptedMIMETypes) {\n    if (dataTransfer.types.includes(mimeType)) {\n      format = mimeType;\n      break;\n    }\n  }\n  if (format !== \"Files\") {\n    return;\n  }\n\n  const items = dataTransfer.items;\n  if (!items) {\n    return;\n  }\n\n  event.preventDefault();\n\n  const fileBlockConfigs = Object.values(editor.schema.blockSchema).filter(\n    (blockConfig) => blockConfig.isFileBlock\n  ) as FileBlockConfig[];\n\n  for (let i = 0; i < items.length; i++) {\n    // Gets file block corresponding to MIME type.\n    let fileBlockType = \"file\";\n    for (const fileBlockConfig of fileBlockConfigs) {\n      for (const mimeType of fileBlockConfig.fileBlockAccept || []) {\n        const isFileExtension = mimeType.startsWith(\".\");\n        const file = items[i].getAsFile();\n\n        if (file) {\n          if (\n            (!isFileExtension &&\n              file.type &&\n              checkMIMETypesMatch(items[i].type, mimeType)) ||\n            (isFileExtension &&\n              checkFileExtensionsMatch(\n                \".\" + file.name.split(\".\").pop(),\n                mimeType\n              ))\n          ) {\n            fileBlockType = fileBlockConfig.type;\n            break;\n          }\n        }\n      }\n    }\n\n    const file = items[i].getAsFile();\n    if (file) {\n      const updateData = await editor.uploadFile(file);\n\n      const fileBlock =\n        typeof updateData === \"string\"\n          ? ({\n              type: fileBlockType,\n              props: {\n                name: file.name,\n                url: updateData,\n              },\n            } as PartialBlock<BSchema, I, S>)\n          : { type: fileBlockType, ...updateData };\n\n      if (event.type === \"paste\") {\n        editor.insertBlocks(\n          [fileBlock],\n          editor.getTextCursorPosition().block,\n          \"after\"\n        );\n      }\n\n      if (event.type === \"drop\") {\n        const coords = {\n          left: (event as DragEvent).clientX,\n          top: (event as DragEvent).clientY,\n        };\n\n        const pos = editor._tiptapEditor.view.posAtCoords(coords);\n        if (!pos) {\n          return;\n        }\n\n        const blockInfo = getBlockInfoFromPos(\n          editor._tiptapEditor.state.doc,\n          pos.pos\n        );\n\n        editor.insertBlocks([fileBlock], blockInfo.id, \"after\");\n      }\n    }\n  }\n}\n", "import { Extension } from \"@tiptap/core\";\nimport { Plugin } from \"prosemirror-state\";\n\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { handleFileInsertion } from \"./handleFileInsertion\";\nimport { nestedListsToBlockNoteStructure } from \"./html/util/nestedLists\";\nimport { acceptedMIMETypes } from \"./acceptedMIMETypes\";\n\nexport const createPasteFromClipboardExtension = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>\n) =>\n  Extension.create<{ editor: BlockNoteEditor<BSchema, I, S> }, undefined>({\n    name: \"pasteFromClipboard\",\n    addProseMirrorPlugins() {\n      return [\n        new Plugin({\n          props: {\n            handleDOMEvents: {\n              paste(_view, event) {\n                event.preventDefault();\n\n                if (!editor.isEditable) {\n                  return;\n                }\n\n                let format: (typeof acceptedMIMETypes)[number] | null = null;\n                for (const mimeType of acceptedMIMETypes) {\n                  if (event.clipboardData!.types.includes(mimeType)) {\n                    format = mimeType;\n                    break;\n                  }\n                }\n                if (format === null) {\n                  return true;\n                }\n\n                if (format === \"Files\") {\n                  handleFileInsertion(event, editor);\n                  return true;\n                }\n\n                let data = event.clipboardData!.getData(format);\n\n                if (format === \"text/html\") {\n                  const htmlNode = nestedListsToBlockNoteStructure(data.trim());\n                  data = htmlNode.innerHTML;\n                }\n\n                editor._tiptapEditor.view.pasteHTML(data);\n\n                return true;\n              },\n            },\n          },\n        }),\n      ];\n    },\n  });\n", "import { Extension } from \"@tiptap/core\";\nimport { Plugin } from \"prosemirror-state\";\n\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { handleFileInsertion } from \"./handleFileInsertion\";\nimport { acceptedMIMETypes } from \"./acceptedMIMETypes\";\n\nexport const createDropFileExtension = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>\n) =>\n  Extension.create<{ editor: BlockNoteEditor<BSchema, I, S> }, undefined>({\n    name: \"dropFile\",\n    addProseMirrorPlugins() {\n      return [\n        new Plugin({\n          props: {\n            handleDOMEvents: {\n              drop(_view, event) {\n                if (!editor.isEditable) {\n                  return;\n                }\n\n                let format: (typeof acceptedMIMETypes)[number] | null = null;\n                for (const mimeType of acceptedMIMETypes) {\n                  if (event.dataTransfer!.types.includes(mimeType)) {\n                    format = mimeType;\n                    break;\n                  }\n                }\n                if (format === null) {\n                  return true;\n                }\n\n                if (format === \"Files\") {\n                  handleFileInsertion(event, editor);\n                  return true;\n                }\n\n                return false;\n              },\n            },\n          },\n        }),\n      ];\n    },\n  });\n", "import { Extension } from \"@tiptap/core\";\nimport { defaultProps } from \"../../blocks/defaultProps\";\n\nexport const BackgroundColorExtension = Extension.create({\n  name: \"blockBackgroundColor\",\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"blockContainer\"],\n        attributes: {\n          backgroundColor: {\n            default: defaultProps.backgroundColor.default,\n            parseHTML: (element) =>\n              element.hasAttribute(\"data-background-color\")\n                ? element.getAttribute(\"data-background-color\")\n                : defaultProps.backgroundColor.default,\n            renderHTML: (attributes) => {\n              if (\n                attributes.backgroundColor ===\n                defaultProps.backgroundColor.default\n              ) {\n                return {};\n              }\n              return {\n                \"data-background-color\": attributes.backgroundColor,\n              };\n            },\n          },\n        },\n      },\n    ];\n  },\n});\n", "import { Extension } from \"@tiptap/core\";\n\nexport const TextAlignmentExtension = Extension.create({\n  name: \"textAlignment\",\n\n  addGlobalAttributes() {\n    return [\n      {\n        // Attribute is applied to block content instead of container so that child blocks don't inherit the text\n        // alignment styling.\n        types: [\n          \"paragraph\",\n          \"heading\",\n          \"bulletListItem\",\n          \"numberedListItem\",\n          \"checkListItem\",\n        ],\n        attributes: {\n          textAlignment: {\n            default: \"left\",\n            parseHTML: (element) => {\n              return element.getAttribute(\"data-text-alignment\");\n            },\n            renderHTML: (attributes) => {\n              if (attributes.textAlignment === \"left\") {\n                return {};\n              }\n              return {\n                \"data-text-alignment\": attributes.textAlignment,\n              };\n            },\n          },\n        },\n      },\n    ];\n  },\n});\n", "import { Extension } from \"@tiptap/core\";\nimport { defaultProps } from \"../../blocks/defaultProps\";\n\nexport const TextColorExtension = Extension.create({\n  name: \"blockTextColor\",\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"blockContainer\"],\n        attributes: {\n          textColor: {\n            default: defaultProps.textColor.default,\n            parseHTML: (element) =>\n              element.hasAttribute(\"data-text-color\")\n                ? element.getAttribute(\"data-text-color\")\n                : defaultProps.textColor.default,\n            renderHTML: (attributes) => {\n              if (attributes.textColor === defaultProps.textColor.default) {\n                return {};\n              }\n              return {\n                \"data-text-color\": attributes.textColor,\n              };\n            },\n          },\n        },\n      },\n    ];\n  },\n});\n", "import { Extension } from \"@tiptap/core\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\n\n// based on https://github.com/ueberdosis/tiptap/blob/40a9404c94c7fef7900610c195536384781ae101/demos/src/Experiments/TrailingNode/Vue/trailing-node.ts\n\n/**\n * Extension based on:\n * - https://github.com/ueberdosis/tiptap/blob/v1/packages/tiptap-extensions/src/extensions/TrailingNode.js\n * - https://github.com/remirror/remirror/blob/e0f1bec4a1e8073ce8f5500d62193e52321155b9/packages/prosemirror-trailing-node/src/trailing-node-plugin.ts\n */\n\nexport interface TrailingNodeOptions {\n  node: string;\n}\n\n/**\n * Add a trailing node to the document so the user can always click at the bottom of the document and start typing\n */\nexport const TrailingNode = Extension.create<TrailingNodeOptions>({\n  name: \"trailingNode\",\n\n  addProseMirrorPlugins() {\n    const plugin = new PluginKey(this.name);\n    // const disabledNodes = Object.entries(this.editor.schema.nodes)\n    //   .map(([, value]) => value)\n    //   .filter((node) => this.options.notAfter.includes(node.name));\n\n    return [\n      new Plugin({\n        key: plugin,\n        appendTransaction: (_, __, state) => {\n          const { doc, tr, schema } = state;\n          const shouldInsertNodeAtEnd = plugin.getState(state);\n          const endPosition = doc.content.size - 2;\n          const type = schema.nodes[\"blockContainer\"];\n          const contentType = schema.nodes[\"paragraph\"];\n          if (!shouldInsertNodeAtEnd) {\n            return;\n          }\n\n          return tr.insert(\n            endPosition,\n            type.create(undefined, contentType.create())\n          );\n        },\n        state: {\n          init: (_, _state) => {\n            // (maybe fix): use same logic as apply() here\n            // so it works when initializing\n          },\n          apply: (tr, value) => {\n            if (!tr.docChanged) {\n              return value;\n            }\n\n            let lastNode = tr.doc.lastChild;\n\n            if (!lastNode || lastNode.type.name !== \"blockGroup\") {\n              throw new Error(\"Expected blockGroup\");\n            }\n\n            lastNode = lastNode.lastChild;\n\n            if (!lastNode || lastNode.type.name !== \"blockContainer\") {\n              throw new Error(\"Expected blockContainer\");\n            }\n\n            const lastContentNode = lastNode.firstChild;\n\n            if (!lastContentNode) {\n              throw new Error(\"Expected blockContent\");\n            }\n\n            // If last node is not empty (size > 4) or it doesn't contain\n            // inline content, we need to add a trailing node.\n            return (\n              lastNode.nodeSize > 4 ||\n              lastContentNode.type.spec.content !== \"inline*\"\n            );\n          },\n        },\n      }),\n    ];\n  },\n});\n", "import { Plugin, PluginKey, TextSelection } from \"prosemirror-state\";\n\nconst PLUGIN_KEY = new PluginKey(\"non-editable-block\");\n// By default, typing with a node selection active will cause ProseMirror to\n// replace the node with one that contains editable content. This plugin blocks\n// this behaviour without also blocking things like keyboard shortcuts:\n//\n// - Lets through key presses that do not include alphanumeric characters. This\n// includes things like backspace/delete/home/end/etc.\n// - Lets through any key presses that include ctrl/meta keys. These will be\n// shortcuts of some kind like ctrl+C/mod+C.\n// - Special case for Enter key which creates a new paragraph block below and\n// sets the selection to it. This is just to bring the UX closer to Notion\n//\n// While a more elegant solution would probably process transactions instead of\n// keystrokes, this brings us most of the way to Notion's UX without much added\n// complexity.\nexport const NonEditableBlockPlugin = () => {\n  return new Plugin({\n    key: PLUGIN_KEY,\n    props: {\n      handleKeyDown: (view, event) => {\n        // Checks for node selection\n        if (\"node\" in view.state.selection) {\n          // Checks if key press uses ctrl/meta modifier\n          if (event.ctrlKey || event.metaKey) {\n            return false;\n          }\n          // Checks if key press is alphanumeric\n          if (event.key.length === 1) {\n            event.preventDefault();\n\n            return true;\n          }\n          // Checks if key press is Enter\n          if (\n            event.key === \"Enter\" &&\n            !event.shiftKey &&\n            !event.altKey &&\n            !event.ctrlKey &&\n            !event.metaKey\n          ) {\n            const tr = view.state.tr;\n            view.dispatch(\n              tr\n                .insert(\n                  view.state.tr.selection.$to.after(),\n                  view.state.schema.nodes[\"paragraph\"].create()\n                )\n                .setSelection(\n                  new TextSelection(\n                    tr.doc.resolve(view.state.tr.selection.$to.after() + 1)\n                  )\n                )\n            );\n\n            return true;\n          }\n        }\n\n        return false;\n      },\n    },\n  });\n};\n", "import { findChildren } from \"@tiptap/core\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\nconst PLUGIN_KEY = new PluginKey(`previous-blocks`);\n\nconst nodeAttributes: Record<string, string> = {\n  // Numbered List Items\n  index: \"index\",\n  // Headings\n  level: \"level\",\n  // All Blocks\n  type: \"type\",\n  depth: \"depth\",\n  \"depth-change\": \"depth-change\",\n};\n\n/**\n * This plugin tracks transformation of Block node attributes, so we can support CSS transitions.\n *\n * Problem it solves: ProseMirror recreates the DOM when transactions happen. So when a transaction changes a Node attribute,\n * it results in a completely new DOM element. This means CSS transitions don't work.\n *\n * Solution: When attributes change on a node, this plugin sets a data-* attribute with the \"previous\" value. This way we can still use CSS transitions. (See block.module.css)\n */\nexport const PreviousBlockTypePlugin = () => {\n  let timeout: any;\n  return new Plugin({\n    key: PLUGIN_KEY,\n    view(_editorView) {\n      return {\n        update: async (view, _prevState) => {\n          if (this.key?.getState(view.state).updatedBlocks.size > 0) {\n            // use setTimeout 0 to clear the decorations so that at least\n            // for one DOM-render the decorations have been applied\n            timeout = setTimeout(() => {\n              view.dispatch(\n                view.state.tr.setMeta(PLUGIN_KEY, { clearUpdate: true })\n              );\n            }, 0);\n          }\n        },\n        destroy: () => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        },\n      };\n    },\n    state: {\n      init() {\n        return {\n          // Block attributes, by block ID, from just before the previous transaction.\n          prevTransactionOldBlockAttrs: {} as any,\n          // Block attributes, by block ID, from just before the current transaction.\n          currentTransactionOldBlockAttrs: {} as any,\n          // Set of IDs of blocks whose attributes changed from the current transaction.\n          updatedBlocks: new Set<string>(),\n        };\n      },\n\n      apply(transaction, prev, oldState, newState) {\n        prev.currentTransactionOldBlockAttrs = {};\n        prev.updatedBlocks.clear();\n\n        if (!transaction.docChanged || oldState.doc.eq(newState.doc)) {\n          return prev;\n        }\n\n        // TODO: Instead of iterating through the entire document, only check nodes affected by the transactions. Will\n        //  also probably require checking nodes affected by the previous transaction too.\n        // We didn't get this to work yet:\n        // const transform = combineTransactionSteps(oldState.doc, [transaction]);\n        // // const { mapping } = transform;\n        // const changes = getChangedRanges(transform);\n        //\n        // changes.forEach(({ oldRange, newRange }) => {\n        // const oldNodes = findChildrenInRange(\n        //   oldState.doc,\n        //   oldRange,\n        //   (node) => node.attrs.id\n        // );\n        //\n        // const newNodes = findChildrenInRange(\n        //   newState.doc,\n        //   newRange,\n        //   (node) => node.attrs.id\n        // );\n\n        const currentTransactionOriginalOldBlockAttrs = {} as any;\n\n        const oldNodes = findChildren(oldState.doc, (node) => node.attrs.id);\n        const oldNodesById = new Map(\n          oldNodes.map((node) => [node.node.attrs.id, node])\n        );\n        const newNodes = findChildren(newState.doc, (node) => node.attrs.id);\n\n        // Traverses all block containers in the new editor state.\n        for (const node of newNodes) {\n          const oldNode = oldNodesById.get(node.node.attrs.id);\n\n          const oldContentNode = oldNode?.node.firstChild;\n          const newContentNode = node.node.firstChild;\n\n          if (oldNode && oldContentNode && newContentNode) {\n            const newAttrs = {\n              index: newContentNode.attrs.index,\n              level: newContentNode.attrs.level,\n              type: newContentNode.type.name,\n              depth: newState.doc.resolve(node.pos).depth,\n            };\n\n            let oldAttrs = {\n              index: oldContentNode.attrs.index,\n              level: oldContentNode.attrs.level,\n              type: oldContentNode.type.name,\n              depth: oldState.doc.resolve(oldNode.pos).depth,\n            };\n\n            currentTransactionOriginalOldBlockAttrs[node.node.attrs.id] =\n              oldAttrs;\n\n            // Whenever a transaction is appended by the OrderedListItemIndexPlugin, it's given the metadata:\n            // { \"orderedListIndexing\": true }\n            // These appended transactions happen immediately after any transaction which causes ordered list item\n            // indices to require updating, including those which trigger animations. Therefore, these animations are\n            // immediately overridden when the PreviousBlockTypePlugin processes the appended transaction, despite only\n            // the listItemIndex attribute changing. To solve this, oldAttrs must be edited for transactions with the\n            // \"orderedListIndexing\" metadata, so the correct animation can be re-triggered.\n            if (transaction.getMeta(\"numberedListIndexing\")) {\n              // If the block existed before the transaction, gets the attributes from before the previous transaction\n              // (i.e. the transaction that caused list item indices to need updating).\n              if (node.node.attrs.id in prev.prevTransactionOldBlockAttrs) {\n                oldAttrs =\n                  prev.prevTransactionOldBlockAttrs[node.node.attrs.id];\n              }\n\n              // Stops list item indices themselves being animated (looks smoother), unless the block's content type is\n              // changing from a numbered list item to something else.\n              if (newAttrs.type === \"numberedListItem\") {\n                oldAttrs.index = newAttrs.index;\n              }\n            }\n\n            prev.currentTransactionOldBlockAttrs[node.node.attrs.id] = oldAttrs;\n\n            // TODO: faster deep equal?\n            if (JSON.stringify(oldAttrs) !== JSON.stringify(newAttrs)) {\n              (oldAttrs as any)[\"depth-change\"] =\n                oldAttrs.depth - newAttrs.depth;\n\n              // for debugging:\n              // console.log(\n              //   \"id:\",\n              //   node.node.attrs.id,\n              //   \"previousBlockTypePlugin changes detected, oldAttrs\",\n              //   oldAttrs,\n              //   \"new\",\n              //   newAttrs\n              // );\n\n              prev.updatedBlocks.add(node.node.attrs.id);\n            }\n          }\n        }\n\n        prev.prevTransactionOldBlockAttrs =\n          currentTransactionOriginalOldBlockAttrs;\n\n        return prev;\n      },\n    },\n    props: {\n      decorations(state) {\n        const pluginState = (this as Plugin).getState(state);\n        if (pluginState.updatedBlocks.size === 0) {\n          return undefined;\n        }\n\n        const decorations: Decoration[] = [];\n\n        state.doc.descendants((node, pos) => {\n          if (!node.attrs.id) {\n            return;\n          }\n\n          if (!pluginState.updatedBlocks.has(node.attrs.id)) {\n            return;\n          }\n\n          const prevAttrs =\n            pluginState.currentTransactionOldBlockAttrs[node.attrs.id];\n          const decorationAttrs: any = {};\n\n          for (const [nodeAttr, val] of Object.entries(prevAttrs)) {\n            decorationAttrs[\"data-prev-\" + nodeAttributes[nodeAttr]] =\n              val || \"none\";\n          }\n\n          // for debugging:\n          // console.log(\n          //   \"previousBlockTypePlugin committing decorations\",\n          //   decorationAttrs\n          // );\n\n          const decoration = Decoration.node(pos, pos + node.nodeSize, {\n            ...decorationAttrs,\n          });\n\n          decorations.push(decoration);\n        });\n\n        return DecorationSet.create(state.doc, decorations);\n      },\n    },\n  });\n};\n", "import { Node } from \"@tiptap/core\";\nimport { Fragment, Node as PMNode, Slice } from \"prosemirror-model\";\nimport { NodeSelection, TextSelection } from \"prosemirror-state\";\n\nimport { getBlockInfoFromPos } from \"../api/getBlockInfoFromPos\";\nimport {\n  blockToNode,\n  inlineContentToNodes,\n  tableContentToNodes,\n} from \"../api/nodeConversions/nodeConversions\";\nimport { PartialBlock } from \"../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../editor/BlockNoteEditor\";\nimport { NonEditableBlockPlugin } from \"../extensions/NonEditableBlocks/NonEditableBlockPlugin\";\nimport { PreviousBlockTypePlugin } from \"../extensions/PreviousBlockType/PreviousBlockTypePlugin\";\nimport {\n  BlockNoteDOMAttributes,\n  BlockSchema,\n  InlineContentSchema,\n  StyleSchema,\n} from \"../schema\";\nimport { mergeCSSClasses } from \"../util/browser\";\nimport { UnreachableCaseError } from \"../util/typescript\";\n\n// Object containing all possible block attributes.\nconst BlockAttributes: Record<string, string> = {\n  blockColor: \"data-block-color\",\n  blockStyle: \"data-block-style\",\n  id: \"data-id\",\n  depth: \"data-depth\",\n  depthChange: \"data-depth-change\",\n};\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    block: {\n      BNCreateBlock: (pos: number) => ReturnType;\n      BNDeleteBlock: (posInBlock: number) => ReturnType;\n      BNMergeBlocks: (posBetweenBlocks: number) => ReturnType;\n      BNSplitBlock: (\n        posInBlock: number,\n        keepType?: boolean,\n        keepProps?: boolean\n      ) => ReturnType;\n      BNUpdateBlock: <\n        BSchema extends BlockSchema,\n        I extends InlineContentSchema,\n        S extends StyleSchema\n      >(\n        posInBlock: number,\n        block: PartialBlock<BSchema, I, S>\n      ) => ReturnType;\n      BNCreateOrUpdateBlock: <\n        BSchema extends BlockSchema,\n        I extends InlineContentSchema,\n        S extends StyleSchema\n      >(\n        posInBlock: number,\n        block: PartialBlock<BSchema, I, S>\n      ) => ReturnType;\n    };\n  }\n}\n\n/**\n * The main \"Block node\" documents consist of\n */\nexport const BlockContainer = Node.create<{\n  domAttributes?: BlockNoteDOMAttributes;\n  editor: BlockNoteEditor<any, any, any>;\n}>({\n  name: \"blockContainer\",\n  group: \"blockContainer\",\n  // A block always contains content, and optionally a blockGroup which contains nested blocks\n  content: \"blockContent blockGroup?\",\n  // Ensures content-specific keyboard handlers trigger first.\n  priority: 50,\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          const attrs: Record<string, string> = {};\n          for (const [nodeAttr, HTMLAttr] of Object.entries(BlockAttributes)) {\n            if (element.getAttribute(HTMLAttr)) {\n              attrs[nodeAttr] = element.getAttribute(HTMLAttr)!;\n            }\n          }\n\n          if (element.getAttribute(\"data-node-type\") === \"blockContainer\") {\n            return attrs;\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const blockOuter = document.createElement(\"div\");\n    blockOuter.className = \"bn-block-outer\";\n    blockOuter.setAttribute(\"data-node-type\", \"blockOuter\");\n    for (const [attribute, value] of Object.entries(HTMLAttributes)) {\n      if (attribute !== \"class\") {\n        blockOuter.setAttribute(attribute, value);\n      }\n    }\n\n    const blockHTMLAttributes = {\n      ...(this.options.domAttributes?.block || {}),\n      ...HTMLAttributes,\n    };\n    const block = document.createElement(\"div\");\n    block.className = mergeCSSClasses(\"bn-block\", blockHTMLAttributes.class);\n    block.setAttribute(\"data-node-type\", this.name);\n    for (const [attribute, value] of Object.entries(blockHTMLAttributes)) {\n      if (attribute !== \"class\") {\n        block.setAttribute(attribute, value);\n      }\n    }\n\n    blockOuter.appendChild(block);\n\n    return {\n      dom: blockOuter,\n      contentDOM: block,\n    };\n  },\n\n  addCommands() {\n    return {\n      // Creates a new text block at a given position.\n      BNCreateBlock:\n        (pos) =>\n        ({ state, dispatch }) => {\n          const newBlock =\n            state.schema.nodes[\"blockContainer\"].createAndFill()!;\n\n          if (dispatch) {\n            state.tr.insert(pos, newBlock).scrollIntoView();\n          }\n\n          return true;\n        },\n      // Deletes a block at a given position.\n      BNDeleteBlock:\n        (posInBlock) =>\n        ({ state, dispatch }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          const { startPos, endPos } = blockInfo;\n\n          if (dispatch) {\n            state.tr.deleteRange(startPos, endPos);\n          }\n\n          return true;\n        },\n      // Updates a block at a given position.\n      BNUpdateBlock:\n        (posInBlock, block) =>\n        ({ state, dispatch }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          const { startPos, endPos, node, contentNode } = blockInfo;\n\n          if (dispatch) {\n            // Adds blockGroup node with child blocks if necessary.\n            if (block.children !== undefined) {\n              const childNodes = [];\n\n              // Creates ProseMirror nodes for each child block, including their descendants.\n              for (const child of block.children) {\n                childNodes.push(\n                  blockToNode(\n                    child,\n                    state.schema,\n                    this.options.editor.schema.styleSchema\n                  )\n                );\n              }\n\n              // Checks if a blockGroup node already exists.\n              if (node.childCount === 2) {\n                // Replaces all child nodes in the existing blockGroup with the ones created earlier.\n                state.tr.replace(\n                  startPos + contentNode.nodeSize + 1,\n                  endPos - 1,\n                  new Slice(Fragment.from(childNodes), 0, 0)\n                );\n              } else {\n                // Inserts a new blockGroup containing the child nodes created earlier.\n                state.tr.insert(\n                  startPos + contentNode.nodeSize,\n                  state.schema.nodes[\"blockGroup\"].create({}, childNodes)\n                );\n              }\n            }\n\n            const oldType = contentNode.type.name;\n            const newType = block.type || oldType;\n\n            // The code below determines the new content of the block.\n            // or \"keep\" to keep as-is\n            let content: PMNode[] | \"keep\" = \"keep\";\n\n            // Has there been any custom content provided?\n            if (block.content) {\n              if (typeof block.content === \"string\") {\n                // Adds a single text node with no marks to the content.\n                content = inlineContentToNodes(\n                  [block.content],\n                  state.schema,\n                  this.options.editor.schema.styleSchema\n                );\n              } else if (Array.isArray(block.content)) {\n                // Adds a text node with the provided styles converted into marks to the content,\n                // for each InlineContent object.\n                content = inlineContentToNodes(\n                  block.content,\n                  state.schema,\n                  this.options.editor.schema.styleSchema\n                );\n              } else if (block.content.type === \"tableContent\") {\n                content = tableContentToNodes(\n                  block.content,\n                  state.schema,\n                  this.options.editor.schema.styleSchema\n                );\n              } else {\n                throw new UnreachableCaseError(block.content.type);\n              }\n            } else {\n              // no custom content has been provided, use existing content IF possible\n\n              // Since some block types contain inline content and others don't,\n              // we either need to call setNodeMarkup to just update type &\n              // attributes, or replaceWith to replace the whole blockContent.\n              const oldContentType = state.schema.nodes[oldType].spec.content;\n              const newContentType = state.schema.nodes[newType].spec.content;\n\n              if (oldContentType === \"\") {\n                // keep old content, because it's empty anyway and should be compatible with\n                // any newContentType\n              } else if (newContentType !== oldContentType) {\n                // the content type changed, replace the previous content\n                content = [];\n              } else {\n                // keep old content, because the content type is the same and should be compatible\n              }\n            }\n\n            // Now, changes the blockContent node type and adds the provided props\n            // as attributes. Also preserves all existing attributes that are\n            // compatible with the new type.\n            //\n            // Use either setNodeMarkup or replaceWith depending on whether the\n            // content is being replaced or not.\n            if (content === \"keep\") {\n              // use setNodeMarkup to only update the type and attributes\n              state.tr.setNodeMarkup(\n                startPos,\n                block.type === undefined\n                  ? undefined\n                  : state.schema.nodes[block.type],\n                {\n                  ...contentNode.attrs,\n                  ...block.props,\n                }\n              );\n            } else {\n              // use replaceWith to replace the content and the block itself\n              // also  reset the selection since replacing the block content\n              // sets it to the next block.\n              state.tr\n                .replaceWith(\n                  startPos,\n                  endPos,\n                  state.schema.nodes[newType].create(\n                    {\n                      ...contentNode.attrs,\n                      ...block.props,\n                    },\n                    content\n                  )\n                )\n                // If the node doesn't contain editable content, we want to\n                // select the whole node. But if it does have editable content,\n                // we want to set the selection to the start of it.\n                .setSelection(\n                  state.schema.nodes[newType].spec.content === \"\"\n                    ? new NodeSelection(state.tr.doc.resolve(startPos))\n                    : state.schema.nodes[newType].spec.content === \"inline*\"\n                    ? new TextSelection(state.tr.doc.resolve(startPos))\n                    : // Need to offset the position as we have to get through the\n                      // `tableRow` and `tableCell` nodes to get to the\n                      // `tableParagraph` node we want to set the selection in.\n                      new TextSelection(state.tr.doc.resolve(startPos + 4))\n                );\n            }\n\n            // Adds all provided props as attributes to the parent blockContainer node too, and also preserves existing\n            // attributes.\n            state.tr.setNodeMarkup(startPos - 1, undefined, {\n              ...node.attrs,\n              ...block.props,\n            });\n          }\n\n          return true;\n        },\n      // Appends the text contents of a block to the nearest previous block, given a position between them. Children of\n      // the merged block are moved out of it first, rather than also being merged.\n      //\n      // In the example below, the position passed into the function is between Block1 and Block2.\n      //\n      // Block1\n      //    Block2\n      // Block3\n      //    Block4\n      //        Block5\n      //\n      // Becomes:\n      //\n      // Block1\n      //    Block2Block3\n      // Block4\n      //     Block5\n      BNMergeBlocks:\n        (posBetweenBlocks) =>\n        ({ state, dispatch }) => {\n          const nextNodeIsBlock =\n            state.doc.resolve(posBetweenBlocks + 1).node().type.name ===\n            \"blockContainer\";\n          const prevNodeIsBlock =\n            state.doc.resolve(posBetweenBlocks - 1).node().type.name ===\n            \"blockContainer\";\n\n          if (!nextNodeIsBlock || !prevNodeIsBlock) {\n            return false;\n          }\n\n          const nextBlockInfo = getBlockInfoFromPos(\n            state.doc,\n            posBetweenBlocks + 1\n          );\n\n          const { node, contentNode, startPos, endPos, depth } = nextBlockInfo!;\n\n          // Removes a level of nesting all children of the next block by 1 level, if it contains both content and block\n          // group nodes.\n          if (node.childCount === 2) {\n            const childBlocksStart = state.doc.resolve(\n              startPos + contentNode.nodeSize + 1\n            );\n            const childBlocksEnd = state.doc.resolve(endPos - 1);\n            const childBlocksRange =\n              childBlocksStart.blockRange(childBlocksEnd);\n\n            // Moves the block group node inside the block into the block group node that the current block is in.\n            if (dispatch) {\n              state.tr.lift(childBlocksRange!, depth - 1);\n            }\n          }\n\n          let prevBlockEndPos = posBetweenBlocks - 1;\n          let prevBlockInfo = getBlockInfoFromPos(state.doc, prevBlockEndPos);\n\n          // Finds the nearest previous block, regardless of nesting level.\n          while (prevBlockInfo!.numChildBlocks > 0) {\n            prevBlockEndPos--;\n            prevBlockInfo = getBlockInfoFromPos(state.doc, prevBlockEndPos);\n            if (prevBlockInfo === undefined) {\n              return false;\n            }\n          }\n\n          // Deletes next block and adds its text content to the nearest previous block.\n\n          if (dispatch) {\n            dispatch(\n              state.tr\n                .deleteRange(startPos, startPos + contentNode.nodeSize)\n                .replace(\n                  prevBlockEndPos - 1,\n                  startPos,\n                  new Slice(contentNode.content, 0, 0)\n                )\n                .scrollIntoView()\n            );\n\n            state.tr.setSelection(\n              new TextSelection(state.doc.resolve(prevBlockEndPos - 1))\n            );\n          }\n\n          return true;\n        },\n      // Splits a block at a given position. Content after the position is moved to a new block below, at the same\n      // nesting level.\n      // - `keepType` is usually false, unless the selection is at the start of\n      // a block.\n      // - `keepProps` is usually true when `keepType` is true, except for when\n      // creating new list item blocks with Enter.\n      BNSplitBlock:\n        (posInBlock, keepType, keepProps) =>\n        ({ state, dispatch }) => {\n          const blockInfo = getBlockInfoFromPos(state.doc, posInBlock);\n          if (blockInfo === undefined) {\n            return false;\n          }\n\n          const { contentNode, contentType, startPos, endPos, depth } =\n            blockInfo;\n\n          const originalBlockContent = state.doc.cut(startPos + 1, posInBlock);\n          const newBlockContent = state.doc.cut(posInBlock, endPos - 1);\n\n          const newBlock =\n            state.schema.nodes[\"blockContainer\"].createAndFill()!;\n\n          const newBlockInsertionPos = endPos + 1;\n          const newBlockContentPos = newBlockInsertionPos + 2;\n\n          if (dispatch) {\n            // Creates a new block. Since the schema requires it to have a content node, a paragraph node is created\n            // automatically, spanning newBlockContentPos to newBlockContentPos + 1.\n            state.tr.insert(newBlockInsertionPos, newBlock);\n\n            // Replaces the content of the newly created block's content node. Doesn't replace the whole content node so\n            // its type doesn't change.\n            state.tr.replace(\n              newBlockContentPos,\n              newBlockContentPos + 1,\n              newBlockContent.content.size > 0\n                ? new Slice(\n                    Fragment.from(newBlockContent),\n                    depth + 2,\n                    depth + 2\n                  )\n                : undefined\n            );\n\n            // Changes the type of the content node. The range doesn't matter as long as both from and to positions are\n            // within the content node.\n            if (keepType) {\n              state.tr.setBlockType(\n                newBlockContentPos,\n                newBlockContentPos,\n                state.schema.node(contentType).type,\n                keepProps ? contentNode.attrs : undefined\n              );\n            }\n\n            // Sets the selection to the start of the new block's content node.\n            state.tr.setSelection(\n              new TextSelection(state.doc.resolve(newBlockContentPos))\n            );\n\n            // Replaces the content of the original block's content node. Doesn't replace the whole content node so its\n            // type doesn't change.\n            state.tr.replace(\n              startPos + 1,\n              endPos - 1,\n              originalBlockContent.content.size > 0\n                ? new Slice(\n                    Fragment.from(originalBlockContent),\n                    depth + 2,\n                    depth + 2\n                  )\n                : undefined\n            );\n\n            state.tr.scrollIntoView();\n          }\n\n          return true;\n        },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [PreviousBlockTypePlugin(), NonEditableBlockPlugin()];\n  },\n\n  addKeyboardShortcuts() {\n    // handleBackspace is partially adapted from https://github.com/ueberdosis/tiptap/blob/ed56337470efb4fd277128ab7ef792b37cfae992/packages/core/src/extensions/keymap.ts\n    const handleBackspace = () =>\n      this.editor.commands.first(({ commands }) => [\n        // Deletes the selection if it's not empty.\n        () => commands.deleteSelection(),\n        // Undoes an input rule if one was triggered in the last editor state change.\n        () => commands.undoInputRule(),\n        // Reverts block content type to a paragraph if the selection is at the start of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { contentType, startPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart = state.selection.from === startPos + 1;\n            const isParagraph = contentType.name === \"paragraph\";\n\n            if (selectionAtBlockStart && !isParagraph) {\n              return commands.BNUpdateBlock(state.selection.from, {\n                type: \"paragraph\",\n                props: {},\n              });\n            }\n\n            return false;\n          }),\n        // Removes a level of nesting if the block is indented if the selection is at the start of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { startPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart = state.selection.from === startPos + 1;\n\n            if (selectionAtBlockStart) {\n              return commands.liftListItem(\"blockContainer\");\n            }\n\n            return false;\n          }),\n        // Merges block with the previous one if it isn't indented, isn't the first block in the doc, and the selection\n        // is at the start of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { depth, startPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart = state.selection.from === startPos + 1;\n            const selectionEmpty = state.selection.empty;\n            const blockAtDocStart = startPos === 2;\n\n            const posBetweenBlocks = startPos - 1;\n\n            if (\n              !blockAtDocStart &&\n              selectionAtBlockStart &&\n              selectionEmpty &&\n              depth === 2\n            ) {\n              return commands.BNMergeBlocks(posBetweenBlocks);\n            }\n\n            return false;\n          }),\n      ]);\n\n    const handleDelete = () =>\n      this.editor.commands.first(({ commands }) => [\n        // Deletes the selection if it's not empty.\n        () => commands.deleteSelection(),\n        // Merges block with the next one (at the same nesting level or lower),\n        // if one exists, the block has no children, and the selection is at the\n        // end of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { node, depth, endPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const blockAtDocEnd = endPos === state.doc.nodeSize - 4;\n            const selectionAtBlockEnd = state.selection.from === endPos - 1;\n            const selectionEmpty = state.selection.empty;\n            const hasChildBlocks = node.childCount === 2;\n\n            if (\n              !blockAtDocEnd &&\n              selectionAtBlockEnd &&\n              selectionEmpty &&\n              !hasChildBlocks\n            ) {\n              let oldDepth = depth;\n              let newPos = endPos + 2;\n              let newDepth = state.doc.resolve(newPos).depth;\n\n              while (newDepth < oldDepth) {\n                oldDepth = newDepth;\n                newPos += 2;\n                newDepth = state.doc.resolve(newPos).depth;\n              }\n\n              return commands.BNMergeBlocks(newPos - 1);\n            }\n\n            return false;\n          }),\n      ]);\n\n    const handleEnter = () =>\n      this.editor.commands.first(({ commands }) => [\n        // Removes a level of nesting if the block is empty & indented, while the selection is also empty & at the start\n        // of the block.\n        () =>\n          commands.command(({ state }) => {\n            const { contentNode, depth } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const selectionEmpty =\n              state.selection.anchor === state.selection.head;\n            const blockEmpty = contentNode.childCount === 0;\n            const blockIndented = depth > 2;\n\n            if (\n              selectionAtBlockStart &&\n              selectionEmpty &&\n              blockEmpty &&\n              blockIndented\n            ) {\n              return commands.liftListItem(\"blockContainer\");\n            }\n\n            return false;\n          }),\n        // Creates a new block and moves the selection to it if the current one is empty, while the selection is also\n        // empty & at the start of the block.\n        () =>\n          commands.command(({ state, chain }) => {\n            const { contentNode, endPos } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const selectionEmpty =\n              state.selection.anchor === state.selection.head;\n            const blockEmpty = contentNode.childCount === 0;\n\n            if (selectionAtBlockStart && selectionEmpty && blockEmpty) {\n              const newBlockInsertionPos = endPos + 1;\n              const newBlockContentPos = newBlockInsertionPos + 2;\n\n              chain()\n                .BNCreateBlock(newBlockInsertionPos)\n                .setTextSelection(newBlockContentPos)\n                .run();\n\n              return true;\n            }\n\n            return false;\n          }),\n        // Splits the current block, moving content inside that's after the cursor to a new text block below. Also\n        // deletes the selection beforehand, if it's not empty.\n        () =>\n          commands.command(({ state, chain }) => {\n            const { contentNode } = getBlockInfoFromPos(\n              state.doc,\n              state.selection.from\n            )!;\n\n            const selectionAtBlockStart =\n              state.selection.$anchor.parentOffset === 0;\n            const blockEmpty = contentNode.childCount === 0;\n\n            if (!blockEmpty) {\n              chain()\n                .deleteSelection()\n                .BNSplitBlock(\n                  state.selection.from,\n                  selectionAtBlockStart,\n                  selectionAtBlockStart\n                )\n                .run();\n\n              return true;\n            }\n\n            return false;\n          }),\n      ]);\n\n    return {\n      Backspace: handleBackspace,\n      Delete: handleDelete,\n      Enter: handleEnter,\n      // Always returning true for tab key presses ensures they're not captured by the browser. Otherwise, they blur the\n      // editor since the browser will try to use tab for keyboard navigation.\n      Tab: () => {\n        if (\n          this.options.editor.formattingToolbar?.shown ||\n          this.options.editor.linkToolbar?.shown ||\n          this.options.editor.filePanel?.shown\n        ) {\n          // don't handle tabs if a toolbar is shown, so we can tab into / out of it\n          return false;\n        }\n        this.editor.commands.sinkListItem(\"blockContainer\");\n        return true;\n      },\n      \"Shift-Tab\": () => {\n        if (\n          this.options.editor.formattingToolbar?.shown ||\n          this.options.editor.linkToolbar?.shown ||\n          this.options.editor.filePanel?.shown\n        ) {\n          // don't handle tabs if a toolbar is shown, so we can tab into / out of it\n          return false;\n        }\n        this.editor.commands.liftListItem(\"blockContainer\");\n        return true;\n      },\n    };\n  },\n});\n", "import { Node } from \"@tiptap/core\";\nimport { BlockNoteDOMAttributes } from \"../schema\";\nimport { mergeCSSClasses } from \"../util/browser\";\n\nexport const BlockGroup = Node.create<{\n  domAttributes?: BlockNoteDOMAttributes;\n}>({\n  name: \"blockGroup\",\n  group: \"blockGroup\",\n  content: \"blockContainer+\",\n\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (element) => {\n          if (typeof element === \"string\") {\n            return false;\n          }\n\n          if (element.getAttribute(\"data-node-type\") === \"blockGroup\") {\n            // Null means the element matches, but we don't want to add any attributes to the node.\n            return null;\n          }\n\n          return false;\n        },\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const blockGroupHTMLAttributes = {\n      ...(this.options.domAttributes?.blockGroup || {}),\n      ...HTMLAttributes,\n    };\n    const blockGroup = document.createElement(\"div\");\n    blockGroup.className = mergeCSSClasses(\n      \"bn-block-group\",\n      blockGroupHTMLAttributes.class\n    );\n    blockGroup.setAttribute(\"data-node-type\", \"blockGroup\");\n    for (const [attribute, value] of Object.entries(blockGroupHTMLAttributes)) {\n      if (attribute !== \"class\") {\n        blockGroup.setAttribute(attribute, value);\n      }\n    }\n\n    return {\n      dom: blockGroup,\n      contentDOM: blockGroup,\n    };\n  },\n});\n", "import {Node} from \"@tiptap/core\";\n\nexport const Doc = Node.create({\n    name: \"doc\",\n    topNode: true,\n    content: \"blockGroup\",\n});\n", "import { Extension, Extensions, extensions } from \"@tiptap/core\";\n\nimport type { BlockNoteEditor } from \"./BlockNoteEditor\";\n\nimport Collaboration from \"@tiptap/extension-collaboration\";\nimport CollaborationCursor from \"@tiptap/extension-collaboration-cursor\";\nimport { Dropcursor } from \"@tiptap/extension-dropcursor\";\nimport { Gapcursor } from \"@tiptap/extension-gapcursor\";\nimport { HardBreak } from \"@tiptap/extension-hard-break\";\nimport { History } from \"@tiptap/extension-history\";\nimport { Link } from \"@tiptap/extension-link\";\nimport { Text } from \"@tiptap/extension-text\";\nimport * as Y from \"yjs\";\nimport { createCopyToClipboardExtension } from \"../api/exporters/copyExtension\";\nimport { createPasteFromClipboardExtension } from \"../api/parsers/pasteExtension\";\nimport { createDropFileExtension } from \"../api/parsers/fileDropExtension\";\nimport { BackgroundColorExtension } from \"../extensions/BackgroundColor/BackgroundColorExtension\";\nimport { TextAlignmentExtension } from \"../extensions/TextAlignment/TextAlignmentExtension\";\nimport { TextColorExtension } from \"../extensions/TextColor/TextColorExtension\";\nimport { TrailingNode } from \"../extensions/TrailingNode/TrailingNodeExtension\";\nimport UniqueID from \"../extensions/UniqueID/UniqueID\";\nimport { BlockContainer, BlockGroup, Doc } from \"../pm-nodes\";\nimport {\n  BlockNoteDOMAttributes,\n  BlockSchema,\n  BlockSpecs,\n  InlineContentSchema,\n  InlineContentSpecs,\n  StyleSchema,\n  StyleSpecs,\n} from \"../schema\";\n\n/**\n * Get all the Tiptap extensions BlockNote is configured with by default\n */\nexport const getBlockNoteExtensions = <\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(opts: {\n  editor: BlockNoteEditor<BSchema, I, S>;\n  domAttributes: Partial<BlockNoteDOMAttributes>;\n  blockSpecs: BlockSpecs;\n  inlineContentSpecs: InlineContentSpecs;\n  styleSpecs: StyleSpecs;\n  trailingBlock: boolean | undefined;\n  collaboration?: {\n    fragment: Y.XmlFragment;\n    user: {\n      name: string;\n      color: string;\n      [key: string]: string;\n    };\n    provider: any;\n    renderCursor?: (user: any) => HTMLElement;\n  };\n  disableExtensions: string[] | undefined;\n}) => {\n  const ret: Extensions = [\n    extensions.ClipboardTextSerializer,\n    extensions.Commands,\n    extensions.Editable,\n    extensions.FocusEvents,\n    extensions.Tabindex,\n\n    // DevTools,\n    Gapcursor,\n\n    // DropCursor,\n    UniqueID.configure({\n      types: [\"blockContainer\"],\n    }),\n    HardBreak.extend({ priority: 10 }),\n    // Comments,\n\n    // basics:\n    Text,\n\n    // marks:\n    Link.extend({\n      addKeyboardShortcuts() {\n        return {\n          \"Mod-k\": () => {\n            this.editor.commands.toggleLink({ href: \"\" });\n            return true;\n          },\n        };\n      },\n    }),\n    ...Object.values(opts.styleSpecs).map((styleSpec) => {\n      return styleSpec.implementation.mark;\n    }),\n\n    TextColorExtension,\n\n    BackgroundColorExtension,\n    TextAlignmentExtension,\n\n    // make sure escape blurs editor, so that we can tab to other elements in the host page (accessibility)\n    Extension.create({\n      name: \"OverrideEscape\",\n      addKeyboardShortcuts() {\n        return {\n          Escape: () => {\n            if (opts.editor.suggestionMenus.shown) {\n              // escape is handled by suggestionmenu\n              return false;\n            }\n            return this.editor.commands.blur();\n          },\n        };\n      },\n    }),\n\n    // nodes\n    Doc,\n    BlockContainer.configure({\n      editor: opts.editor,\n      domAttributes: opts.domAttributes,\n    }),\n    BlockGroup.configure({\n      domAttributes: opts.domAttributes,\n    }),\n    ...Object.values(opts.inlineContentSpecs)\n      .filter((a) => a.config !== \"link\" && a.config !== \"text\")\n      .map((inlineContentSpec) => {\n        return inlineContentSpec.implementation!.node.configure({\n          editor: opts.editor as any,\n        });\n      }),\n\n    ...Object.values(opts.blockSpecs).flatMap((blockSpec) => {\n      return [\n        // dependent nodes (e.g.: tablecell / row)\n        ...(blockSpec.implementation.requiredExtensions || []).map((ext) =>\n          ext.configure({\n            editor: opts.editor,\n            domAttributes: opts.domAttributes,\n          })\n        ),\n        // the actual node itself\n        blockSpec.implementation.node.configure({\n          editor: opts.editor,\n          domAttributes: opts.domAttributes,\n        }),\n      ];\n    }),\n    createCopyToClipboardExtension(opts.editor),\n    createPasteFromClipboardExtension(opts.editor),\n    createDropFileExtension(opts.editor),\n\n    Dropcursor.configure({ width: 5, color: \"#ddeeff\" }),\n    // This needs to be at the bottom of this list, because Key events (such as enter, when selecting a /command),\n    // should be handled before Enter handlers in other components like splitListItem\n    ...(opts.trailingBlock === undefined || opts.trailingBlock\n      ? [TrailingNode]\n      : []),\n  ];\n\n  if (opts.collaboration) {\n    ret.push(\n      Collaboration.configure({\n        fragment: opts.collaboration.fragment,\n      })\n    );\n    if (opts.collaboration.provider?.awareness) {\n      const defaultRender = (user: { color: string; name: string }) => {\n        const cursor = document.createElement(\"span\");\n\n        cursor.classList.add(\"collaboration-cursor__caret\");\n        cursor.setAttribute(\"style\", `border-color: ${user.color}`);\n\n        const label = document.createElement(\"span\");\n\n        label.classList.add(\"collaboration-cursor__label\");\n        label.setAttribute(\"style\", `background-color: ${user.color}`);\n        label.insertBefore(document.createTextNode(user.name), null);\n\n        const nonbreakingSpace1 = document.createTextNode(\"\\u2060\");\n        const nonbreakingSpace2 = document.createTextNode(\"\\u2060\");\n        cursor.insertBefore(nonbreakingSpace1, null);\n        cursor.insertBefore(label, null);\n        cursor.insertBefore(nonbreakingSpace2, null);\n        return cursor;\n      };\n      ret.push(\n        CollaborationCursor.configure({\n          user: opts.collaboration.user,\n          render: opts.collaboration.renderCursor || defaultRender,\n          provider: opts.collaboration.provider,\n        })\n      );\n    }\n  } else {\n    // disable history extension when collaboration is enabled as Yjs takes care of undo / redo\n    ret.push(History);\n  }\n\n  const disableExtensions: string[] = opts.disableExtensions || [];\n  return ret.filter(ex => !disableExtensions.includes(ex.name));\n};\n", "import { Fragment, Slice } from \"@tiptap/pm/model\";\nimport { EditorView } from \"@tiptap/pm/view\";\n\n// helper function to remove a child from a fragment\nfunction removeChild(node: Fragment, n: number) {\n  const children: any[] = [];\n  node.forEach((child, _, i) => {\n    if (i !== n) {\n      children.push(child);\n    }\n  });\n  return Fragment.from(children);\n}\n\n/**\n * fix for https://github.com/ProseMirror/prosemirror/issues/1430#issuecomment-1822570821\n *\n * Without this fix, pasting two paragraphs would cause the second one to be indented in the other\n * this fix wraps every element in the slice in it's own blockContainer, to prevent Prosemirror from nesting the\n * elements on paste.\n *\n * The exception is when we encounter blockGroups with listitems, because those actually should be nested\n */\nexport function transformPasted(slice: Slice, view: EditorView) {\n  let f = Fragment.from(slice.content);\n  for (let i = 0; i < f.childCount; i++) {\n    if (f.child(i).type.spec.group === \"blockContent\") {\n      const content = [f.child(i)];\n\n      // when there is a blockGroup with lists, it should be nested in the new blockcontainer\n      // (if we remove this if-block, the nesting bug will be fixed, but lists won't be nested correctly)\n      if (\n        i + 1 < f.childCount &&\n        f.child(i + 1).type.spec.group === \"blockGroup\"\n      ) {\n        const nestedChild = f\n          .child(i + 1)\n          .child(0)\n          .child(0);\n\n        if (\n          nestedChild.type.name === \"bulletListItem\" ||\n          nestedChild.type.name === \"numberedListItem\" ||\n          nestedChild.type.name === \"checkListItem\"\n        ) {\n          content.push(f.child(i + 1));\n          f = removeChild(f, i + 1);\n        }\n      }\n      const container = view.state.schema.nodes.blockContainer.create(\n        undefined,\n        content\n      );\n      f = f.replaceChild(i, container);\n    }\n  }\n\n  return new Slice(f, slice.openStart, slice.openEnd);\n}\n", "import {\n  defaultBlockSpecs,\n  defaultInlineContentSpecs,\n  defaultStyleSpecs,\n} from \"../blocks/defaultBlocks\";\nimport {\n  BlockSchema,\n  BlockSchemaFromSpecs,\n  BlockSpecs,\n  InlineContentSchema,\n  InlineContentSchemaFromSpecs,\n  InlineContentSpecs,\n  StyleSchema,\n  StyleSchemaFromSpecs,\n  StyleSpecs,\n  getBlockSchemaFromSpecs,\n  getInlineContentSchemaFromSpecs,\n  getStyleSchemaFromSpecs,\n} from \"../schema\";\nimport type {\n  BlockNoDefaults,\n  PartialBlockNoDefaults,\n} from \"../schema/blocks/types\";\nimport type { BlockNoteEditor } from \"./BlockNoteEditor\";\n\nfunction removeUndefined<T extends Record<string, any> | undefined>(obj: T): T {\n  if (!obj) {\n    return obj;\n  }\n  return Object.fromEntries(\n    Object.entries(obj).filter(([, value]) => value !== undefined)\n  ) as T;\n}\n\nexport class BlockNoteSchema<\n  BSchema extends BlockSchema,\n  ISchema extends InlineContentSchema,\n  SSchema extends StyleSchema\n> {\n  public readonly blockSpecs: BlockSpecs;\n  public readonly inlineContentSpecs: InlineContentSpecs;\n  public readonly styleSpecs: StyleSpecs;\n\n  public readonly blockSchema: BSchema;\n  public readonly inlineContentSchema: ISchema;\n  public readonly styleSchema: SSchema;\n\n  // Helper so that you can use typeof schema.BlockNoteEditor\n  public readonly BlockNoteEditor: BlockNoteEditor<BSchema, ISchema, SSchema> =\n    \"only for types\" as any;\n\n  public readonly Block: BlockNoDefaults<BSchema, ISchema, SSchema> =\n    \"only for types\" as any;\n\n  public readonly PartialBlock: PartialBlockNoDefaults<\n    BSchema,\n    ISchema,\n    SSchema\n  > = \"only for types\" as any;\n\n  public static create<\n    BSpecs extends BlockSpecs = typeof defaultBlockSpecs,\n    ISpecs extends InlineContentSpecs = typeof defaultInlineContentSpecs,\n    SSpecs extends StyleSpecs = typeof defaultStyleSpecs\n  >(options?: {\n    /**\n     * A list of custom block types that should be available in the editor.\n     */\n    blockSpecs?: BSpecs;\n    /**\n     * A list of custom InlineContent types that should be available in the editor.\n     */\n    inlineContentSpecs?: ISpecs;\n    /**\n     * A list of custom Styles that should be available in the editor.\n     */\n    styleSpecs?: SSpecs;\n  }) {\n    return new BlockNoteSchema<\n      BlockSchemaFromSpecs<BSpecs>,\n      InlineContentSchemaFromSpecs<ISpecs>,\n      StyleSchemaFromSpecs<SSpecs>\n    >(options);\n    // as BlockNoteSchema<\n    // BlockSchemaFromSpecs<BSpecs>,\n    // InlineContentSchemaFromSpecs<ISpecs>,\n    // StyleSchemaFromSpecs<SSpecs>\n    // >;\n  }\n\n  constructor(opts?: {\n    blockSpecs?: BlockSpecs;\n    inlineContentSpecs?: InlineContentSpecs;\n    styleSpecs?: StyleSpecs;\n  }) {\n    this.blockSpecs = removeUndefined(opts?.blockSpecs) || defaultBlockSpecs;\n    this.inlineContentSpecs =\n      removeUndefined(opts?.inlineContentSpecs) || defaultInlineContentSpecs;\n    this.styleSpecs = removeUndefined(opts?.styleSpecs) || defaultStyleSpecs;\n\n    this.blockSchema = getBlockSchemaFromSpecs(this.blockSpecs) as any;\n    this.inlineContentSchema = getInlineContentSchemaFromSpecs(\n      this.inlineContentSpecs\n    ) as any;\n    this.styleSchema = getStyleSchemaFromSpecs(this.styleSpecs) as any;\n  }\n}\n", "import { EditorOptions, createDocument } from \"@tiptap/core\";\n// import \"./blocknote.css\";\nimport { Editor as TiptapEditor } from \"@tiptap/core\";\nimport { Node } from \"@tiptap/pm/model\";\nimport { EditorView } from \"@tiptap/pm/view\";\n\nimport { EditorState, Transaction } from \"@tiptap/pm/state\";\nimport { blockToNode } from \"../api/nodeConversions/nodeConversions\";\nimport { PartialBlock } from \"../blocks/defaultBlocks\";\nimport { StyleSchema } from \"../schema\";\n\nexport type BlockNoteTipTapEditorOptions = Partial<\n  Omit<EditorOptions, \"content\">\n> & {\n  content: PartialBlock<any, any, any>[];\n};\n\n/**\n * Custom Editor class that extends TiptapEditor and separates\n * the creation of the view from the constructor.\n */\n// @ts-ignore\nexport class BlockNoteTipTapEditor extends TiptapEditor {\n  private _state: EditorState;\n\n  constructor(options: BlockNoteTipTapEditorOptions, styleSchema: StyleSchema) {\n    // possible fix for next.js server side rendering\n    // const d = globalThis.document;\n    // const w = globalThis.window;\n    // if (!globalThis.document) {\n    //   globalThis.document = {\n    //     createElement: () => {},\n    //   };\n    // }\n    // if (!globalThis.window) {\n    //   globalThis.window = {\n    //     setTimeout: () => {},\n    //   };\n    // }\n    // options.injectCSS = false\n    super({ ...options, content: undefined });\n\n    // try {\n    //   globalThis.window = w;\n    //   } catch(e) {}\n    //   try {\n    //     globalThis.document = d;\n    //     } catch(e) {}\n\n    // This is a hack to make \"initial content detection\" by y-prosemirror (and also tiptap isEmpty)\n    // properly detect whether or not the document has changed.\n    // We change the doc.createAndFill function to make sure the initial block id is set, instead of null\n    const schema = this.schema;\n    let cache: any;\n    const oldCreateAndFill = schema.nodes.doc.createAndFill;\n    (schema.nodes.doc as any).createAndFill = (...args: any) => {\n      if (cache) {\n        return cache;\n      }\n      const ret = oldCreateAndFill.apply(schema.nodes.doc, args);\n\n      // create a copy that we can mutate (otherwise, assigning attrs is not safe and corrupts the pm state)\n      const jsonNode = JSON.parse(JSON.stringify(ret!.toJSON()));\n      jsonNode.content[0].content[0].attrs.id = \"initialBlockId\";\n\n      cache = Node.fromJSON(schema, jsonNode);\n      return cache;\n    };\n\n    let doc: Node;\n\n    try {\n      const pmNodes = options?.content.map((b) =>\n        blockToNode(b, this.schema, styleSchema).toJSON()\n      );\n      doc = createDocument(\n        {\n          type: \"doc\",\n          content: [\n            {\n              type: \"blockGroup\",\n              content: pmNodes,\n            },\n          ],\n        },\n        this.schema,\n        this.options.parseOptions\n      );\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(\n        \"Error creating document from blocks passed as `initialContent`. Caused by exception: \",\n        e\n      );\n      throw new Error(\n        \"Error creating document from blocks passed as `initialContent`:\\n\" +\n          +JSON.stringify(options.content)\n      );\n    }\n\n    // Create state immediately, so that it's available independently from the View,\n    // the way Prosemirror \"intends it to be\". This also makes sure that we can access\n    // the state before the view is created / mounted.\n    this._state = EditorState.create({\n      doc,\n      schema: this.schema,\n      // selection: selection || undefined,\n    });\n  }\n\n  get state() {\n    if (this.view) {\n      this._state = this.view.state;\n    }\n    return this._state;\n  }\n\n  dispatch(tr: Transaction) {\n    if (this.view) {\n      this.view.dispatch(tr);\n    } else {\n      // before view has been initialized\n      this._state = this.state.apply(tr);\n    }\n  }\n\n  /**\n   * Replace the default `createView` method with a custom one - which we call on mount\n   */\n  private createViewAlternative() {\n    // Without queueMicrotask, custom IC / styles will give a React FlushSync error\n    queueMicrotask(() => {\n      this.view = new EditorView(\n        { mount: this.options.element as any }, // use mount option so that we reuse the existing element instead of creating a new one\n        {\n          ...this.options.editorProps,\n          // @ts-ignore\n          dispatchTransaction: this.dispatchTransaction.bind(this),\n          state: this.state,\n        }\n      );\n\n      // `editor.view` is not yet available at this time.\n      // Therefore we will add all plugins and node views directly afterwards.\n      const newState = this.state.reconfigure({\n        plugins: this.extensionManager.plugins,\n      });\n\n      this.view.updateState(newState);\n\n      this.createNodeViews();\n    });\n  }\n\n  /**\n   * Mounts / unmounts the editor to a dom element\n   *\n   * @param element DOM element to mount to, ur null / undefined to destroy\n   */\n  public mount = (element?: HTMLElement | null) => {\n    if (!element) {\n      this.destroy();\n    } else {\n      this.options.element = element;\n      // @ts-ignore\n      this.createViewAlternative();\n    }\n  };\n}\n\n(BlockNoteTipTapEditor.prototype as any).createView = () => {\n  // no-op\n  // Disable default call to `createView` in the Editor constructor.\n  // We should call `createView` manually only when a DOM element is available\n};\n", "import { Plugin, PluginKey } from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\n\nconst PLUGIN_KEY = new PluginKey(`blocknote-placeholder`);\n\nexport const PlaceholderPlugin = (\n  editor: BlockNoteEditor<any, any, any>,\n  placeholders: Record<string | \"default\", string>\n) => {\n  return new Plugin({\n    key: PLUGIN_KEY,\n    view: () => {\n      const styleEl = document.createElement(\"style\");\n      const nonce = editor._tiptapEditor.options.injectNonce;\n      if (nonce) {\n        styleEl.setAttribute(\"nonce\", nonce);\n      }\n      if (editor._tiptapEditor.view.root instanceof ShadowRoot) {\n        editor._tiptapEditor.view.root.append(styleEl);\n      } else {\n        editor._tiptapEditor.view.root.head.appendChild(styleEl);\n      }\n\n      const styleSheet = styleEl.sheet!;\n\n      const getBaseSelector = (additionalSelectors = \"\") =>\n        `.bn-block-content${additionalSelectors} .bn-inline-content:has(> .ProseMirror-trailingBreak:only-child):before`;\n\n      const getSelector = (\n        blockType: string | \"default\",\n        mustBeFocused = true\n      ) => {\n        const mustBeFocusedSelector = mustBeFocused\n          ? `[data-is-empty-and-focused]`\n          : ``;\n\n        if (blockType === \"default\") {\n          return getBaseSelector(mustBeFocusedSelector);\n        }\n\n        const blockTypeSelector = `[data-content-type=\"${blockType}\"]`;\n        return getBaseSelector(mustBeFocusedSelector + blockTypeSelector);\n      };\n\n      for (const [blockType, placeholder] of Object.entries(placeholders)) {\n        const mustBeFocused = blockType === \"default\";\n\n        styleSheet.insertRule(\n          `${getSelector(blockType, mustBeFocused)}{ content: ${JSON.stringify(\n            placeholder\n          )}; }`\n        );\n\n        // For some reason, the placeholders which show when the block is focused\n        // take priority over ones which show depending on block type, so we need\n        // to make sure the block specific ones are also used when the block is\n        // focused.\n        if (!mustBeFocused) {\n          styleSheet.insertRule(\n            `${getSelector(blockType, true)}{ content: ${JSON.stringify(\n              placeholder\n            )}; }`\n          );\n        }\n      }\n\n      return {\n        destroy: () => {\n          if (editor._tiptapEditor.view.root instanceof ShadowRoot) {\n            editor._tiptapEditor.view.root.removeChild(styleEl);\n          } else {\n            editor._tiptapEditor.view.root.head.removeChild(styleEl);\n          }\n        },\n      };\n    },\n    props: {\n      // TODO: maybe also add placeholder for empty document (\"e.g.: start writing..\")\n      decorations: (state) => {\n        const { doc, selection } = state;\n\n        if (!editor.isEditable) {\n          return;\n        }\n\n        if (!selection.empty) {\n          return;\n        }\n\n        const $pos = selection.$anchor;\n        const node = $pos.parent;\n\n        if (node.content.size > 0) {\n          return null;\n        }\n\n        const before = $pos.before();\n\n        const dec = Decoration.node(before, before + node.nodeSize, {\n          \"data-is-empty-and-focused\": \"true\",\n        });\n\n        return DecorationSet.create(doc, [dec]);\n      },\n    },\n  });\n};\n", "import { EditorOptions, Extension, getSchema } from \"@tiptap/core\";\nimport { Node, Schema } from \"prosemirror-model\";\n// import \"./blocknote.css\";\nimport * as Y from \"yjs\";\nimport {\n  insertBlocks,\n  insertContentAt,\n  removeBlocks,\n  replaceBlocks,\n  updateBlock,\n} from \"../api/blockManipulation/blockManipulation\";\nimport { createExternalHTMLExporter } from \"../api/exporters/html/externalHTMLExporter\";\nimport { blocksToMarkdown } from \"../api/exporters/markdown/markdownExporter\";\nimport { getBlockInfoFromPos } from \"../api/getBlockInfoFromPos\";\nimport {\n  inlineContentToNodes,\n  nodeToBlock,\n} from \"../api/nodeConversions/nodeConversions\";\nimport { getNodeById } from \"../api/nodeUtil\";\nimport { HTMLToBlocks } from \"../api/parsers/html/parseHTML\";\nimport { markdownToBlocks } from \"../api/parsers/markdown/parseMarkdown\";\nimport {\n  Block,\n  DefaultBlockSchema,\n  DefaultInlineContentSchema,\n  DefaultStyleSchema,\n  PartialBlock,\n} from \"../blocks/defaultBlocks\";\nimport { FilePanelProsemirrorPlugin } from \"../extensions/FilePanel/FilePanelPlugin\";\nimport { FormattingToolbarProsemirrorPlugin } from \"../extensions/FormattingToolbar/FormattingToolbarPlugin\";\nimport { LinkToolbarProsemirrorPlugin } from \"../extensions/LinkToolbar/LinkToolbarPlugin\";\nimport { SideMenuProsemirrorPlugin } from \"../extensions/SideMenu/SideMenuPlugin\";\nimport { SuggestionMenuProseMirrorPlugin } from \"../extensions/SuggestionMenu/SuggestionPlugin\";\nimport { TableHandlesProsemirrorPlugin } from \"../extensions/TableHandles/TableHandlesPlugin\";\nimport { UniqueID } from \"../extensions/UniqueID/UniqueID\";\nimport {\n  BlockIdentifier,\n  BlockNoteDOMAttributes,\n  BlockSchema,\n  BlockSpecs,\n  InlineContentSchema,\n  InlineContentSpecs,\n  PartialInlineContent,\n  StyleSchema,\n  StyleSpecs,\n  Styles,\n} from \"../schema\";\nimport { mergeCSSClasses } from \"../util/browser\";\nimport { NoInfer, UnreachableCaseError } from \"../util/typescript\";\n\nimport { getBlockNoteExtensions } from \"./BlockNoteExtensions\";\nimport { TextCursorPosition } from \"./cursorPositionTypes\";\n\nimport { Selection } from \"./selectionTypes\";\nimport { transformPasted } from \"./transformPasted\";\n\nimport { checkDefaultBlockTypeInSchema } from \"../blocks/defaultBlockTypeGuards\";\nimport { BlockNoteSchema } from \"./BlockNoteSchema\";\nimport {\n  BlockNoteTipTapEditor,\n  BlockNoteTipTapEditorOptions,\n} from \"./BlockNoteTipTapEditor\";\n\nimport { PlaceholderPlugin } from \"../extensions/Placeholder/PlaceholderPlugin\";\nimport { Dictionary } from \"../i18n/dictionary\";\nimport { en } from \"../i18n/locales\";\n\nimport { Transaction } from \"@tiptap/pm/state\";\nimport { createInternalHTMLSerializer } from \"../api/exporters/html/internalHTMLSerializer\";\nimport \"../style.css\";\nimport { initializeESMDependencies } from \"../util/esmDependencies\";\n\nexport type BlockNoteEditorOptions<\n  BSchema extends BlockSchema,\n  ISchema extends InlineContentSchema,\n  SSchema extends StyleSchema\n> = {\n  disableExtensions: string[];\n  /**\n   * A dictionary object containing translations for the editor.\n   */\n  dictionary?: Dictionary;\n\n  /**\n   * @deprecated, provide placeholders via dictionary instead\n   */\n  placeholders: Record<string | \"default\", string>;\n\n  /**\n   * An object containing attributes that should be added to HTML elements of the editor.\n   *\n   * @example { editor: { class: \"my-editor-class\" } }\n   */\n  domAttributes: Partial<BlockNoteDOMAttributes>;\n\n  /**\n   * The content that should be in the editor when it's created, represented as an array of partial block objects.\n   */\n  initialContent: PartialBlock<\n    NoInfer<BSchema>,\n    NoInfer<ISchema>,\n    NoInfer<SSchema>\n  >[];\n  /**\n   * Use default BlockNote font and reset the styles of <p> <li> <h1> elements etc., that are used in BlockNote.\n   *\n   * @default true\n   */\n  defaultStyles: boolean;\n\n  schema: BlockNoteSchema<BSchema, ISchema, SSchema>;\n\n  /**\n   * The `uploadFile` method is what the editor uses when files need to be uploaded (for example when selecting an image to upload).\n   * This method should set when creating the editor as this is application-specific.\n   *\n   * `undefined` means the application doesn't support file uploads.\n   *\n   * @param file The file that should be uploaded.\n   * @returns The URL of the uploaded file OR an object containing props that should be set on the file block (such as an id)\n   */\n  uploadFile: (file: File) => Promise<string | Record<string, any>>;\n\n  /**\n   * Resolve a URL of a file block to one that can be displayed or downloaded. This can be used for creating authenticated URL or\n   * implementing custom protocols / schemes\n   * @returns The URL that's\n   */\n  resolveFileUrl: (url: string) => Promise<string>;\n\n  /**\n   * When enabled, allows for collaboration between multiple users.\n   */\n  collaboration: {\n    /**\n     * The Yjs XML fragment that's used for collaboration.\n     */\n    fragment: Y.XmlFragment;\n    /**\n     * The user info for the current user that's shown to other collaborators.\n     */\n    user: {\n      name: string;\n      color: string;\n    };\n    /**\n     * A Yjs provider (used for awareness / cursor information)\n     */\n    provider: any;\n    /**\n     * Optional function to customize how cursors of users are rendered\n     */\n    renderCursor?: (user: any) => HTMLElement;\n  };\n\n  // tiptap options, undocumented\n  _tiptapOptions: Partial<EditorOptions>;\n\n  trailingBlock?: boolean;\n\n  /**\n   * Boolean indicating whether the editor is in headless mode.\n   * Headless mode means we can use features like importing / exporting blocks,\n   * but there's no underlying editor (UI) instantiated.\n   *\n   * You probably don't need to set this manually, but use the `server-util` package instead that uses this option internally\n   */\n  _headless: boolean;\n};\n\nconst blockNoteTipTapOptions = {\n  enableInputRules: true,\n  enablePasteRules: true,\n  enableCoreExtensions: false,\n};\n\nexport class BlockNoteEditor<\n  BSchema extends BlockSchema = DefaultBlockSchema,\n  ISchema extends InlineContentSchema = DefaultInlineContentSchema,\n  SSchema extends StyleSchema = DefaultStyleSchema\n> {\n  private readonly _pmSchema: Schema;\n\n  /**\n   * Boolean indicating whether the editor is in headless mode.\n   * Headless mode means we can use features like importing / exporting blocks,\n   * but there's no underlying editor (UI) instantiated.\n   *\n   * You probably don't need to set this manually, but use the `server-util` package instead that uses this option internally\n   */\n  public readonly headless: boolean = false;\n\n  public readonly _tiptapEditor:\n    | BlockNoteTipTapEditor & {\n        contentComponent: any;\n      } = undefined as any; // TODO: Type should actually reflect that it can be `undefined` in headless mode\n\n  /**\n   * Used by React to store a reference to an `ElementRenderer` helper utility to make sure we can render React elements\n   * in the correct context (used by `ReactRenderUtil`)\n   */\n  public elementRenderer: ((node: any, container: HTMLElement) => void) | null =\n    null;\n\n  /**\n   * Cache of all blocks. This makes sure we don't have to \"recompute\" blocks if underlying Prosemirror Nodes haven't changed.\n   * This is especially useful when we want to keep track of the same block across multiple operations,\n   * with this cache, blocks stay the same object reference (referential equality with ===).\n   */\n  public blockCache = new WeakMap<Node, Block<any, any, any>>();\n\n  /**\n   * The dictionary contains translations for the editor.\n   */\n  public readonly dictionary: Dictionary;\n\n  /**\n   * The schema of the editor. The schema defines which Blocks, InlineContent, and Styles are available in the editor.\n   */\n  public readonly schema: BlockNoteSchema<BSchema, ISchema, SSchema>;\n\n  public readonly blockImplementations: BlockSpecs;\n  public readonly inlineContentImplementations: InlineContentSpecs;\n  public readonly styleImplementations: StyleSpecs;\n\n  public readonly formattingToolbar: FormattingToolbarProsemirrorPlugin;\n  public readonly linkToolbar: LinkToolbarProsemirrorPlugin<\n    BSchema,\n    ISchema,\n    SSchema\n  >;\n  public readonly sideMenu: SideMenuProsemirrorPlugin<\n    BSchema,\n    ISchema,\n    SSchema\n  >;\n  public readonly suggestionMenus: SuggestionMenuProseMirrorPlugin<\n    BSchema,\n    ISchema,\n    SSchema\n  >;\n  public readonly filePanel?: FilePanelProsemirrorPlugin<ISchema, SSchema>;\n  public readonly tableHandles?: TableHandlesProsemirrorPlugin<\n    ISchema,\n    SSchema\n  >;\n\n  /**\n   * The `uploadFile` method is what the editor uses when files need to be uploaded (for example when selecting an image to upload).\n   * This method should set when creating the editor as this is application-specific.\n   *\n   * `undefined` means the application doesn't support file uploads.\n   *\n   * @param file The file that should be uploaded.\n   * @returns The URL of the uploaded file OR an object containing props that should be set on the file block (such as an id)\n   */\n  public readonly uploadFile:\n    | ((file: File) => Promise<string | Record<string, any>>)\n    | undefined;\n\n  public readonly resolveFileUrl: (url: string) => Promise<string>;\n\n  public get pmSchema() {\n    return this._pmSchema;\n  }\n\n  public static create<\n    BSchema extends BlockSchema = DefaultBlockSchema,\n    ISchema extends InlineContentSchema = DefaultInlineContentSchema,\n    SSchema extends StyleSchema = DefaultStyleSchema\n  >(options: Partial<BlockNoteEditorOptions<BSchema, ISchema, SSchema>> = {}) {\n    return new BlockNoteEditor<BSchema, ISchema, SSchema>(options);\n  }\n\n  protected constructor(\n    private readonly options: Partial<BlockNoteEditorOptions<any, any, any>>\n  ) {\n    const anyOpts = options as any;\n    if (anyOpts.onEditorContentChange) {\n      throw new Error(\n        \"onEditorContentChange initialization option is deprecated, use <BlockNoteView onChange={...} />, the useEditorChange(...) hook, or editor.onChange(...)\"\n      );\n    }\n\n    if (anyOpts.onTextCursorPositionChange) {\n      throw new Error(\n        \"onTextCursorPositionChange initialization option is deprecated, use <BlockNoteView onSelectionChange={...} />, the useEditorSelectionChange(...) hook, or editor.onSelectionChange(...)\"\n      );\n    }\n\n    if (anyOpts.onEditorReady) {\n      throw new Error(\n        \"onEditorReady is deprecated. Editor is immediately ready for use after creation.\"\n      );\n    }\n\n    if (anyOpts.editable) {\n      throw new Error(\n        \"editable initialization option is deprecated, use <BlockNoteView editable={true/false} />, or alternatively editor.isEditable = true/false\"\n      );\n    }\n\n    this.dictionary = options.dictionary || en;\n\n    // apply defaults\n    const newOptions = {\n      defaultStyles: true,\n      schema: options.schema || BlockNoteSchema.create(),\n      _headless: false,\n      ...options,\n      placeholders: {\n        ...this.dictionary.placeholders,\n        ...options.placeholders,\n      },\n    };\n\n    // @ts-ignore\n    this.schema = newOptions.schema;\n    this.blockImplementations = newOptions.schema.blockSpecs;\n    this.inlineContentImplementations = newOptions.schema.inlineContentSpecs;\n    this.styleImplementations = newOptions.schema.styleSpecs;\n\n    this.formattingToolbar = new FormattingToolbarProsemirrorPlugin(this);\n    this.linkToolbar = new LinkToolbarProsemirrorPlugin(this);\n    this.sideMenu = new SideMenuProsemirrorPlugin(this);\n    this.suggestionMenus = new SuggestionMenuProseMirrorPlugin(this);\n    this.filePanel = new FilePanelProsemirrorPlugin(this as any);\n\n    if (checkDefaultBlockTypeInSchema(\"table\", this)) {\n      this.tableHandles = new TableHandlesProsemirrorPlugin(this as any);\n    }\n\n    const extensions = getBlockNoteExtensions({\n      editor: this,\n      domAttributes: newOptions.domAttributes || {},\n      blockSpecs: this.schema.blockSpecs,\n      styleSpecs: this.schema.styleSpecs,\n      inlineContentSpecs: this.schema.inlineContentSpecs,\n      collaboration: newOptions.collaboration,\n      trailingBlock: newOptions.trailingBlock,\n      disableExtensions: newOptions.disableExtensions,\n    });\n\n    const blockNoteUIExtension = Extension.create({\n      name: \"BlockNoteUIExtension\",\n\n      addProseMirrorPlugins: () => {\n        return [\n          this.formattingToolbar.plugin,\n          this.linkToolbar.plugin,\n          this.sideMenu.plugin,\n          this.suggestionMenus.plugin,\n          ...(this.filePanel ? [this.filePanel.plugin] : []),\n          ...(this.tableHandles ? [this.tableHandles.plugin] : []),\n          PlaceholderPlugin(this, newOptions.placeholders),\n        ];\n      },\n    });\n    extensions.push(blockNoteUIExtension);\n\n    this.uploadFile = newOptions.uploadFile;\n    this.resolveFileUrl = newOptions.resolveFileUrl || (async (url) => url);\n    this.headless = newOptions._headless;\n\n    if (newOptions.collaboration && newOptions.initialContent) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"When using Collaboration, initialContent might cause conflicts, because changes should come from the collaboration provider\"\n      );\n    }\n\n    const initialContent =\n      newOptions.initialContent ||\n      (options.collaboration\n        ? [\n            {\n              type: \"paragraph\",\n              id: \"initialBlockId\",\n            },\n          ]\n        : [\n            {\n              type: \"paragraph\",\n              id: UniqueID.options.generateID(),\n            },\n          ]);\n\n    if (!Array.isArray(initialContent) || initialContent.length === 0) {\n      throw new Error(\n        \"initialContent must be a non-empty array of blocks, received: \" +\n          initialContent\n      );\n    }\n\n    const tiptapOptions: BlockNoteTipTapEditorOptions = {\n      ...blockNoteTipTapOptions,\n      ...newOptions._tiptapOptions,\n      content: initialContent,\n      extensions: [\n        ...(newOptions._tiptapOptions?.extensions || []),\n        ...extensions,\n      ],\n      editorProps: {\n        ...newOptions._tiptapOptions?.editorProps,\n        attributes: {\n          // As of TipTap v2.5.0 the tabIndex is removed when the editor is not\n          // editable, so you can't focus it. We want to revert this as we have\n          // UI behaviour that relies on it.\n          tabIndex: \"0\",\n          ...newOptions._tiptapOptions?.editorProps?.attributes,\n          ...newOptions.domAttributes?.editor,\n          class: mergeCSSClasses(\n            \"bn-editor\",\n            newOptions.defaultStyles ? \"bn-default-styles\" : \"\",\n            newOptions.domAttributes?.editor?.class || \"\"\n          ),\n        },\n        transformPasted,\n      },\n    };\n\n    if (!this.headless) {\n      this._tiptapEditor = new BlockNoteTipTapEditor(\n        tiptapOptions,\n        this.schema.styleSchema\n      ) as BlockNoteTipTapEditor & {\n        contentComponent: any;\n      };\n      this._pmSchema = this._tiptapEditor.schema;\n    } else {\n      // In headless mode, we don't instantiate an underlying TipTap editor,\n      // but we still need the schema\n      this._pmSchema = getSchema(tiptapOptions.extensions!);\n    }\n  }\n\n  dispatch(tr: Transaction) {\n    this._tiptapEditor.dispatch(tr);\n  }\n\n  /**\n   * Mount the editor to a parent DOM element. Call mount(undefined) to clean up\n   *\n   * @warning Not needed to call manually when using React, use BlockNoteView to take care of mounting\n   */\n  public mount = (parentElement?: HTMLElement | null) => {\n    this._tiptapEditor.mount(parentElement);\n  };\n\n  public get prosemirrorView() {\n    return this._tiptapEditor.view;\n  }\n\n  public get domElement() {\n    return this._tiptapEditor.view.dom as HTMLDivElement;\n  }\n\n  public isFocused() {\n    return this._tiptapEditor.view.hasFocus();\n  }\n\n  public focus() {\n    this._tiptapEditor.view.focus();\n  }\n\n  /**\n   * @deprecated, use `editor.document` instead\n   */\n  public get topLevelBlocks(): Block<BSchema, ISchema, SSchema>[] {\n    return this.document;\n  }\n\n  /**\n   * Gets a snapshot of all top-level (non-nested) blocks in the editor.\n   * @returns A snapshot of all top-level (non-nested) blocks in the editor.\n   */\n  public get document(): Block<BSchema, ISchema, SSchema>[] {\n    const blocks: Block<BSchema, ISchema, SSchema>[] = [];\n\n    this._tiptapEditor.state.doc.firstChild!.descendants((node) => {\n      blocks.push(\n        nodeToBlock(\n          node,\n          this.schema.blockSchema,\n          this.schema.inlineContentSchema,\n          this.schema.styleSchema,\n          this.blockCache\n        )\n      );\n\n      return false;\n    });\n\n    return blocks;\n  }\n\n  /**\n   * Gets a snapshot of an existing block from the editor.\n   * @param blockIdentifier The identifier of an existing block that should be retrieved.\n   * @returns The block that matches the identifier, or `undefined` if no matching block was found.\n   */\n  public getBlock(\n    blockIdentifier: BlockIdentifier\n  ): Block<BSchema, ISchema, SSchema> | undefined {\n    const id =\n      typeof blockIdentifier === \"string\"\n        ? blockIdentifier\n        : blockIdentifier.id;\n    let newBlock: Block<BSchema, ISchema, SSchema> | undefined = undefined;\n\n    this._tiptapEditor.state.doc.firstChild!.descendants((node) => {\n      if (typeof newBlock !== \"undefined\") {\n        return false;\n      }\n\n      if (node.type.name !== \"blockContainer\" || node.attrs.id !== id) {\n        return true;\n      }\n\n      newBlock = nodeToBlock(\n        node,\n        this.schema.blockSchema,\n        this.schema.inlineContentSchema,\n        this.schema.styleSchema,\n        this.blockCache\n      );\n\n      return false;\n    });\n\n    return newBlock;\n  }\n\n  /**\n   * Traverses all blocks in the editor depth-first, and executes a callback for each.\n   * @param callback The callback to execute for each block. Returning `false` stops the traversal.\n   * @param reverse Whether the blocks should be traversed in reverse order.\n   */\n  public forEachBlock(\n    callback: (block: Block<BSchema, ISchema, SSchema>) => boolean,\n    reverse = false\n  ): void {\n    const blocks = this.document.slice();\n\n    if (reverse) {\n      blocks.reverse();\n    }\n\n    function traverseBlockArray(\n      blockArray: Block<BSchema, ISchema, SSchema>[]\n    ): boolean {\n      for (const block of blockArray) {\n        if (!callback(block)) {\n          return false;\n        }\n\n        const children = reverse\n          ? block.children.slice().reverse()\n          : block.children;\n\n        if (!traverseBlockArray(children)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    traverseBlockArray(blocks);\n  }\n\n  /**\n   * Executes a callback whenever the editor's contents change.\n   * @param callback The callback to execute.\n   */\n  public onEditorContentChange(callback: () => void) {\n    this._tiptapEditor.on(\"update\", callback);\n  }\n\n  /**\n   * Executes a callback whenever the editor's selection changes.\n   * @param callback The callback to execute.\n   */\n  public onEditorSelectionChange(callback: () => void) {\n    this._tiptapEditor.on(\"selectionUpdate\", callback);\n  }\n\n  /**\n   * Gets a snapshot of the current text cursor position.\n   * @returns A snapshot of the current text cursor position.\n   */\n  public getTextCursorPosition(): TextCursorPosition<\n    BSchema,\n    ISchema,\n    SSchema\n  > {\n    const { node, depth, startPos, endPos } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    )!;\n\n    // Index of the current blockContainer node relative to its parent blockGroup.\n    const nodeIndex = this._tiptapEditor.state.doc\n      .resolve(endPos)\n      .index(depth - 1);\n    // Number of the parent blockGroup's child blockContainer nodes.\n    const numNodes = this._tiptapEditor.state.doc\n      .resolve(endPos + 1)\n      .node().childCount;\n\n    // Gets previous blockContainer node at the same nesting level, if the current node isn't the first child.\n    let prevNode: Node | undefined = undefined;\n    if (nodeIndex > 0) {\n      prevNode = this._tiptapEditor.state.doc.resolve(startPos - 2).node();\n    }\n\n    // Gets next blockContainer node at the same nesting level, if the current node isn't the last child.\n    let nextNode: Node | undefined = undefined;\n    if (nodeIndex < numNodes - 1) {\n      nextNode = this._tiptapEditor.state.doc.resolve(endPos + 2).node();\n    }\n\n    return {\n      block: nodeToBlock(\n        node,\n        this.schema.blockSchema,\n        this.schema.inlineContentSchema,\n        this.schema.styleSchema,\n        this.blockCache\n      ),\n      prevBlock:\n        prevNode === undefined\n          ? undefined\n          : nodeToBlock(\n              prevNode,\n              this.schema.blockSchema,\n              this.schema.inlineContentSchema,\n              this.schema.styleSchema,\n              this.blockCache\n            ),\n      nextBlock:\n        nextNode === undefined\n          ? undefined\n          : nodeToBlock(\n              nextNode,\n              this.schema.blockSchema,\n              this.schema.inlineContentSchema,\n              this.schema.styleSchema,\n              this.blockCache\n            ),\n    };\n  }\n\n  /**\n   * Sets the text cursor position to the start or end of an existing block. Throws an error if the target block could\n   * not be found.\n   * @param targetBlock The identifier of an existing block that the text cursor should be moved to.\n   * @param placement Whether the text cursor should be placed at the start or end of the block.\n   */\n  public setTextCursorPosition(\n    targetBlock: BlockIdentifier,\n    placement: \"start\" | \"end\" = \"start\"\n  ) {\n    const id = typeof targetBlock === \"string\" ? targetBlock : targetBlock.id;\n\n    const { posBeforeNode } = getNodeById(id, this._tiptapEditor.state.doc);\n    const { startPos, contentNode } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      posBeforeNode + 2\n    )!;\n\n    const contentType: \"none\" | \"inline\" | \"table\" =\n      this.schema.blockSchema[contentNode.type.name]!.content;\n\n    if (contentType === \"none\") {\n      this._tiptapEditor.commands.setNodeSelection(startPos);\n      return;\n    }\n\n    if (contentType === \"inline\") {\n      if (placement === \"start\") {\n        this._tiptapEditor.commands.setTextSelection(startPos + 1);\n      } else {\n        this._tiptapEditor.commands.setTextSelection(\n          startPos + contentNode.nodeSize - 1\n        );\n      }\n    } else if (contentType === \"table\") {\n      if (placement === \"start\") {\n        // Need to offset the position as we have to get through the `tableRow`\n        // and `tableCell` nodes to get to the `tableParagraph` node we want to\n        // set the selection in.\n        this._tiptapEditor.commands.setTextSelection(startPos + 4);\n      } else {\n        this._tiptapEditor.commands.setTextSelection(\n          startPos + contentNode.nodeSize - 4\n        );\n      }\n    } else {\n      throw new UnreachableCaseError(contentType);\n    }\n  }\n\n  /**\n   * Gets a snapshot of the current selection.\n   */\n  public getSelection(): Selection<BSchema, ISchema, SSchema> | undefined {\n    // Either the TipTap selection is empty, or it's a node selection. In either\n    // case, it only spans one block, so we return undefined.\n    if (\n      this._tiptapEditor.state.selection.from ===\n        this._tiptapEditor.state.selection.to ||\n      \"node\" in this._tiptapEditor.state.selection\n    ) {\n      return undefined;\n    }\n\n    const blocks: Block<BSchema, ISchema, SSchema>[] = [];\n\n    // TODO: This adds all child blocks to the same array. Needs to find min\n    //  depth and only add blocks at that depth.\n    this._tiptapEditor.state.doc.descendants((node, pos) => {\n      if (node.type.spec.group !== \"blockContent\") {\n        return true;\n      }\n\n      // Fixed the block pos and size\n      // all block is wrapped with a blockContent wrapper\n      // and blockContent wrapper pos = inner block pos - 1\n      // blockContent wrapper end = inner block pos + nodeSize + 1\n      // need to add 1 to start and -1 to end\n      const end = pos + node.nodeSize - 1;\n      const start = pos + 1;\n      if (\n        end <= this._tiptapEditor.state.selection.from ||\n        start >= this._tiptapEditor.state.selection.to\n      ) {\n        return true;\n      }\n\n      blocks.push(\n        nodeToBlock(\n          this._tiptapEditor.state.doc.resolve(pos).node(),\n          this.schema.blockSchema,\n          this.schema.inlineContentSchema,\n          this.schema.styleSchema,\n          this.blockCache\n        )\n      );\n\n      return false;\n    });\n\n    return { blocks: blocks };\n  }\n\n  /**\n   * Checks if the editor is currently editable, or if it's locked.\n   * @returns True if the editor is editable, false otherwise.\n   */\n  public get isEditable(): boolean {\n    if (!this._tiptapEditor) {\n      if (!this.headless) {\n        throw new Error(\"no editor, but also not headless?\");\n      }\n      return false;\n    }\n    return this._tiptapEditor.isEditable === undefined\n      ? true\n      : this._tiptapEditor.isEditable;\n  }\n\n  /**\n   * Makes the editor editable or locks it, depending on the argument passed.\n   * @param editable True to make the editor editable, or false to lock it.\n   */\n  public set isEditable(editable: boolean) {\n    if (!this._tiptapEditor) {\n      if (!this.headless) {\n        throw new Error(\"no editor, but also not headless?\");\n      }\n      // not relevant on headless\n      return;\n    }\n    if (this._tiptapEditor.options.editable !== editable) {\n      this._tiptapEditor.setEditable(editable);\n    }\n  }\n\n  /**\n   * Inserts new blocks into the editor. If a block's `id` is undefined, BlockNote generates one automatically. Throws an\n   * error if the reference block could not be found.\n   * @param blocksToInsert An array of partial blocks that should be inserted.\n   * @param referenceBlock An identifier for an existing block, at which the new blocks should be inserted.\n   * @param placement Whether the blocks should be inserted just before, just after, or nested inside the\n   * `referenceBlock`. Inserts the blocks at the start of the existing block's children if \"nested\" is used.\n   */\n  public insertBlocks(\n    blocksToInsert: PartialBlock<BSchema, ISchema, SSchema>[],\n    referenceBlock: BlockIdentifier,\n    placement: \"before\" | \"after\" | \"nested\" = \"before\"\n  ) {\n    return insertBlocks(blocksToInsert, referenceBlock, placement, this);\n  }\n\n  /**\n   * Updates an existing block in the editor. Since updatedBlock is a PartialBlock object, some fields might not be\n   * defined. These undefined fields are kept as-is from the existing block. Throws an error if the block to update could\n   * not be found.\n   * @param blockToUpdate The block that should be updated.\n   * @param update A partial block which defines how the existing block should be changed.\n   */\n  public updateBlock(\n    blockToUpdate: BlockIdentifier,\n    update: PartialBlock<BSchema, ISchema, SSchema>\n  ) {\n    return updateBlock(blockToUpdate, update, this);\n  }\n\n  /**\n   * Removes existing blocks from the editor. Throws an error if any of the blocks could not be found.\n   * @param blocksToRemove An array of identifiers for existing blocks that should be removed.\n   */\n  public removeBlocks(blocksToRemove: BlockIdentifier[]) {\n    return removeBlocks(blocksToRemove, this);\n  }\n\n  /**\n   * Replaces existing blocks in the editor with new blocks. If the blocks that should be removed are not adjacent or\n   * are at different nesting levels, `blocksToInsert` will be inserted at the position of the first block in\n   * `blocksToRemove`. Throws an error if any of the blocks to remove could not be found.\n   * @param blocksToRemove An array of blocks that should be replaced.\n   * @param blocksToInsert An array of partial blocks to replace the old ones with.\n   */\n  public replaceBlocks(\n    blocksToRemove: BlockIdentifier[],\n    blocksToInsert: PartialBlock<BSchema, ISchema, SSchema>[]\n  ) {\n    return replaceBlocks(blocksToRemove, blocksToInsert, this);\n  }\n\n  /**\n   * Insert a piece of content at the current cursor position.\n   *\n   * @param content can be a string, or array of partial inline content elements\n   */\n  public insertInlineContent(content: PartialInlineContent<ISchema, SSchema>) {\n    const nodes = inlineContentToNodes(\n      content,\n      this.pmSchema,\n      this.schema.styleSchema\n    );\n\n    insertContentAt(\n      {\n        from: this._tiptapEditor.state.selection.from,\n        to: this._tiptapEditor.state.selection.to,\n      },\n      nodes,\n      this\n    );\n  }\n\n  /**\n   * Gets the active text styles at the text cursor position or at the end of the current selection if it's active.\n   */\n  public getActiveStyles() {\n    const styles: Styles<SSchema> = {};\n    const marks = this._tiptapEditor.state.selection.$to.marks();\n\n    for (const mark of marks) {\n      const config = this.schema.styleSchema[mark.type.name];\n      if (!config) {\n        if (mark.type.name !== \"link\") {\n          // eslint-disable-next-line no-console\n          console.warn(\"mark not found in styleschema\", mark.type.name);\n        }\n\n        continue;\n      }\n      if (config.propSchema === \"boolean\") {\n        (styles as any)[config.type] = true;\n      } else {\n        (styles as any)[config.type] = mark.attrs.stringValue;\n      }\n    }\n\n    return styles;\n  }\n\n  /**\n   * Adds styles to the currently selected content.\n   * @param styles The styles to add.\n   */\n  public addStyles(styles: Styles<SSchema>) {\n    for (const [style, value] of Object.entries(styles)) {\n      const config = this.schema.styleSchema[style];\n      if (!config) {\n        throw new Error(`style ${style} not found in styleSchema`);\n      }\n      if (config.propSchema === \"boolean\") {\n        this._tiptapEditor.commands.setMark(style);\n      } else if (config.propSchema === \"string\") {\n        this._tiptapEditor.commands.setMark(style, { stringValue: value });\n      } else {\n        throw new UnreachableCaseError(config.propSchema);\n      }\n    }\n  }\n\n  /**\n   * Removes styles from the currently selected content.\n   * @param styles The styles to remove.\n   */\n  public removeStyles(styles: Styles<SSchema>) {\n    for (const style of Object.keys(styles)) {\n      this._tiptapEditor.commands.unsetMark(style);\n    }\n  }\n\n  /**\n   * Toggles styles on the currently selected content.\n   * @param styles The styles to toggle.\n   */\n  public toggleStyles(styles: Styles<SSchema>) {\n    for (const [style, value] of Object.entries(styles)) {\n      const config = this.schema.styleSchema[style];\n      if (!config) {\n        throw new Error(`style ${style} not found in styleSchema`);\n      }\n      if (config.propSchema === \"boolean\") {\n        this._tiptapEditor.commands.toggleMark(style);\n      } else if (config.propSchema === \"string\") {\n        this._tiptapEditor.commands.toggleMark(style, { stringValue: value });\n      } else {\n        throw new UnreachableCaseError(config.propSchema);\n      }\n    }\n  }\n\n  /**\n   * Gets the currently selected text.\n   */\n  public getSelectedText() {\n    return this._tiptapEditor.state.doc.textBetween(\n      this._tiptapEditor.state.selection.from,\n      this._tiptapEditor.state.selection.to\n    );\n  }\n\n  /**\n   * Gets the URL of the last link in the current selection, or `undefined` if there are no links in the selection.\n   */\n  public getSelectedLinkUrl() {\n    return this._tiptapEditor.getAttributes(\"link\").href as string | undefined;\n  }\n\n  /**\n   * Creates a new link to replace the selected content.\n   * @param url The link URL.\n   * @param text The text to display the link with.\n   */\n  public createLink(url: string, text?: string) {\n    if (url === \"\") {\n      return;\n    }\n\n    const { from, to } = this._tiptapEditor.state.selection;\n\n    if (!text) {\n      text = this._tiptapEditor.state.doc.textBetween(from, to);\n    }\n\n    const mark = this.pmSchema.mark(\"link\", { href: url });\n\n    this.dispatch(\n      this._tiptapEditor.state.tr\n        .insertText(text, from, to)\n        .addMark(from, from + text.length, mark)\n    );\n  }\n\n  /**\n   * Checks if the block containing the text cursor can be nested.\n   */\n  public canNestBlock() {\n    const { startPos, depth } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    )!;\n\n    return this._tiptapEditor.state.doc.resolve(startPos).index(depth - 1) > 0;\n  }\n\n  /**\n   * Nests the block containing the text cursor into the block above it.\n   */\n  public nestBlock() {\n    this._tiptapEditor.commands.sinkListItem(\"blockContainer\");\n  }\n\n  /**\n   * Checks if the block containing the text cursor is nested.\n   */\n  public canUnnestBlock() {\n    const { depth } = getBlockInfoFromPos(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    )!;\n\n    return depth > 2;\n  }\n\n  /**\n   * Lifts the block containing the text cursor out of its parent.\n   */\n  public unnestBlock() {\n    this._tiptapEditor.commands.liftListItem(\"blockContainer\");\n  }\n\n  /**\n   * Exports blocks into a simplified HTML string. To better conform to HTML standards, children of blocks which aren't list\n   * items are un-nested in the output HTML.\n   *\n   * @param blocks An array of blocks that should be serialized into HTML.\n   * @returns The blocks, serialized as an HTML string.\n   */\n  public async blocksToHTMLLossy(\n    blocks: PartialBlock<BSchema, ISchema, SSchema>[] = this.document\n  ): Promise<string> {\n    await initializeESMDependencies();\n    const exporter = createExternalHTMLExporter(this.pmSchema, this);\n    return exporter.exportBlocks(blocks, {});\n  }\n\n  /**\n   * Serializes blocks into an HTML string in the format that would normally be rendered by the editor.\n   *\n   * Use this method if you want to server-side render HTML (for example, a blog post that has been edited in BlockNote)\n   * and serve it to users without loading the editor on the client (i.e.: displaying the blog post)\n   *\n   * @param blocks An array of blocks that should be serialized into HTML.\n   * @returns The blocks, serialized as an HTML string.\n   */\n  public async blocksToFullHTML(\n    blocks: PartialBlock<BSchema, ISchema, SSchema>[]\n  ): Promise<string> {\n    const exporter = createInternalHTMLSerializer(this.pmSchema, this);\n    return exporter.serializeBlocks(blocks, {});\n  }\n  /**\n   * Parses blocks from an HTML string. Tries to create `Block` objects out of any HTML block-level elements, and\n   * `InlineNode` objects from any HTML inline elements, though not all element types are recognized. If BlockNote\n   * doesn't recognize an HTML element's tag, it will parse it as a paragraph or plain text.\n   * @param html The HTML string to parse blocks from.\n   * @returns The blocks parsed from the HTML string.\n   */\n  public async tryParseHTMLToBlocks(\n    html: string\n  ): Promise<Block<BSchema, ISchema, SSchema>[]> {\n    return HTMLToBlocks(\n      html,\n      this.schema.blockSchema,\n      this.schema.inlineContentSchema,\n      this.schema.styleSchema,\n      this.pmSchema\n    );\n  }\n\n  /**\n   * Serializes blocks into a Markdown string. The output is simplified as Markdown does not support all features of\n   * BlockNote - children of blocks which aren't list items are un-nested and certain styles are removed.\n   * @param blocks An array of blocks that should be serialized into Markdown.\n   * @returns The blocks, serialized as a Markdown string.\n   */\n  public async blocksToMarkdownLossy(\n    blocks: PartialBlock<BSchema, ISchema, SSchema>[] = this.document\n  ): Promise<string> {\n    return blocksToMarkdown(blocks, this.pmSchema, this, {});\n  }\n\n  /**\n   * Creates a list of blocks from a Markdown string. Tries to create `Block` and `InlineNode` objects based on\n   * Markdown syntax, though not all symbols are recognized. If BlockNote doesn't recognize a symbol, it will parse it\n   * as text.\n   * @param markdown The Markdown string to parse blocks from.\n   * @returns The blocks parsed from the Markdown string.\n   */\n  public async tryParseMarkdownToBlocks(\n    markdown: string\n  ): Promise<Block<BSchema, ISchema, SSchema>[]> {\n    return markdownToBlocks(\n      markdown,\n      this.schema.blockSchema,\n      this.schema.inlineContentSchema,\n      this.schema.styleSchema,\n      this.pmSchema\n    );\n  }\n\n  /**\n   * Updates the user info for the current user that's shown to other collaborators.\n   */\n  public updateCollaborationUserInfo(user: { name: string; color: string }) {\n    if (!this.options.collaboration) {\n      throw new Error(\n        \"Cannot update collaboration user info when collaboration is disabled.\"\n      );\n    }\n    this._tiptapEditor.commands.updateUser(user);\n  }\n\n  /**\n   * A callback function that runs whenever the editor's contents change.\n   *\n   * @param callback The callback to execute.\n   * @returns A function to remove the callback.\n   */\n  public onChange(\n    callback: (editor: BlockNoteEditor<BSchema, ISchema, SSchema>) => void\n  ) {\n    if (this.headless) {\n      // Note: would be nice if this is possible in headless mode as well\n      return;\n    }\n\n    const cb = () => {\n      callback(this);\n    };\n\n    this._tiptapEditor.on(\"update\", cb);\n\n    return () => {\n      this._tiptapEditor.off(\"update\", cb);\n    };\n  }\n\n  /**\n   * A callback function that runs whenever the text cursor position or selection changes.\n   *\n   * @param callback The callback to execute.\n   * @returns A function to remove the callback.\n   */\n  public onSelectionChange(\n    callback: (editor: BlockNoteEditor<BSchema, ISchema, SSchema>) => void\n  ) {\n    if (this.headless) {\n      return;\n    }\n\n    const cb = () => {\n      callback(this);\n    };\n\n    this._tiptapEditor.on(\"selectionUpdate\", cb);\n\n    return () => {\n      this._tiptapEditor.off(\"selectionUpdate\", cb);\n    };\n  }\n\n  public openSuggestionMenu(\n    triggerCharacter: string,\n    pluginState?: {\n      deleteTriggerCharacter?: boolean;\n      ignoreQueryLength?: boolean;\n    }\n  ) {\n    const tr = this.prosemirrorView.state.tr;\n    const transaction =\n      pluginState && pluginState.deleteTriggerCharacter\n        ? tr.insertText(triggerCharacter)\n        : tr;\n\n    this.prosemirrorView.focus();\n    this.prosemirrorView.dispatch(\n      transaction.scrollIntoView().setMeta(this.suggestionMenus.plugin, {\n        triggerCharacter: triggerCharacter,\n        deleteTriggerCharacter: pluginState?.deleteTriggerCharacter || false,\n        ignoreQueryLength: pluginState?.ignoreQueryLength || false,\n      })\n    );\n  }\n}\n", "import type { Emoji, EmojiMartData } from \"@emoji-mart/data\";\n\nimport { checkDefaultInlineContentTypeInSchema } from \"../../blocks/defaultBlockTypeGuards\";\nimport { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\nimport { BlockSchema, InlineContentSchema, StyleSchema } from \"../../schema\";\nimport { DefaultGridSuggestionItem } from \"./DefaultGridSuggestionItem\";\n\nlet data:\n  | Promise<{\n      default: EmojiMartData;\n    }>\n  | undefined;\n\nlet emojiMart: typeof import(\"emoji-mart\") | undefined;\n\nexport async function getDefaultEmojiPickerItems<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>,\n  query: string\n): Promise<DefaultGridSuggestionItem[]> {\n  if (!checkDefaultInlineContentTypeInSchema(\"text\", editor)) {\n    return [];\n  }\n\n  if (!data) {\n    // use a dynamic import to encourage bundle-splitting\n    // and a smaller initial client bundle size\n    data = import(\"@emoji-mart/data\", { assert: { type: \"json\" } }) as any;\n\n    // load dynamically because emoji-mart doesn't specify type: module and breaks in nodejs\n    emojiMart = await import(\"emoji-mart\");\n    const emojiMartData = (await data)!.default;\n    await emojiMart.init({ data: emojiMartData });\n  }\n\n  const emojiMartData = (await data)!.default;\n\n  const emojisToShow =\n    query.trim() === \"\"\n      ? Object.values(emojiMartData.emojis)\n      : ((await emojiMart!.SearchIndex.search(query)) as Emoji[]);\n\n  return emojisToShow.map((emoji) => ({\n    id: emoji.skins[0].native,\n    onItemClick: () => editor.insertInlineContent(emoji.skins[0].native + \" \"),\n  }));\n}\n", "import { Block, PartialBlock } from \"../../blocks/defaultBlocks\";\nimport type { BlockNoteEditor } from \"../../editor/BlockNoteEditor\";\n\nimport { checkDefaultBlockTypeInSchema } from \"../../blocks/defaultBlockTypeGuards\";\nimport {\n  BlockSchema,\n  InlineContentSchema,\n  StyleSchema,\n  isStyledTextInlineContent,\n} from \"../../schema\";\nimport { formatKeyboardShortcut } from \"../../util/browser\";\nimport { DefaultSuggestionItem } from \"./DefaultSuggestionItem\";\n\n// Sets the editor's text cursor position to the next content editable block,\n// so either a block with inline content or a table. The last block is always a\n// paragraph, so this function won't try to set the cursor position past the\n// last block.\nfunction setSelectionToNextContentEditableBlock<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(editor: BlockNoteEditor<BSchema, I, S>) {\n  let block = editor.getTextCursorPosition().block;\n  let contentType = editor.schema.blockSchema[block.type].content;\n\n  while (contentType === \"none\") {\n    block = editor.getTextCursorPosition().nextBlock!;\n    contentType = editor.schema.blockSchema[block.type].content as\n      | \"inline\"\n      | \"table\"\n      | \"none\";\n    editor.setTextCursorPosition(block, \"end\");\n  }\n}\n\n// Checks if the current block is empty or only contains a slash, and if so,\n// updates the current block instead of inserting a new one below. If the new\n// block doesn't contain editable content, the cursor is moved to the next block\n// that does.\nexport function insertOrUpdateBlock<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  editor: BlockNoteEditor<BSchema, I, S>,\n  block: PartialBlock<BSchema, I, S>\n): Block<BSchema, I, S> {\n  const currentBlock = editor.getTextCursorPosition().block;\n\n  if (currentBlock.content === undefined) {\n    throw new Error(\"Slash Menu open in a block that doesn't contain content.\");\n  }\n\n  if (\n    Array.isArray(currentBlock.content) &&\n    ((currentBlock.content.length === 1 &&\n      isStyledTextInlineContent(currentBlock.content[0]) &&\n      currentBlock.content[0].type === \"text\" &&\n      currentBlock.content[0].text === \"/\") ||\n      currentBlock.content.length === 0)\n  ) {\n    editor.updateBlock(currentBlock, block);\n  } else {\n    editor.insertBlocks([block], currentBlock, \"after\");\n    editor.setTextCursorPosition(\n      editor.getTextCursorPosition().nextBlock!,\n      \"end\"\n    );\n  }\n\n  const insertedBlock = editor.getTextCursorPosition().block;\n  setSelectionToNextContentEditableBlock(editor);\n\n  return insertedBlock;\n}\n\nexport function getDefaultSlashMenuItems<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(editor: BlockNoteEditor<BSchema, I, S>) {\n  const items: DefaultSuggestionItem[] = [];\n\n  if (checkDefaultBlockTypeInSchema(\"heading\", editor)) {\n    items.push(\n      {\n        onItemClick: () => {\n          insertOrUpdateBlock(editor, {\n            type: \"heading\",\n            props: { level: 1 },\n          });\n        },\n        badge: formatKeyboardShortcut(\"Mod-Alt-1\"),\n        key: \"heading\",\n        ...editor.dictionary.slash_menu.heading,\n      },\n      {\n        onItemClick: () => {\n          insertOrUpdateBlock(editor, {\n            type: \"heading\",\n            props: { level: 2 },\n          });\n        },\n        badge: formatKeyboardShortcut(\"Mod-Alt-2\"),\n        key: \"heading_2\",\n        ...editor.dictionary.slash_menu.heading_2,\n      },\n      {\n        onItemClick: () => {\n          insertOrUpdateBlock(editor, {\n            type: \"heading\",\n            props: { level: 3 },\n          });\n        },\n        badge: formatKeyboardShortcut(\"Mod-Alt-3\"),\n        key: \"heading_3\",\n        ...editor.dictionary.slash_menu.heading_3,\n      }\n    );\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"numberedListItem\", editor)) {\n    items.push({\n      onItemClick: () => {\n        insertOrUpdateBlock(editor, {\n          type: \"numberedListItem\",\n        });\n      },\n      badge: formatKeyboardShortcut(\"Mod-Shift-7\"),\n      key: \"numbered_list\",\n      ...editor.dictionary.slash_menu.numbered_list,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"bulletListItem\", editor)) {\n    items.push({\n      onItemClick: () => {\n        insertOrUpdateBlock(editor, {\n          type: \"bulletListItem\",\n        });\n      },\n      badge: formatKeyboardShortcut(\"Mod-Shift-8\"),\n      key: \"bullet_list\",\n      ...editor.dictionary.slash_menu.bullet_list,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"checkListItem\", editor)) {\n    items.push({\n      onItemClick: () => {\n        insertOrUpdateBlock(editor, {\n          type: \"checkListItem\",\n        });\n      },\n      badge: formatKeyboardShortcut(\"Mod-Shift-9\"),\n      key: \"check_list\",\n      ...editor.dictionary.slash_menu.check_list,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"paragraph\", editor)) {\n    items.push({\n      onItemClick: () => {\n        insertOrUpdateBlock(editor, {\n          type: \"paragraph\",\n        });\n      },\n      badge: formatKeyboardShortcut(\"Mod-Alt-0\"),\n      key: \"paragraph\",\n      ...editor.dictionary.slash_menu.paragraph,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"table\", editor)) {\n    items.push({\n      onItemClick: () => {\n        insertOrUpdateBlock(editor, {\n          type: \"table\",\n          content: {\n            type: \"tableContent\",\n            rows: [\n              {\n                cells: [\"\", \"\", \"\"],\n              },\n              {\n                cells: [\"\", \"\", \"\"],\n              },\n            ],\n          },\n        });\n      },\n      badge: undefined,\n      key: \"table\",\n      ...editor.dictionary.slash_menu.table,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"image\", editor)) {\n    items.push({\n      onItemClick: () => {\n        const insertedBlock = insertOrUpdateBlock(editor, {\n          type: \"image\",\n        });\n\n        // Immediately open the file toolbar\n        editor.dispatch(\n          editor._tiptapEditor.state.tr.setMeta(editor.filePanel!.plugin, {\n            block: insertedBlock,\n          })\n        );\n      },\n      key: \"image\",\n      ...editor.dictionary.slash_menu.image,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"video\", editor)) {\n    items.push({\n      onItemClick: () => {\n        const insertedBlock = insertOrUpdateBlock(editor, {\n          type: \"video\",\n        });\n\n        // Immediately open the file toolbar\n        editor.dispatch(\n          editor._tiptapEditor.state.tr.setMeta(editor.filePanel!.plugin, {\n            block: insertedBlock,\n          })\n        );\n      },\n      key: \"video\",\n      ...editor.dictionary.slash_menu.video,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"audio\", editor)) {\n    items.push({\n      onItemClick: () => {\n        const insertedBlock = insertOrUpdateBlock(editor, {\n          type: \"audio\",\n        });\n\n        // Immediately open the file toolbar\n        editor.dispatch(\n          editor._tiptapEditor.state.tr.setMeta(editor.filePanel!.plugin, {\n            block: insertedBlock,\n          })\n        );\n      },\n      key: \"audio\",\n      ...editor.dictionary.slash_menu.audio,\n    });\n  }\n\n  if (checkDefaultBlockTypeInSchema(\"file\", editor)) {\n    items.push({\n      onItemClick: () => {\n        const insertedBlock = insertOrUpdateBlock(editor, {\n          type: \"file\",\n        });\n\n        // Immediately open the file toolbar\n        editor.dispatch(\n          editor._tiptapEditor.state.tr.setMeta(editor.filePanel!.plugin, {\n            block: insertedBlock,\n          })\n        );\n      },\n      key: \"image\",\n      ...editor.dictionary.slash_menu.file,\n    });\n  }\n\n  items.push({\n    onItemClick: () => {\n      editor.openSuggestionMenu(\":\", {\n        deleteTriggerCharacter: true,\n        ignoreQueryLength: true,\n      });\n    },\n    key: \"emoji\",\n    ...editor.dictionary.slash_menu.emoji,\n  });\n\n  return items;\n}\n\nexport function filterSuggestionItems<\n  T extends { title: string; aliases?: readonly string[] }\n>(items: T[], query: string) {\n  return items.filter(\n    ({ title, aliases }) =>\n      title.toLowerCase().includes(query.toLowerCase()) ||\n      (aliases &&\n        aliases.filter((alias) =>\n          alias.toLowerCase().includes(query.toLowerCase())\n        ).length !== 0)\n  );\n}\n", "import { Block, PartialBlock } from \"../../blocks/defaultBlocks\";\nimport UniqueID from \"../../extensions/UniqueID/UniqueID\";\nimport { BlockSchema, TableContent } from \"../../schema/blocks/types\";\nimport {\n  InlineContent,\n  InlineContentSchema,\n  PartialInlineContent,\n  StyledText,\n  isPartialLinkInlineContent,\n  isStyledTextInlineContent,\n} from \"../../schema/inlineContent/types\";\nimport { StyleSchema } from \"../../schema/styles/types\";\n\nfunction textShorthandToStyledText(\n  content: string | StyledText<any>[] = \"\"\n): StyledText<any>[] {\n  if (typeof content === \"string\") {\n    return [\n      {\n        type: \"text\",\n        text: content,\n        styles: {},\n      },\n    ];\n  }\n  return content;\n}\n\nfunction partialContentToInlineContent(\n  content: PartialInlineContent<any, any> | TableContent<any> | undefined\n): InlineContent<any, any>[] | TableContent<any> | undefined {\n  if (typeof content === \"string\") {\n    return textShorthandToStyledText(content);\n  }\n\n  if (Array.isArray(content)) {\n    return content.flatMap((partialContent) => {\n      if (typeof partialContent === \"string\") {\n        return textShorthandToStyledText(partialContent);\n      } else if (isPartialLinkInlineContent(partialContent)) {\n        return {\n          ...partialContent,\n          content: textShorthandToStyledText(partialContent.content),\n        };\n      } else if (isStyledTextInlineContent(partialContent)) {\n        return partialContent;\n      } else {\n        // custom inline content\n\n        return {\n          props: {},\n          ...partialContent,\n          content: partialContentToInlineContent(partialContent.content),\n        } as any;\n      }\n    });\n  }\n\n  return content;\n}\n\nexport function partialBlocksToBlocksForTesting<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  schema: BSchema,\n  partialBlocks: Array<PartialBlock<BSchema, I, S>>\n): Array<Block<BSchema, I, S>> {\n  return partialBlocks.map((partialBlock) =>\n    partialBlockToBlockForTesting(schema, partialBlock)\n  );\n}\n\nexport function partialBlockToBlockForTesting<\n  BSchema extends BlockSchema,\n  I extends InlineContentSchema,\n  S extends StyleSchema\n>(\n  schema: BSchema,\n  partialBlock: PartialBlock<BSchema, I, S>\n): Block<BSchema, I, S> {\n  const withDefaults: Block<BSchema, I, S> = {\n    id: \"\",\n    type: partialBlock.type!,\n    props: {} as any,\n    content:\n      schema[partialBlock.type!].content === \"inline\" ? [] : (undefined as any),\n    children: [] as any,\n    ...partialBlock,\n  };\n\n  Object.entries(schema[partialBlock.type!].propSchema).forEach(\n    ([propKey, propValue]) => {\n      if (withDefaults.props[propKey] === undefined) {\n        (withDefaults.props as any)[propKey] = propValue.default;\n      }\n    }\n  );\n\n  return {\n    ...withDefaults,\n    content: partialContentToInlineContent(withDefaults.content),\n    children: withDefaults.children.map((c) => {\n      return partialBlockToBlockForTesting(schema, c);\n    }),\n  } as any;\n}\n\nexport function addIdsToBlock(block: PartialBlock<any, any, any>) {\n  if (!block.id) {\n    block.id = UniqueID.options.generateID();\n  }\n  if (block.children) {\n    addIdsToBlocks(block.children);\n  }\n}\n\nexport function addIdsToBlocks(blocks: PartialBlock<any, any, any>[]) {\n  for (const block of blocks) {\n    addIdsToBlock(block);\n  }\n}\n"],
  "mappings": "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EAEA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,qBAAqB;MACnB,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,YAAY;MACV,SAAS;IACX;IACA,cAAc;MACZ,SAAS;IACX;IACA,aAAa;MACX,SAAS;IACX;IACA,eAAe;MACb,SAAS;IACX;EACF;EACA,YAAY;IACV,QAAQ;MACN,OAAO;MACP,kBAAkB;QAChB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,cAAc;IAChB;IACA,OAAO;MACL,OAAO;MACP,cAAc;QACZ,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,iBAAiB;IACnB;EACF;EACA,cAAc;IACZ,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,MAAM;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;IACX;IACA,MAAM;MACJ,mBAAmB;MACnB,iBAAiB;IACnB;EACF;EACA,SAAS;IACP,eAAe;EACjB;AACF;AAnSO,ICFMC,KAAK;EACd,YAAY;IACV,SAAS;MACP,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,gBAAgB,IAAI;MACnC,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,gBAAgB,kBAAkB;MAClD,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,gBAAgB,kBAAkB;MAClD,OAAO;IACT;IACA,eAAe;MACb,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,oBAAoB,mBAAmB;MACtE,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,oBAAoB,kBAAkB;MACrE,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,QAAQ;MACvB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS;MACnB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,MAAM;MACJ,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,aAAa,aAAa,UAAU,KAAK;MAC5D,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,SAAS,WAAW,SAAS;MAChD,OAAO;IACT;EACF;EACA,cAAc;IACZ,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;EACjB;EACA,aAAa;IACX,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,MAAM;MACJ,iBAAiB;IACnB;EACF;EACA,WAAW;IACT,iBAAiB;IACjB,mBAAmB;EACrB;EACA,aAAa;IACX,iBAAiB;IACjB,iBAAiB;EACnB;EACA,cAAc;IACZ,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;EACtB;EACA,iBAAiB;IACf,gBAAgB;IAChB,SAAS;EACX;EACA,cAAc;IACZ,YAAY;IACZ,kBAAkB;IAClB,QAAQ;MACN,SAAS;MACT,MAAM;MACN,OAAO;MACP,KAAK;MACL,QAAQ;MACR,QAAQ;MACR,OAAO;MACP,MAAM;MACN,QAAQ;MACR,MAAM;IACR;EACF;EACA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,qBAAqB;MACnB,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,YAAY;MACV,SAAS;IACX;IACA,cAAc;MACZ,SAAS;IACX;IACA,aAAa;MACX,SAAS;IACX;IACA,eAAe;MACb,SAAS;IACX;EACF;EACA,YAAY;IACV,QAAQ;MACN,OAAO;MACP,kBAAkB;QAChB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,cAAc;IAChB;IACA,OAAO;MACL,OAAO;MACP,cAAc;QACZ,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,iBAAiB;IACnB;EACF;EACA,cAAc;IACZ,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,MAAM;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;IACX;IACA,MAAM;MACJ,mBAAmB;MACnB,iBAAiB;IACnB;EACF;EACA,SAAS;IACP,eAAe;EACjB;AACF;AD/SK,IEFMC,KAAK;EAChB,YAAY;IACV,SAAS;MACP,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,YAAY,IAAI;MAC/B,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,YAAY,YAAY;MACxC,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,YAAY,YAAY;MACxC,OAAO;IACT;IACA,eAAe;MACb,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,QAAQ,gBAAgB,eAAe;MAC7D,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,QAAQ,cAAc,aAAa;MACzD,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,WAAW;MAC1B,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,OAAO;MACjB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,MAAM;MACJ,OAAO;MACP,SAAS;MACT,SAAS,CAAC,QAAQ,UAAU,SAAS,SAAS,KAAK;MACnD,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,SAAS,WAAW,MAAM;MAC7C,OAAO;IACT;EACF;EACA,cAAc;IACZ,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;EACjB;EACA,aAAa;IACX,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,MAAM;MACJ,iBAAiB;IACnB;EACF;;EAEA,WAAW;IACT,iBAAiB;IACjB,mBAAmB;EACrB;EACA,aAAa;IACX,iBAAiB;IACjB,iBAAiB;EACnB;EACA,cAAc;IACZ,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;EACtB;EACA,iBAAiB;IACf,gBAAgB;IAChB,SAAS;EACX;EACA,cAAc;IACZ,YAAY;IACZ,kBAAkB;IAClB,QAAQ;MACN,SAAS;MACT,MAAM;MACN,OAAO;MACP,KAAK;MACL,QAAQ;MACR,QAAQ;MACR,OAAO;MACP,MAAM;MACN,QAAQ;MACR,MAAM;IACR;EACF;EAEA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,qBAAqB;MACnB,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,YAAY;MACV,SAAS;IACX;IACA,cAAc;MACZ,SAAS;IACX;IACA,aAAa;MACX,SAAS;IACX;IACA,eAAe;MACb,SAAS;IACX;EACF;EACA,YAAY;IACV,QAAQ;MACN,OAAO;MACP,kBAAkB;QAChB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,cAAc;IAChB;IACA,OAAO;MACL,OAAO;MACP,cAAc;QACZ,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,iBAAiB;IACnB;EACF;EACA,cAAc;IACZ,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,MAAM;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;IACX;IACA,MAAM;MACJ,mBAAmB;MACnB,iBAAiB;IACnB;EACF;EACA,SAAS;IACP,eAAe;EACjB;AACF;AFjTO,IGFMC,KAAK;EACd,YAAY;IACV,SAAS;MACP,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,eAAe,IAAI;MAClC,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,eAAe,eAAe;MAC9C,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,eAAe,eAAe;MAC9C,OAAO;IACT;IACA,eAAe;MACb,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,gBAAgB;MAC/C,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,mBAAmB;MAClD,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,yBAAyB,oBAAoB,UAAU;MACtF,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,SAAS;MACxB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,OAAO;MACjB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,UAAU,gBAAgB,UAAU,OAAO,QAAQ,SAAS,KAAK;MAC3E,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,eAAe,UAAU,OAAO,YAAY,SAAS,KAAK;MAC7E,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,eAAe,UAAU,OAAO,UAAU,SAAS,KAAK;MAC3E,OAAO;IACT;IACA,MAAM;MACJ,OAAO;MACP,SAAS;MACT,SAAS,CAAC,WAAW,UAAU,aAAa,SAAS,KAAK;MAC1D,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,aAAa,WAAW,MAAM;MACjD,OAAO;IACT;EACF;EACA,cAAc;IACZ,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;EACjB;EACA,aAAa;IACX,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,MAAM;MACJ,iBAAiB;IACnB;EACF;EACA,WAAW;IACT,iBAAiB;IACjB,mBAAmB;EACrB;EACA,aAAa;IACX,iBAAiB;IACjB,iBAAiB;EACnB;EACA,cAAc;IACZ,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;EACtB;EACA,iBAAiB;IACf,gBAAgB;IAChB,SAAS;EACX;EACA,cAAc;IACZ,YAAY;IACZ,kBAAkB;IAClB,QAAQ;MACN,SAAS;MACT,MAAM;MACN,OAAO;MACP,KAAK;MACL,QAAQ;MACR,QAAQ;MACR,OAAO;MACP,MAAM;MACN,QAAQ;MACR,MAAM;IACR;EACF;EACA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,qBAAqB;MACnB,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,YAAY;MACV,SAAS;IACX;IACA,cAAc;MACZ,SAAS;IACX;IACA,aAAa;MACX,SAAS;IACX;IACA,eAAe;MACb,SAAS;IACX;EACF;EACA,YAAY;IACV,QAAQ;MACN,OAAO;MACP,kBAAkB;QAChB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,cAAc;IAChB;IACA,OAAO;MACL,OAAO;MACP,cAAc;QACZ,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,iBAAiB;IACnB;EACF;EACA,cAAc;IACZ,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,MAAM;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;IACX;IACA,MAAM;MACJ,mBAAmB;MACnB,iBAAiB;IACnB;EACF;EACA,SAAS;IACP,eAAe;EACjB;AACF;AH/QK,IIAMC,KAAiB;EAC5B,YAAY;IACV,SAAS;MACP,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,UAAU,IAAI;MAC7B,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,UAAU,YAAY;MACtC,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,UAAU,YAAY;MACtC,OAAO;IACT;IACA,eAAe;MACb,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,kBAAkB,iBAAiB;MAClE,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,eAAe,eAAe;MAC7D,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,YAAY;MAC3B,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS;MACnB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;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,gBAAgB;MAC/C,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,aAAa;MAC5C,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,kBAAkB,eAAe;MAChE,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,WAAW;MAC1B,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,OAAO;MACjB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,MAAM;MACJ,OAAO;MACP,SAAS;MACT,SAAS,CAAC,QAAQ,aAAa,aAAa,UAAU,KAAK;MAC3D,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,iBAAiB,gBAAgB,QAAQ;MAC5D,OAAO;IACT;EACF;EACA,cAAc;IACZ,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;EACjB;EACA,aAAa;IACX,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,MAAM;MACJ,iBAAiB;IACnB;EACF;EACA,WAAW;IACT,iBAAiB;IACjB,mBAAmB;EACrB;EACA,aAAa;IACX,iBAAiB;IACjB,iBAAiB;EACnB;EACA,cAAc;IACZ,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;EACtB;EACA,iBAAiB;IACf,gBAAgB;IAChB,SAAS;EACX;EACA,cAAc;IACZ,YAAY;IACZ,kBAAkB;IAClB,QAAQ;MACN,SAAS;MACT,MAAM;MACN,OAAO;MACP,KAAK;MACL,QAAQ;MACR,QAAQ;MACR,OAAO;MACP,MAAM;MACN,QAAQ;MACR,MAAM;IACR;EACF;EAEA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,qBAAqB;MACnB,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,YAAY;MACV,SAAS;IACX;IACA,cAAc;MACZ,SAAS;IACX;IACA,aAAa;MACX,SAAS;IACX;IACA,eAAe;MACb,SAAS;IACX;EACF;EACA,YAAY;IACV,QAAQ;MACN,OAAO;MACP,kBAAkB;QAChB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,cAAc;IAChB;IACA,OAAO;MACL,OAAO;MACP,cAAc;QACZ,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,iBAAiB;IACnB;EACF;EACA,cAAc;IACZ,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,MAAM;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;IACX;IACA,MAAM;MACJ,mBAAmB;MACnB,iBAAiB;IACnB;EACF;EACA,SAAS;IACP,eAAe;EACjB;AACF;AL1SO,IMAMC,KAAiB;EAC5B,YAAY;IACV,SAAS;MACP,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,QAAQ,MAAM,MAAM;MACnC,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,QAAQ,cAAc,MAAM;MAC5C,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,QAAQ,cAAc,MAAM;MAC5C,OAAO;IACT;IACA,eAAe;MACb,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,aAAa,QAAQ;MACpC,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,KAAK,MAAM;MAC9B,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,MAA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,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,aAAa,IAAI;MAChC,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,GAAG;MACb,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,MAAM;MACJ,OAAO;MACP,SAAS;MACT,SAAS,CAAC,QAAQ,UAAU,SAAS,SAAS,MAAM,KAAK;MACzD,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;EACF;EACA,cAAc;IACZ,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;EACjB;EACA,aAAa;IACX,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,MAAM;MACJ,iBAAiB;IACnB;EACF;;EAEA,WAAW;IACT,iBAAiB;IACjB,mBAAmB;EACrB;EACA,aAAa;IACX,iBAAiB;IACjB,iBAAiB;EACnB;EACA,cAAc;IACZ,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;EACtB;EACA,iBAAiB;IACf,gBAAgB;IAChB,SAAS;EACX;EACA,cAAc;IACZ,YAAY;IACZ,kBAAkB;IAClB,QAAQ;MACN,SAAS;MACT,MAAM;MACN,OAAO;MACP,KAAK;MACL,QAAQ;MACR,QAAQ;MACR,OAAO;MACP,MAAM;MACN,QAAQ;MACR,MAAM;IACR;EACF;EAEA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,qBAAqB;MACnB,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,YAAY;MACV,SAAS;IACX;IACA,cAAc;MACZ,SAAS;IACX;IACA,aAAa;MACX,SAAS;IACX;IACA,eAAe;MACb,SAAS;IACX;EACF;EACA,YAAY;IACV,QAAQ;MACN,OAAO;MACP,kBAAkB;QAChB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,cAAc;IAChB;IACA,OAAO;MACL,OAAO;MACP,cAAc;QACZ,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,iBAAiB;IACnB;EACF;EACA,cAAc;IACZ,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,MAAM;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;IACX;IACA,MAAM;MACJ,mBAAmB;MACnB,iBAAiB;IACnB;EACF;EACA,SAAS;IACP,eAAe;EACjB;AACF;AP/TO,IQAMC,KAAiB;EAC5B,YAAY;IACV,SAAS;MACP,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,QAAQ,IAAI;MAC3B,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,QAAQ,QAAQ;MAChC,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,QAAQ,QAAQ;MAChC,OAAO;IACT;IACA,eAAe;MACb,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,mBAAmB,kBAAkB;MACpE,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,eAAe,cAAc;MAC5D,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,qBAAqB,eAAe;MACnE,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,WAAW;MAC1B,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,OAAO;MACjB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,MAAM;MACJ,OAAO;MACP,SAAS;MACT,SAAS,CAAC,WAAW,UAAU,aAAa,SAAS,KAAK;MAC1D,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;EACF;EACA,cAAc;IACZ,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;EACjB;EACA,aAAa;IACX,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,MAAM;MACJ,iBAAiB;IACnB;EACF;;EAEA,WAAW;IACT,iBAAiB;IACjB,mBAAmB;EACrB;EACA,aAAa;IACX,iBAAiB;IACjB,iBAAiB;EACnB;EACA,cAAc;IACZ,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;EACtB;EACA,iBAAiB;IACf,gBAAgB;IAChB,SAAS;EACX;EACA,cAAc;IACZ,YAAY;IACZ,kBAAkB;IAClB,QAAQ;MACN,SAAS;MACT,MAAM;MACN,OAAO;MACP,KAAK;MACL,QAAQ;MACR,QAAQ;MACR,OAAO;MACP,MAAM;MACN,QAAQ;MACR,MAAM;IACR;EACF;EACA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,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B;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,qBAAqB;MACnB,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,YAAY;MACV,SAAS;IACX;IACA,cAAc;MACZ,SAAS;IACX;IACA,aAAa;MACX,SAAS;IACX;IACA,eAAe;MACb,SAAS;IACX;EACF;EACA,YAAY;IACV,QAAQ;MACN,OAAO;MACP,kBAAkB;QAChB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,cAAc;IAChB;IACA,OAAO;MACL,OAAO;MACP,cAAc;QACZ,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,iBAAiB;IACnB;EACF;EACA,cAAc;IACZ,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,MAAM;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;IACX;IACA,MAAM;MACJ,mBAAmB;MACnB,iBAAiB;IACnB;EACF;EACA,SAAS;IACP,eAAe;EACjB;AACF;ATlSO,IUAMC,KAAiB;EAC5B,YAAY;IACV,SAAS;MACP,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,WAAW,IAAI;MAC9B,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,WAAW,WAAW;MACtC,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,WAAW,WAAW;MACtC,OAAO;IACT;IACA,eAAe;MACb,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,iBAAiB,gBAAgB;MAChE,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,SAAS,mBAAmB,sBAAsB;MACxE,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,WAAW;MAC1B,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,QAAQ;MAClB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,eAAe,UAAU,OAAO,OAAO,SAAS,KAAK;MACxE,OAAO;IACT;IACA,MAAM;MACJ,OAAO;MACP,SAAS;MACT,SAAS,CAAC,WAAW,UAAU,cAAc,SAAS,KAAK;MAC3D,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,YAAY,uBAAuB,OAAO;MAC7D,OAAO;IACT;EACF;EACA,cAAc;IACZ,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;EACjB;EACA,aAAa;IACX,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,MAAM;MACJ,iBAAiB;IACnB;EACF;;EAEA,WAAW;IACT,iBAAiB;IACjB,mBAAmB;EACrB;EACA,aAAa;IACX,iBAAiB;IACjB,iBAAiB;EACnB;EACA,cAAc;IACZ,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;EACtB;EACA,iBAAiB;IACf,gBAAgB;IAChB,SAAS;EACX;EACA,cAAc;IACZ,YAAY;IACZ,kBAAkB;IAClB,QAAQ;MACN,SAAS;MACT,MAAM;MACN,OAAO;MACP,KAAK;MACL,QAAQ;MACR,QAAQ;MACR,OAAO;MACP,MAAM;MACN,QAAQ;MACR,MAAM;IACR;EACF;EAEA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,qBAAqB;MACnB,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,YAAY;MACV,SAAS;IACX;IACA,cAAc;MACZ,SAAS;IACX;IACA,aAAa;MACX,SAAS;IACX;IACA,eAAe;MACb,SAAS;IACX;EACF;EACA,YAAY;IACV,QAAQ;MACN,OAAO;MACP,kBAAkB;QAChB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,cAAc;IAChB;IACA,OAAO;MACL,OAAO;MACP,cAAc;QACZ,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,iBAAiB;IACnB;EACF;EACA,cAAc;IACZ,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,MAAM;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;IACX;IACA,MAAM;MACJ,mBAAmB;MACnB,iBAAiB;IACnB;EACF;EACA,SAAS;IACP,eAAe;EACjB;AACF;AV1SO,IWAMC,KAAiB;EAC5B,YAAY;IACV,SAAS;MACP,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,YAAY,MAAM,YAAY;MAC7C,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,YAAY,cAAc,cAAc,cAAc;MACtE,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,YAAY,cAAc,cAAc,cAAc;MACtE,OAAO;IACT;IACA,eAAe;MACb,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,aAAa,UAAU;MACtC,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,SAAS;MAC5B,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,MAAM;MACJ,OAAO;MACP,SAAS;MACT,SAAS,CAAC,QAAQ,UAAU,SAAS,SAAS,OAAO,YAAY,MAAM;MACvE,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,UAAU,WAAW,oBAAoB,MAAM;MACzD,OAAO;IACT;EACF;EACA,cAAc;IACZ,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;EACjB;EACA,aAAa;IACX,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,MAAM;MACJ,iBAAiB;IACnB;EACF;;EAEA,WAAW;IACT,iBAAiB;IACjB,mBAAmB;EACrB;EACA,aAAa;IACX,iBAAiB;IACjB,iBAAiB;EACnB;EACA,cAAc;IACZ,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;EACtB;EACA,iBAAiB;IACf,gBAAgB;IAChB,SAAS;EACX;EACA,cAAc;IACZ,YAAY;IACZ,kBAAkB;IAClB,QAAQ;MACN,SAAS;MACT,MAAM;MACN,OAAO;MACP,KAAK;MACL,QAAQ;MACR,QAAQ;MACR,OAAO;MACP,MAAM;MACN,QAAQ;MACR,MAAM;IACR;EACF;EAEA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,qBAAqB;MACnB,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,YAAY;MACV,SAAS;IACX;IACA,cAAc;MACZ,SAAS;IACX;IACA,aAAa;MACX,SAAS;IACX;IACA,eAAe;MACb,SAAS;IACX;EACF;EACA,YAAY;IACV,QAAQ;MACN,OAAO;MACP,kBAAkB;QAChB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,cAAc;IAChB;IACA,OAAO;MACL,OAAO;MACP,cAAc;QACZ,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,iBAAiB;IACnB;EACF;EACA,cAAc;IACZ,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,MAAM;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;IACX;IACA,MAAM;MACJ,mBAAmB;MACnB,iBAAiB;IACnB;EACF;EACA,SAAS;IACP,eAAe;EACjB;AACF;AX7UO,IYAMC,KAAiB;EAC5B,YAAY;IACV,SAAS;MACP,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,WAAW,KAAK;MAC/B,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,WAAW,WAAW;MACtC,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,WAAW,WAAW;MACtC,OAAO;IACT;IACA,eAAe;MACb,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,MAAM,eAAe,mBAAmB;MAC9D,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,MAAM,YAAY,WAAW;MACnD,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,SAAS;MACxB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM;MAChB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,OAAO,eAAe,WAAW,OAAO,QAAQ,SAAS,KAAK;MACxE,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,MAAM;MACJ,OAAO;MACP,SAAS;MACT,SAAS,CAAC,OAAO,WAAW,SAAS,SAAS,KAAK;MACnD,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;EACF;EACA,cAAc;IACZ,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;EACjB;EACA,aAAa;IACX,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,MAAM;MACJ,iBAAiB;IACnB;EACF;;EAEA,WAAW;IACT,iBAAiB;IACjB,mBAAmB;EACrB;EACA,aAAa;IACX,iBAAiB;IACjB,iBAAiB;EACnB;EACA,cAAc;IACZ,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;EACtB;EACA,iBAAiB;IACf,gBAAgB;IAChB,SAAS;EACX;EACA,cAAc;IACZ,YAAY;IACZ,kBAAkB;IAClB,QAAQ;MACN,SAAS;MACT,MAAM;MACN,OAAO;MACP,KAAK;MACL,QAAQ;MACR,QAAQ;MACR,OAAO;MACP,MAAM;MACN,QAAQ;MACR,MAAM;IACR;EACF;EAEA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;MACT,mBAAmB;IACrB;IACA,cAAc;MACZ,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,mBAAmB;QACjB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,eAAe;MACb,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,aAAa;MACX,SAAS;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;IACF;IACA,qBAAqB;MACnB,SAAS;IACX;IACA,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,YAAY;MACV,SAAS;IACX;IACA,cAAc;MACZ,SAAS;IACX;IACA,aAAa;MACX,SAAS;IACX;IACA,eAAe;MACb,SAAS;IACX;EACF;EACA,YAAY;IACV,QAAQ;MACN,OAAO;MACP,kBAAkB;QAChB,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,cAAc;IAChB;IACA,OAAO;MACL,OAAO;MACP,cAAc;QACZ,OAAO;QACP,OAAO;QACP,OAAO;QACP,MAAM;MACR;MACA,iBAAiB;IACnB;EACF;EACA,cAAc;IACZ,QAAQ;MACN,SAAS;IACX;IACA,MAAM;MACJ,MAAM;MACN,SAAS;IACX;IACA,MAAM;MACJ,SAAS;IACX;IACA,MAAM;MACJ,mBAAmB;MACnB,iBAAiB;IACnB;EACF;EACA,SAAS;IACP,eAAe;EACjB;AACF;AZjTO,IaAMC,KAAiB;EAC5B,YAAY;IACV,SAAS;MACP,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,YAAY,MAAM,MAAM,MAAM;MAC7C,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,YAAY,cAAc,MAAM,QAAQ,KAAK;MAC7D,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,YAAY,cAAc,MAAM,MAAM;MACtD,OAAO;IACT;IACA,eAAe;MACb,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,aAAa;MACX,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,YAAY;MACV,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,WAAW;MACT,OAAO;MACP,SAAS;MACT,SAAS,CAAC,KAAK,aAAa,QAAQ,IAAI;MACxC,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS,CAAC,SAAS,IAAI;MACvB,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;IACA,MAAM;MACJ,OAAO;MACP,SAAS;MACT,SAAS,CAAC,MAAM,MAAM,QAAQ,MAAM,MAAM,KAAK;MAC/C,OAAO;IACT;IACA,OAAO;MACL,OAAO;MACP,SAAS;MACT,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;MACF;MACA,OAAO;IACT;EACF;EACA,cAAc;IACZ,SAAS;IACT,SAAS;IACT,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;EACjB;EACA,aAAa;IACX,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,OAAO;MACL,iBAAiB;IACnB;IACA,MAAM;MACJ,iBAAiB;IACnB;EACF;;EAEA,WAAW;IACT,iBAAiB;IACjB,mBAAmB;EACrB;EACA,aAAa;IACX,iBAAiB;IACjB,iBAAiB;EACnB;EACA,cAAc;IACZ,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;EACtB;EACA,iBAAiB;IACf,gBAAgB;IAChB,SAAS;EACX;EACA,cAAc;IACZ,YAAY;IACZ,kBAAkB;IAClB,QAAQ;MACN,SAAS;MACT,MAAM;MACN,OAAO;MACP,KAAK;MACL,QAAQ;MACR,QAAQ;MACR,OAAO;MACP,MAAM;MACN,QAAQ;MACR,MAAM;IACR;EACF;EAEA,oBAAoB;IAClB,MAAM;MACJ,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,WAAW;MACT,SAAS;MACT,mBAAmB;IACrB;IACA,QAAQ;MACN,SAAS;MACT,mBAAmB;IACrB;IACA,MAAM;MACJ,SAAS;MAC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",
  "names": ["found", "f", "map", "size", "from", "to", "f", "text", "first", "last", "index", "copy", "found", "round", "_", "slice", "doc", "base", "i", "min", "max", "type", "nfa", "edge", "expr", "node", "states", "defaults", "name", "options", "mark", "DOMParser", "style", "wrap", "space", "index", "del", "f", "from", "to", "map", "id", "doc", "slice", "parent", "tr", "found", "style", "base", "joinable", "first", "wrap", "matches", "match", "type", "close", "last", "TransformError", "tr", "from", "to", "found", "doc", "id", "index", "text", "last", "map", "slice", "_", "f", "index", "from", "to", "doc", "x", "_", "element", "first", "f", "size", "enter", "base", "text", "wrap", "copy", "spec", "found", "preMatch", "matches", "empty", "tr", "slice", "DOMParser", "dom", "event", "handlers", "sel", "cut", "isNode", "NodeType", "options", "i", "oldOffset", "find", "anchor", "parse", "from", "to", "f", "found", "prop", "text", "tr", "_", "mac", "ie", "mac", "shift", "map", "copy", "tr", "empty", "lift", "first", "to", "index", "wrap", "tr", "at", "setBlockType", "from", "commands", "mac", "wrap", "tr", "found", "first", "tr", "slice", "doc", "tr", "command", "args", "run", "fn", "_a", "index", "text", "find", "from", "to", "commands", "matches", "handlers", "Mark", "options", "range", "createParagraphNear", "originalCreateParagraphNear", "deleteRange", "deleteSelection", "originalDeleteSelection", "exitCode", "originalExitCode", "keys", "min", "max", "DOMParser", "selectionToInsertionEnd", "last", "map", "v", "joinUp", "originalJoinUp", "joinDown", "originalJoinDown", "joinBackward", "originalJoinBackward", "joinForward", "originalJoinForward", "joinTextblockBackward", "originalCommand", "joinTextblockForward", "normalizeKeyName", "shift", "f", "empty", "lift", "isActive", "originalLift", "liftEmptyBlock", "originalLiftEmptyBlock", "liftListItem", "originalLiftListItem", "newlineInCode", "originalNewlineInCode", "selectAll", "selectNodeBackward", "originalSelectNodeBackward", "selectNodeForward", "originalSelectNodeForward", "selectParentNode", "originalSelectParentNode", "selectTextblockEnd", "originalSelectTextblockEnd", "selectTextblockStart", "originalSelectTextblockStart", "document", "defaultBlockAt", "getText", "options", "from", "to", "node", "index", "_", "from", "to", "doc", "empty", "from", "to", "range", "from", "to", "x", "tr", "empty", "commands", "setBlockType", "doc", "sinkListItem", "originalSinkListItem", "splitBlock", "defaultBlockAt", "first", "wrap", "newNextTypeAttributes", "nextType", "options", "isActive", "wrapIn", "originalWrapIn", "wrapInList", "originalWrapInList", "isEmpty", "index", "style", "fn", "focus", "blur", "getText", "Mark", "options", "tr", "removeMark", "Node", "x", "_e", "from", "to", "v", "x", "c", "options", "x", "z", "H", "_i", "_i2", "_t", "c", "_t2", "Mark", "commands", "Mark", "commands", "starInputRegex", "starPasteRegex", "underscoreInputRegex", "underscorePasteRegex", "Mark", "commands", "inputRegex", "pasteRegex", "Mark", "style", "commands", "Mark", "style", "commands", "Node", "element", "Node", "element", "Node", "map", "index", "map", "map", "doc", "from", "index", "tr", "f", "normalize", "first", "last", "tr", "options", "tr", "slice", "first", "empty", "map", "found", "index", "from", "to", "handleTripleClick", "doc", "_", "copy", "v", "k", "map", "f", "create", "from", "f", "f", "create", "args", "from", "isNaN", "parseInt", "keys", "v", "v", "v", "create", "create", "getRandomValues", "getRandomValues", "c", "create", "f", "v", "keys", "forEach", "f", "keys", "f", "args", "options", "create", "doc", "doc", "timeout", "create", "create", "args", "create", "args", "style", "create", "f", "del", "id", "length", "from", "i", "index", "create", "from", "doc", "f", "id", "any", "from", "doc", "i", "c", "f", "index", "doc", "index", "doc", "snapshot", "create", "id", "index", "f", "Transaction", "doc", "create", "struct", "doc", "i", "hasContent", "f", "Transaction", "tr", "yt", "create", "keys", "c", "index", "f", "c", "snapshot", "index", "doc", "create", "length", "snapshot", "v", "map", "index", "length", "c", "f", "doc", "text", "copy", "k", "first", "element", "from", "create", "forEach", "keys", "id", "item", "f", "isVisible", "snapshot", "create", "tr", "doc", "id", "_", "text", "equalAttrs", "keys", "c", "index", "tr", "setMeta", "createRelativePosition", "from", "to", "getSelection", "_", "tr", "setMeta", "tr", "undoManager", "tr", "options", "rect", "timeout", "doc", "index", "handleKeyDown", "arrow", "tr", "Node", "commands", "tr", "RopeSequence", "append", "from", "to", "forEach", "f", "map", "Leaf", "Append", "appendInner", "dist_default", "Item", "map", "from", "to", "last", "dist_default", "history", "tr", "options", "redo", "tr", "command", "undo", "redo", "undo", "redo", "assign", "k", "c", "nextState", "regexp", "run$1", "index", "first", "jr", "scheme", "options", "run", "warn", "scheme", "warn", "run", "run$1", "find", "options", "options", "tr", "slice", "empty", "find", "Mark", "element", "text", "validate", "find", "Text", "Node", "ar", "de", "en", "es", "fr", "is", "ja", "ko", "nl", "pl", "pt", "ru", "vi", "zh", "esmDependencies", "initializeESMDependencies", "vals", "removeDuplicates", "array", "by", "seen", "item", "key", "findDuplicates", "items", "filtered", "el", "index", "UniqueID", "Extension", "testOptions", "v4", "element", "attributes", "dragSourceElement", "transformPasted", "Plugin", "PluginKey", "transactions", "oldState", "newState", "docChanges", "transaction", "filterTransactions", "tr", "_a", "_b", "types", "attributeName", "generateID", "transform", "combineTransactionSteps", "mapping", "getChangedRanges", "newRange", "newNodes", "findChildrenInRange", "node", "newIds", "id", "duplicatedNewIds", "pos", "initialDoc", "jsonNode", "deleted", "view", "handleDragstart", "event", "slice", "removeId", "fragment", "list", "nodeWithoutId", "Fragment", "Slice", "getBlockInfo", "blockContainer", "contentNode", "contentType", "numChildBlocks", "getBlockInfoFromPos", "doc", "outerBlockGroupEndPos", "$pos", "maxDepth", "depth", "startPos", "endPos", "isLinkInlineContent", "content", "isPartialLinkInlineContent", "isStyledTextInlineContent", "UnreachableCaseError", "val", "assertEmpty", "obj", "throwError", "dataTest", "rest", "styledTextToNodes", "styledText", "schema", "styleSchema", "marks", "style", "value", "config", "text", "linkToNodes", "link", "linkMark", "styledTextArrayToNodes", "nodes", "inlineContentToNodes", "blockContent", "blockOrInlineContentToContentNode", "tableContentToNodes", "tableContent", "rowNodes", "row", "columnNodes", "cell", "pNode", "textNodes", "cellNode", "rowNode", "block", "type", "blockToNode", "children", "child", "groupNode", "contentNodeToTableContent", "inlineContentSchema", "ret", "contentNodeToInlineContent", "currentContent", "nodeToCustomInlineContent", "styles", "mark", "props", "icConfig", "attr", "propSchema", "nodeToBlock", "blockSchema", "blockCache", "cachedBlock", "blockInfo", "blockSpec", "blockConfig", "i", "options", "serializeNodeInner", "serializer", "editor", "toExternalHTML", "dom", "contentDOM", "DOMSerializer", "blockContentNode", "blockGroupNode", "impl", "serializeProseMirrorFragment", "internalHTML", "parent", "simplifyBlocks", "deps", "listItemBlockTypes", "simplifyBlocksHelper", "tree", "blockGroup", "numChildElements", "activeList", "properties", "classNames", "isListItemBlock", "listItemBlockType", "numElementsRemoved", "listItemElement", "numElementsAdded", "createExternalHTMLExporter", "blocks", "createInternalHTMLSerializer", "getCurrentBlockContentType", "isAppleOS", "formatKeyboardShortcut", "shortcut", "ctrlText", "mergeCSSClasses", "classes", "c", "isSafari", "createDefaultBlockDOMOutputSpec", "blockName", "htmlTag", "blockContentHTMLAttributes", "inlineContentHTMLAttributes", "attribute", "inlineContent", "defaultBlockToHTML", "toDOM", "renderSpec", "defaultProps", "inheritedProps", "camelToDataKebab", "str", "filenameFromURL", "url", "parts", "propsToAttributes", "tiptapAttributes", "name", "_spec", "spec", "asNumber", "getBlockFromPos", "getPos", "tipTapEditor", "blockIdentifier", "wrapInBlockStructure", "blockType", "blockProps", "isFileBlock", "domAttributes", "prop", "createStronglyTypedTiptapNode", "Node", "createInternalBlockSpec", "implementation", "createBlockSpecFromStronglyTypedTiptapNode", "requiredExtensions", "getBlockSchemaFromSpecs", "specs", "getParseRules", "customParseFunction", "rules", "createBlockSpec", "blockImplementation", "div", "blockContentDOMAttributes", "output", "addInlineContentAttributes", "inlineContentType", "inlineContentProps", "addInlineContentKeyboardShortcuts", "resolvedPos", "createInternalInlineContentSpec", "createInlineContentSpecFromTipTapNode", "getInlineContentSchemaFromSpecs", "getInlineContentParseRules", "htmlElement", "createInlineContentSpec", "inlineContentConfig", "inlineContentImplementation", "stylePropsToAttributes", "addStyleAttributes", "styleType", "styleValue", "createInternalStyleSpec", "createStyleSpecFromTipTapMark", "getStyleSchemaFromSpecs", "getStyleParseRules", "createStyleSpec", "styleConfig", "styleImplementation", "Mark", "renderResult", "createDefaultFilePreview", "file", "icon", "fileName", "createFileAndCaptionWrapper", "fileAndCaptionWrapper", "caption", "createAddFileButton", "buttonText", "buttonIcon", "addFileButton", "addFileButtonIcon", "addFileButtonText", "addFileButtonMouseDownHandler", "addFileButtonClickHandler", "parseEmbedElement", "embedElement", "parseFigureElement", "figureElement", "targetTag", "targetElement", "captionElement", "createLinkWithCaption", "wrapper", "fileCaption", "createFigureWithCaption", "figure", "createResizeHandlesWrapper", "getWidth", "setWidth", "leftResizeHandle", "rightResizeHandle", "resizeParams", "windowMouseMoveHandler", "newWidth", "minWidth", "windowMouseUpHandler", "elementMouseEnterHandler", "elementMouseLeaveHandler", "leftResizeHandleMouseDownHandler", "rightResizeHandleMouseDownHandler", "parseAudioElement", "audioElement", "audioPropSchema", "audioBlockConfig", "audioRender", "fileBlockAudioIcon", "addAudioButton", "audio", "downloadUrl", "audioParse", "parsedFigure", "audioToExternalHTML", "AudioBlock", "filePropSchema", "fileBlockConfig", "fileRender", "fileParse", "fileToExternalHTML", "fileSrcLink", "FileBlock", "uploadToTmpFilesDotOrg_DEV_ONLY", "body", "parseImageElement", "imageElement", "previewWidth", "imagePropSchema", "imageBlockConfig", "imageRender", "fileBlockImageIcon", "addImageButton", "image", "width", "imageParse", "imageToExternalHTML", "ImageBlock", "parseVideoElement", "videoElement", "videoPropSchema", "videoBlockConfig", "videoRender", "fileBlockVideoIcon", "addVideoButton", "video", "videoParse", "videoToExternalHTML", "VideoBlock", "BackgroundColorMark", "HTMLAttributes", "BackgroundColor", "TextColorMark", "TextColor", "headingPropSchema", "HeadingBlockContent", "parsed", "level", "InputRule", "state", "chain", "range", "Heading", "handleEnter", "selectionEmpty", "commands", "bulletListItemPropSchema", "BulletListItemBlockContent", "BulletListItem", "PLUGIN_KEY", "NumberedListIndexingPlugin", "_transactions", "_oldState", "modified", "newIndex", "isFirstBlockInDoc", "prevBlockInfo", "prevBlockContentNode", "prevBlockIndex", "numberedListItemPropSchema", "NumberedListItemBlockContent", "NumberedListItem", "checkListItemPropSchema", "checkListItemBlockContent", "checkbox", "checkboxWrapper", "changeHandler", "label", "CheckListItem", "paragraphPropSchema", "ParagraphBlockContent", "Paragraph", "TableExtension", "columnResizing", "tableEditing", "selection", "selectionIsEmpty", "selectionIsAtStartOfNode", "selectionIsInTableParagraphNode", "extension", "context", "callOrReturn", "getExtensionField", "tablePropSchema", "TableBlockContent", "TableParagraph", "mergeAttributes", "Table", "TableHeader", "TableCell", "TableRow", "defaultBlockSpecs", "defaultBlockSchema", "defaultStyleSpecs", "Bold", "Italic", "Underline", "Strike", "Code", "defaultStyleSchema", "defaultInlineContentSpecs", "defaultInlineContentSchema", "checkDefaultBlockTypeInSchema", "checkDefaultInlineContentTypeInSchema", "checkBlockIsDefaultType", "checkBlockIsFileBlock", "checkBlockIsFileBlockWithPreview", "checkBlockIsFileBlockWithPlaceholder", "checkBlockTypeHasDefaultProp", "checkBlockHasDefaultProp", "getNodeById", "targetNode", "posBeforeNode", "insertBlocks", "blocksToInsert", "referenceBlock", "placement", "nodesToInsert", "insertedBlocks", "updateBlock", "blockToUpdate", "update", "ttEditor", "blockContainerNode", "removeBlocksWithCallback", "blocksToRemove", "callback", "idsOfBlocksToRemove", "removedBlocks", "removedSize", "oldDocSize", "newDocSize", "notFoundIds", "removeBlocks", "replaceBlocks", "idOfFirstBlock", "insertContentAt", "position", "from", "to", "isOnlyTextContent", "isOnlyBlockContent", "selectionToInsertionEnd", "removeUnderlines", "removeUnderlinesHelper", "addSpacesToCheckboxes", "helper", "nextChild", "cleanHTMLToMarkdown", "cleanHTMLString", "blocksToMarkdown", "externalHTML", "getChildIndex", "isWhitespaceNode", "liftNestedListsToParent", "parentListItem", "siblingsAfter", "sibling", "siblingContainer", "createGroups", "listItem", "_detachedDoc", "detachedDoc", "nestedListsToBlockNoteStructure", "elementOrHTML", "HTMLToBlocks", "html", "icSchema", "pmSchema", "htmlNode", "parentNode", "DOMParser", "code", "result", "markdownToBlocks", "markdown", "htmlString", "EventEmitter", "__publicField", "fn", "args", "callbacks", "FilePanelView", "pluginKey", "pmView", "emitUpdate", "blockElement", "prevState", "pluginState", "filePanelPluginKey", "FilePanelProsemirrorPlugin", "editorView", "_view", "FormattingToolbarView", "empty", "isEmptyTextBlock", "isTextSelection", "editorWrapper", "composing", "isSame", "ranges", "shouldShow", "isNodeSelection", "posToDOMRect", "formattingToolbarPluginKey", "FormattingToolbarProsemirrorPlugin", "LinkToolbarView", "hoveredLinkElement", "posInHoveredLinkMark", "resolvedPosInHoveredLinkMark", "marksAtPos", "getMarkRange", "prevLinkMark", "linkToolbarPluginKey", "LinkToolbarProsemirrorPlugin", "MultipleNodeSelection", "Selection", "$anchor", "$head", "_pos", "fromResult", "toResult", "dragImageElement", "getDraggableBlockFromElement", "blockPositionFromElement", "docView", "desc", "blockPositionsFromSelection", "beforeFirstBlockPos", "afterLastBlockPos", "selectionStartInBlockContent", "selectionEndInBlockContent", "minDepth", "startFirstBlockPos", "endLastBlockPos", "setDragImage", "parentClone", "getElementIndex", "parentElement", "firstSelectedBlockIndex", "lastSelectedBlockIndex", "unsetDragImage", "inheritedClasses", "className", "rootEl", "dragStart", "editorBoundingBox", "coords", "elements", "blockEl", "draggedBlockInSelection", "multipleBlocksSelected", "NodeSelection", "selectedSlice", "plainText", "SideMenuView", "_c", "_d", "blockContentBoundingBox", "evt", "_event", "editorOuterBoundingBox", "cursorWithinEditor", "prevBlockId", "newBlockInsertionPos", "newBlockContentPos", "sideMenuPluginKey", "SideMenuProsemirrorPlugin", "findBlock", "findParentNode", "SuggestionMenuView", "decorationNode", "suggestionMenuPluginKey", "menuName", "prev", "next", "started", "stopped", "SuggestionMenuProseMirrorPlugin", "triggerCharacter", "triggerCharacters", "suggestionPluginTransactionMeta", "_from", "_to", "suggestionPluginState", "blockNode", "DecorationSet", "Decoration", "createSuggestionMenu", "setHiddenDragImage", "unsetHiddenDragImage", "domCellAround", "target", "hideElementsWithClassNames", "elementsToHide", "TableHandlesView", "colIndex", "rowIndex", "cellRect", "tableRect", "tableBlock", "boundedMouseCoords", "tableCellElements", "tableCellElement", "emitStateUpdate", "oldIndex", "dispatchDecorationsTransaction", "mousePos", "tableHandlesPluginKey", "rows", "rowToMove", "cellsToMove", "tableElement", "cellElement", "TableHandlesProsemirrorPlugin", "decorations", "tableResolvedPos", "tableNode", "rowResolvedPos", "cellResolvedPos", "decorationPos", "widget", "selectedFragmentToHTML", "selectedFragment", "createCopyToClipboardExtension", "acceptedMIMETypes", "checkFileExtensionsMatch", "fileExtension1", "fileExtension2", "checkMIMETypesMatch", "mimeType1", "mimeType2", "types1", "types2", "handleFileInsertion", "dataTransfer", "format", "mimeType", "fileBlockConfigs", "fileBlockType", "isFileExtension", "updateData", "fileBlock", "createPasteFromClipboardExtension", "data", "createDropFileExtension", "BackgroundColorExtension", "TextAlignmentExtension", "TextColorExtension", "TrailingNode", "plugin", "_", "__", "shouldInsertNodeAtEnd", "endPosition", "_state", "lastNode", "lastContentNode", "NonEditableBlockPlugin", "TextSelection", "nodeAttributes", "PreviousBlockTypePlugin", "timeout", "_editorView", "_prevState", "currentTransactionOriginalOldBlockAttrs", "oldNodes", "findChildren", "oldNodesById", "oldNode", "oldContentNode", "newContentNode", "newAttrs", "oldAttrs", "prevAttrs", "decorationAttrs", "nodeAttr", "decoration", "BlockAttributes", "BlockContainer", "attrs", "HTMLAttr", "blockOuter", "blockHTMLAttributes", "dispatch", "newBlock", "posInBlock", "childNodes", "oldType", "newType", "oldContentType", "newContentType", "posBetweenBlocks", "nextNodeIsBlock", "prevNodeIsBlock", "nextBlockInfo", "childBlocksStart", "childBlocksEnd", "childBlocksRange", "prevBlockEndPos", "keepType", "keepProps", "originalBlockContent", "newBlockContent", "selectionAtBlockStart", "isParagraph", "blockAtDocStart", "blockAtDocEnd", "selectionAtBlockEnd", "hasChildBlocks", "oldDepth", "newPos", "newDepth", "blockEmpty", "blockIndented", "BlockGroup", "blockGroupHTMLAttributes", "Doc", "getBlockNoteExtensions", "opts", "extensions", "Gapcursor", "HardBreak", "Text", "Link", "styleSpec", "a", "inlineContentSpec", "ext", "Dropcursor", "Collaboration", "defaultRender", "user", "cursor", "nonbreakingSpace1", "nonbreakingSpace2", "CollaborationCursor", "History", "disableExtensions", "ex", "removeChild", "n", "f", "nestedChild", "container", "removeUndefined", "BlockNoteSchema", "BlockNoteTipTapEditor", "TiptapEditor", "cache", "oldCreateAndFill", "pmNodes", "b", "createDocument", "e", "EditorState", "EditorView", "PlaceholderPlugin", "placeholders", "styleEl", "nonce", "styleSheet", "getBaseSelector", "additionalSelectors", "getSelector", "mustBeFocused", "mustBeFocusedSelector", "blockTypeSelector", "placeholder", "before", "dec", "blockNoteTipTapOptions", "BlockNoteEditor", "anyOpts", "newOptions", "blockNoteUIExtension", "initialContent", "tiptapOptions", "_e", "_g", "_f", "getSchema", "reverse", "traverseBlockArray", "blockArray", "nodeIndex", "numNodes", "prevNode", "nextNode", "targetBlock", "end", "start", "editable", "cb", "emojiMart", "getDefaultEmojiPickerItems", "query", "emojiMartData", "emoji", "setSelectionToNextContentEditableBlock", "insertOrUpdateBlock", "currentBlock", "insertedBlock", "getDefaultSlashMenuItems", "filterSuggestionItems", "title", "aliases", "alias", "textShorthandToStyledText", "partialContentToInlineContent", "partialContent", "partialBlocksToBlocksForTesting", "partialBlocks", "partialBlock", "partialBlockToBlockForTesting", "withDefaults", "propKey", "propValue", "addIdsToBlock", "addIdsToBlocks"]
}
